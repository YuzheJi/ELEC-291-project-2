0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sat Mar 22 15:47:02 2025
0000              5   ;--------------------------------------------------------
                  5   $name bmm150
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _bmm150_read_mag_data_PARM_2
0000             27            public _bmm150_set_presetmode_PARM_2
0000             28            public _bmm150_set_op_mode_PARM_2
0000             29            public _bmm150_set_regs_PARM_4
0000             30            public _bmm150_set_regs_PARM_3
0000             31            public _bmm150_set_regs_PARM_2
0000             32            public _bmm150_init
0000             33            public _bmm150_set_regs
0000             34            public _bmm150_get_regs
0000             35            public _bmm150_set_op_mode
0000             36            public _bmm150_set_presetmode
0000             37            public _bmm150_read_mag_data
0000             38   ;--------------------------------------------------------
0000             39   ; Special Function Registers
0000             40   ;--------------------------------------------------------
0000             41   ;--------------------------------------------------------
0000             42   ; special function bits
0000             43   ;--------------------------------------------------------
0000             44   ;--------------------------------------------------------
0000             45   ; overlayable register banks
0000             46   ;--------------------------------------------------------
0000             47            rbank0 segment data overlay
0000             48   ;--------------------------------------------------------
0000             49   ; internal ram data
0000             50   ;--------------------------------------------------------
0000             51            rseg R_DSEG
0000             52   _bmm150_init_dev_1_48:
0000             53            ds 3
0003             54   _bmm150_set_regs_PARM_2:
0003             55            ds 3
0006             56   _bmm150_set_regs_PARM_3:
0006             57            ds 4
000A             58   _bmm150_set_regs_PARM_4:
000A             59            ds 3
000D             60   _bmm150_set_regs_reg_addr_1_54:
000D             61            ds 1
000E             62   _bmm150_set_regs_sloc0_1_0:
000E             63            ds 3
0011             64   _bmm150_set_op_mode_PARM_2:
0011             65            ds 3
0014             66   _bmm150_set_presetmode_PARM_2:
0014             67            ds 3
0017             68   _bmm150_read_mag_data_PARM_2:
0017             69            ds 3
001A             70   _set_power_control_bit_PARM_2:
001A             71            ds 3
001D             72   _write_op_mode_PARM_2:
001D             73            ds 3
0020             74   _set_xy_rep_PARM_2:
0020             75            ds 3
0023             76   _set_odr_PARM_2:
0023             77            ds 3
0026             78   _set_odr_xyz_rep_PARM_2:
0026             79            ds 3
0029             80   _set_control_measurement_xyz_PARM_2:
0029             81            ds 3
002C             82   _compensate_x_PARM_2:
002C             83            ds 2
002E             84   _compensate_x_PARM_3:
002E             85            ds 3
0031             86   _compensate_x_mag_data_x_1_110:
0031             87            ds 2
0033             88   _compensate_x_sloc0_1_0:
0033             89            ds 3
0036             90   _compensate_x_sloc1_1_0:
0036             91            ds 2
0038             92   _compensate_x_sloc2_1_0:
0038             93            ds 4
003C             94   _compensate_y_PARM_2:
003C             95            ds 2
003E             96   _compensate_y_PARM_3:
003E             97            ds 3
0041             98   _compensate_y_mag_data_y_1_119:
0041             99            ds 2
0043            100   _compensate_y_sloc0_1_0:
0043            101            ds 2
0045            102   _compensate_y_sloc1_1_0:
0045            103            ds 4
0049            104   ;--------------------------------------------------------
0049            105   ; overlayable items in internal ram 
0049            106   ;--------------------------------------------------------
0000            107            rseg    R_OSEG
0000            108            rseg    R_OSEG
0000            109   _are_settings_changed_PARM_2:
0000            110            ds 2
0002            111   ;--------------------------------------------------------
0002            112   ; indirectly addressable internal ram data
0002            113   ;--------------------------------------------------------
0000            114            rseg R_ISEG
0000            115   ;--------------------------------------------------------
0000            116   ; absolute internal ram data
0000            117   ;--------------------------------------------------------
0000            118            DSEG
0000            119   ;--------------------------------------------------------
0000            120   ; bit data
0000            121   ;--------------------------------------------------------
0000            122            rseg R_BSEG
0000            123   ;--------------------------------------------------------
0000            124   ; paged external ram data
0000            125   ;--------------------------------------------------------
0000            126            rseg R_PSEG
0000            127   ;--------------------------------------------------------
0000            128   ; external ram data
0000            129   ;--------------------------------------------------------
0000            130            rseg R_XSEG
0000            131   _bmm150_init_chip_id_1_49:
0000            132            ds 1
0001            133   _bmm150_set_regs_rslt_1_55:
0001            134            ds 1
0002            135   _bmm150_set_op_mode_rslt_1_64:
0002            136            ds 1
0003            137   _bmm150_read_mag_data_reg_data_1_73:
0003            138            ds 8
000B            139   _bmm150_read_mag_data_raw_mag_data_1_73:
000B            140            ds 6
0011            141   _null_ptr_check_rslt_1_76:
0011            142            ds 1
0012            143   _set_power_control_bit_rslt_1_80:
0012            144            ds 1
0013            145   _set_power_control_bit_reg_data_1_80:
0013            146            ds 1
0014            147   _read_trim_registers_rslt_1_84:
0014            148            ds 1
0015            149   _read_trim_registers_trim_x1y1_1_84:
0015            150            ds 2
0017            151   _read_trim_registers_trim_xyz_data_1_84:
0017            152            ds 4
001B            153   _read_trim_registers_trim_xy1xy2_1_84:
001B            154            ds 10
0025            155   _write_op_mode_rslt_1_89:
0025            156            ds 1
0026            157   _write_op_mode_reg_data_1_89:
0026            158            ds 1
0027            159   _suspend_to_sleep_mode_rslt_1_92:
0027            160            ds 1
0028            161   _set_xy_rep_rep_xy_1_96:
0028            162            ds 1
0029            163   _set_odr_rslt_1_98:
0029            164            ds 1
002A            165   _set_odr_reg_data_1_98:
002A            166            ds 1
002B            167   _set_odr_xyz_rep_rslt_1_101:
002B            168            ds 1
002C            169   _set_control_measurement_xyz_rslt_1_104:
002C            170            ds 1
002D            171   _set_control_measurement_xyz_reg_data_1_104:
002D            172            ds 1
002E            173   _are_settings_changed_settings_changed_1_107:
002E            174            ds 1
002F            175   _compensate_x_retval_1_111:
002F            176            ds 2
0031            177   _compensate_x_process_comp_x0_1_111:
0031            178            ds 2
0033            179   _compensate_y_retval_1_120:
0033            180            ds 2
0035            181   _compensate_y_process_comp_y0_1_120:
0035            182            ds 2
0037            183   ;--------------------------------------------------------
0037            184   ; absolute external ram data
0037            185   ;--------------------------------------------------------
0000            186            XSEG
0000            187   ;--------------------------------------------------------
0000            188   ; external initialized ram data
0000            189   ;--------------------------------------------------------
0000            190            rseg R_IXSEG
0000            191            rseg R_HOME
0000            192            rseg R_GSINIT
0000            193            rseg R_CSEG
0000            194   ;--------------------------------------------------------
0000            195   ; Interrupt vectors
0000            196   ;--------------------------------------------------------
0000            197   ;--------------------------------------------------------
0000            198   ; global & static initialisations
0000            199   ;--------------------------------------------------------
0000            200            rseg R_HOME
0000            201            rseg R_GSINIT
0000            202            rseg R_GSINIT
0000            203   ;--------------------------------------------------------
0000            204   ; data variables initialization
0000            205   ;--------------------------------------------------------
0000            206            rseg R_DINIT
0000            207            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            208   ;--------------------------------------------------------
0000            209   ; code
0000            210   ;--------------------------------------------------------
0000            211            rseg R_CSEG
0000            212   ;------------------------------------------------------------
0000            213   ;Allocation info for local variables in function 'bmm150_init'
0000            214   ;------------------------------------------------------------
0000            215   ;dev                       Allocated with name '_bmm150_init_dev_1_48'
0000            216   ;rslt                      Allocated to registers r5 
0000            217   ;chip_id                   Allocated with name '_bmm150_init_chip_id_1_49'
0000            218   ;------------------------------------------------------------
0000            219   ;        bmm150.c:530: xdata int8_t bmm150_init(struct bmm150_dev *dev)
0000            220   ;        -----------------------------------------
0000            221   ;         function bmm150_init
0000            222   ;        -----------------------------------------
0000            223   _bmm150_init:
0000            224            using   0
0000 858250     225            mov     _bmm150_init_dev_1_48,dpl
0003 858351     226            mov     (_bmm150_init_dev_1_48 + 1),dph
0006 85F052     227            mov     (_bmm150_init_dev_1_48 + 2),b
0009            228   ;        bmm150.c:534: chip_id = 0; 
0009 904DF0     229            mov     dptr,#_bmm150_init_chip_id_1_49
000C E4         230            clr     a
000D F0         231            movx    @dptr,a
000E            232   ;        bmm150.c:537: rslt = set_power_control_bit(BMM150_POWER_CNTRL_ENABLE, dev);
000E 855040     233            mov     _set_power_control_bit_PARM_2,_bmm150_init_dev_1_48
0011 855141     234            mov     (_set_power_control_bit_PARM_2 + 1),(_bmm150_init_dev_1_48 + 1)
0014 855242     235            mov     (_set_power_control_bit_PARM_2 + 2),(_bmm150_init_dev_1_48 + 2)
0017 758201     236            mov     dpl,#0x01
001A 120000     237            lcall   _set_power_control_bit
001D AD82       238            mov     r5,dpl
001F            239   ;        bmm150.c:538: printf("powering sensor\n");
001F C005       240            push    ar5
0021 74C8       241            mov     a,#__str_0
0023 C0E0       242            push    acc
0025 7457       243            mov     a,#(__str_0 >> 8)
0027 C0E0       244            push    acc
0029 7480       245            mov     a,#0x80
002B C0E0       246            push    acc
002D 120000     247            lcall   _printf
0030 1581       248            dec     sp
0032 1581       249            dec     sp
0034 1581       250            dec     sp
0036 D005       251            pop     ar5
0038            252   ;        bmm150.c:540: if (rslt == BMM150_OK)
0038 ED         253            mov     a,r5
0039 6000       254            jz      L002013?
003B 020000     255            ljmp    L002006?
003E            256   L002013?:
003E            257   ;        bmm150.c:543: printf("startup time delay 3ms\n"); 
003E 7448       258            mov     a,#__str_1
0040 C0E0       259            push    acc
0042 7459       260            mov     a,#(__str_1 >> 8)
0044 C0E0       261            push    acc
0046 7480       262            mov     a,#0x80
0048 C0E0       263            push    acc
004A 120000     264            lcall   _printf
004D 1581       265            dec     sp
004F 1581       266            dec     sp
0051 1581       267            dec     sp
0053            268   ;        bmm150.c:544: dev->delay_us(BMM150_START_UP_TIME, dev->intf_ptr);
0053 740A       269            mov     a,#0x0A
0055 2550       270            add     a,_bmm150_init_dev_1_48
0057 FE         271            mov     r6,a
0058 E4         272            clr     a
0059 3551       273            addc    a,(_bmm150_init_dev_1_48 + 1)
005B FF         274            mov     r7,a
005C A852       275            mov     r0,(_bmm150_init_dev_1_48 + 2)
005E 8E82       276            mov     dpl,r6
0060 8F83       277            mov     dph,r7
0062 88F0       278            mov     b,r0
0064 120000     279            lcall   __gptrget
0067 FE         280            mov     r6,a
0068 A3         281            inc     dptr
0069 120000     282            lcall   __gptrget
006C FF         283            mov     r7,a
006D 7402       284            mov     a,#0x02
006F 2550       285            add     a,_bmm150_init_dev_1_48
0071 F8         286            mov     r0,a
0072 E4         287            clr     a
0073 3551       288            addc    a,(_bmm150_init_dev_1_48 + 1)
0075 F9         289            mov     r1,a
0076 AA52       290            mov     r2,(_bmm150_init_dev_1_48 + 2)
0078 8882       291            mov     dpl,r0
007A 8983       292            mov     dph,r1
007C 8AF0       293            mov     b,r2
007E 120000     294            lcall   __gptrget
0081 F8         295            mov     r0,a
0082 A3         296            inc     dptr
0083 120000     297            lcall   __gptrget
0086 F9         298            mov     r1,a
0087 A3         299            inc     dptr
0088 120000     300            lcall   __gptrget
008B FA         301            mov     r2,a
008C C006       302            push    ar6
008E C007       303            push    ar7
0090 C000       304            push    ar0
0092 C001       305            push    ar1
0094 C002       306            push    ar2
0096 74C8       307            mov     a,#L002014?
0098 C0E0       308            push    acc
009A 7459       309            mov     a,#(L002014? >> 8)
009C C0E0       310            push    acc
009E C006       311            push    ar6
00A0 C007       312            push    ar7
00A2 900BB8     313            mov     dptr,#0x0BB8
00A5 E4         314            clr     a
00A6 F5F0       315            mov     b,a
00A8 22         316            ret
00A9            317   L002014?:
00A9 1581       318            dec     sp
00AB 1581       319            dec     sp
00AD 1581       320            dec     sp
00AF D007       321            pop     ar7
00B1 D006       322            pop     ar6
00B3            323   ;        bmm150.c:547: printf("reading chip ID\n"); 
00B3 7408       324            mov     a,#__str_2
00B5 C0E0       325            push    acc
00B7 745A       326            mov     a,#(__str_2 >> 8)
00B9 C0E0       327            push    acc
00BB 7480       328            mov     a,#0x80
00BD C0E0       329            push    acc
00BF 120000     330            lcall   _printf
00C2 1581       331            dec     sp
00C4 1581       332            dec     sp
00C6 1581       333            dec     sp
00C8            334   ;        bmm150.c:548: rslt = bmm150_get_regs(BMM150_REG_CHIP_ID, &chip_id, 1, dev);
00C8 C050       335            push    _bmm150_init_dev_1_48
00CA C051       336            push    (_bmm150_init_dev_1_48 + 1)
00CC C052       337            push    (_bmm150_init_dev_1_48 + 2)
00CE 7401       338            mov     a,#0x01
00D0 C0E0       339            push    acc
00D2 E4         340            clr     a
00D3 C0E0       341            push    acc
00D5 C0E0       342            push    acc
00D7 C0E0       343            push    acc
00D9 74F0       344            mov     a,#_bmm150_init_chip_id_1_49
00DB C0E0       345            push    acc
00DD 744D       346            mov     a,#(_bmm150_init_chip_id_1_49 >> 8)
00DF C0E0       347            push    acc
00E1 E4         348            clr     a
00E2 C0E0       349            push    acc
00E4 758240     350            mov     dpl,#0x40
00E7 120000     351            lcall   _bmm150_get_regs
00EA AD82       352            mov     r5,dpl
00EC E581       353            mov     a,sp
00EE 24F6       354            add     a,#0xf6
00F0 F581       355            mov     sp,a
00F2            356   ;        bmm150.c:551: if (rslt == BMM150_OK)
00F2 ED         357            mov     a,r5
00F3 6000       358            jz      L002015?
00F5 020000     359            ljmp    L002007?
00F8            360   L002015?:
00F8            361   ;        bmm150.c:554: if (chip_id == BMM150_CHIP_ID)
00F8 904DF0     362            mov     dptr,#_bmm150_init_chip_id_1_49
00FB E0         363            movx    a,@dptr
00FC FA         364            mov     r2,a
00FD FB         365            mov     r3,a
00FE 7C00       366            mov     r4,#0x00
0100 BB32C8     367            cjne    r3,#0x32,L002016?
0103 BC00C8     368            cjne    r4,#0x00,L002016?
0106 8000       369            sjmp    L002017?
0108            370   L002016?:
0108 020000     371            ljmp    L002007?
010B            372   L002017?:
010B            373   ;        bmm150.c:556: printf("Chip ID is: %d\n", chip_id); 
010B 7B00       374            mov     r3,#0x00
010D C002       375            push    ar2
010F C003       376            push    ar3
0111 7448       377            mov     a,#__str_3
0113 C0E0       378            push    acc
0115 745B       379            mov     a,#(__str_3 >> 8)
0117 C0E0       380            push    acc
0119 7480       381            mov     a,#0x80
011B C0E0       382            push    acc
011D 120000     383            lcall   _printf
0120 E581       384            mov     a,sp
0122 24FB       385            add     a,#0xfb
0124 F581       386            mov     sp,a
0126            387   ;        bmm150.c:557: dev->chip_id = chip_id;
0126 904DF0     388            mov     dptr,#_bmm150_init_chip_id_1_49
0129 E0         389            movx    a,@dptr
012A 855082     390            mov     dpl,_bmm150_init_dev_1_48
012D 855183     391            mov     dph,(_bmm150_init_dev_1_48 + 1)
0130 8552F0     392            mov     b,(_bmm150_init_dev_1_48 + 2)
0133 120000     393            lcall   __gptrput
0136            394   ;        bmm150.c:560: printf("Updating trim values\n"); 
0136 74C8       395            mov     a,#__str_4
0138 C0E0       396            push    acc
013A 745B       397            mov     a,#(__str_4 >> 8)
013C C0E0       398            push    acc
013E 7480       399            mov     a,#0x80
0140 C0E0       400            push    acc
0142 120000     401            lcall   _printf
0145 1581       402            dec     sp
0147 1581       403            dec     sp
0149 1581       404            dec     sp
014B            405   ;        bmm150.c:561: rslt = read_trim_registers(dev);
014B 855082     406            mov     dpl,_bmm150_init_dev_1_48
014E 855183     407            mov     dph,(_bmm150_init_dev_1_48 + 1)
0151 8552F0     408            mov     b,(_bmm150_init_dev_1_48 + 2)
0154 120000     409            lcall   _read_trim_registers
0157 AD82       410            mov     r5,dpl
0159            411   ;        bmm150.c:562: printf("Trim values done\n"); 
0159 C005       412            push    ar5
015B 7458       413            mov     a,#__str_5
015D C0E0       414            push    acc
015F 745C       415            mov     a,#(__str_5 >> 8)
0161 C0E0       416            push    acc
0163 7480       417            mov     a,#0x80
0165 C0E0       418            push    acc
0167 120000     419            lcall   _printf
016A 1581       420            dec     sp
016C 1581       421            dec     sp
016E 1581       422            dec     sp
0170 D005       423            pop     ar5
0172 8000       424            sjmp    L002007?
0174            425   L002006?:
0174            426   ;        bmm150.c:567: printf("INIT NOT OK\n"); 
0174 C005       427            push    ar5
0176 7498       428            mov     a,#__str_6
0178 C0E0       429            push    acc
017A 745C       430            mov     a,#(__str_6 >> 8)
017C C0E0       431            push    acc
017E 7480       432            mov     a,#0x80
0180 C0E0       433            push    acc
0182 120000     434            lcall   _printf
0185 1581       435            dec     sp
0187 1581       436            dec     sp
0189 1581       437            dec     sp
018B D005       438            pop     ar5
018D            439   L002007?:
018D            440   ;        bmm150.c:570: return rslt;
018D 8D82       441            mov     dpl,r5
018F 22         442            ret
0190            443   ;------------------------------------------------------------
0190            444   ;Allocation info for local variables in function 'bmm150_set_regs'
0190            445   ;------------------------------------------------------------
0190            446   ;reg_data                  Allocated with name '_bmm150_set_regs_PARM_2'
0190            447   ;len                       Allocated with name '_bmm150_set_regs_PARM_3'
0190            448   ;dev                       Allocated with name '_bmm150_set_regs_PARM_4'
0190            449   ;reg_addr                  Allocated with name '_bmm150_set_regs_reg_addr_1_54'
0190            450   ;sloc0                     Allocated with name '_bmm150_set_regs_sloc0_1_0'
0190            451   ;rslt                      Allocated with name '_bmm150_set_regs_rslt_1_55'
0190            452   ;------------------------------------------------------------
0190            453   ;        bmm150.c:577: xdata int8_t bmm150_set_regs(uint8_t reg_addr, const uint8_t *reg_data, uint32_t len, struct bmm150_dev *dev)
0190            454   ;        -----------------------------------------
0190            455   ;         function bmm150_set_regs
0190            456   ;        -----------------------------------------
0190            457   _bmm150_set_regs:
0190 8582A0     458            mov     _bmm150_set_regs_reg_addr_1_54,dpl
0193            459   ;        bmm150.c:582: rslt = null_ptr_check(dev);
0193 855082     460            mov     dpl,_bmm150_set_regs_PARM_4
0196 855183     461            mov     dph,(_bmm150_set_regs_PARM_4 + 1)
0199 8552F0     462            mov     b,(_bmm150_set_regs_PARM_4 + 2)
019C 120000     463            lcall   _null_ptr_check
019F AB82       464            mov     r3,dpl
01A1 904E40     465            mov     dptr,#_bmm150_set_regs_rslt_1_55
01A4 EB         466            mov     a,r3
01A5 F0         467            movx    @dptr,a
01A6            468   ;        bmm150.c:585: if ((rslt == BMM150_OK) && (reg_data != NULL) && (len != 0))
01A6 EB         469            mov     a,r3
01A7 6000       470            jz      L003011?
01A9 020000     471            ljmp    L003002?
01AC            472   L003011?:
01AC E4         473            clr     a
01AD B5F098     474            cjne    a,_bmm150_set_regs_PARM_2,L003012?
01B0 E4         475            clr     a
01B1 B5F198     476            cjne    a,(_bmm150_set_regs_PARM_2 + 1),L003012?
01B4 E4         477            clr     a
01B5 B5F298     478            cjne    a,(_bmm150_set_regs_PARM_2 + 2),L003012?
01B8 020000     479            ljmp    L003002?
01BB            480   L003012?:
01BB E5A0       481            mov     a,_bmm150_set_regs_PARM_3
01BD 45A1       482            orl     a,(_bmm150_set_regs_PARM_3 + 1)
01BF 45A2       483            orl     a,(_bmm150_set_regs_PARM_3 + 2)
01C1 45A3       484            orl     a,(_bmm150_set_regs_PARM_3 + 3)
01C3 7000       485            jnz     L003013?
01C5 020000     486            ljmp    L003002?
01C8            487   L003013?:
01C8            488   ;        bmm150.c:592: dev->intf_rslt = dev->write(reg_addr, reg_data, len, dev->intf_ptr);
01C8 AE50       489            mov     r6,_bmm150_set_regs_PARM_4
01CA AF51       490            mov     r7,(_bmm150_set_regs_PARM_4 + 1)
01CC A852       491            mov     r0,(_bmm150_set_regs_PARM_4 + 2)
01CE 7405       492            mov     a,#0x05
01D0 2E         493            add     a,r6
01D1 F5F0       494            mov     _bmm150_set_regs_sloc0_1_0,a
01D3 E4         495            clr     a
01D4 3F         496            addc    a,r7
01D5 F5F1       497            mov     (_bmm150_set_regs_sloc0_1_0 + 1),a
01D7 88F2       498            mov     (_bmm150_set_regs_sloc0_1_0 + 2),r0
01D9 7408       499            mov     a,#0x08
01DB 2E         500            add     a,r6
01DC FC         501            mov     r4,a
01DD E4         502            clr     a
01DE 3F         503            addc    a,r7
01DF FD         504            mov     r5,a
01E0 8802       505            mov     ar2,r0
01E2 8C82       506            mov     dpl,r4
01E4 8D83       507            mov     dph,r5
01E6 8AF0       508            mov     b,r2
01E8 120000     509            lcall   __gptrget
01EB FC         510            mov     r4,a
01EC A3         511            inc     dptr
01ED 120000     512            lcall   __gptrget
01F0 FD         513            mov     r5,a
01F1 7402       514            mov     a,#0x02
01F3 2E         515            add     a,r6
01F4 FE         516            mov     r6,a
01F5 E4         517            clr     a
01F6 3F         518            addc    a,r7
01F7 FF         519            mov     r7,a
01F8 8E82       520            mov     dpl,r6
01FA 8F83       521            mov     dph,r7
01FC 88F0       522            mov     b,r0
01FE 120000     523            lcall   __gptrget
0201 FE         524            mov     r6,a
0202 A3         525            inc     dptr
0203 120000     526            lcall   __gptrget
0206 FF         527            mov     r7,a
0207 A3         528            inc     dptr
0208 120000     529            lcall   __gptrget
020B F8         530            mov     r0,a
020C C005       531            push    ar5
020E C006       532            push    ar6
0210 C007       533            push    ar7
0212 C000       534            push    ar0
0214 C0A0       535            push    _bmm150_set_regs_PARM_3
0216 C0A1       536            push    (_bmm150_set_regs_PARM_3 + 1)
0218 C0A2       537            push    (_bmm150_set_regs_PARM_3 + 2)
021A C0A3       538            push    (_bmm150_set_regs_PARM_3 + 3)
021C C0F0       539            push    _bmm150_set_regs_PARM_2
021E C0F1       540            push    (_bmm150_set_regs_PARM_2 + 1)
0220 C0F2       541            push    (_bmm150_set_regs_PARM_2 + 2)
0222 7418       542            mov     a,#L003014?
0224 C0E0       543            push    acc
0226 745E       544            mov     a,#(L003014? >> 8)
0228 C0E0       545            push    acc
022A C004       546            push    ar4
022C C005       547            push    ar5
022E 85A082     548            mov     dpl,_bmm150_set_regs_reg_addr_1_54
0231 22         549            ret
0232            550   L003014?:
0232 AC82       551            mov     r4,dpl
0234 E581       552            mov     a,sp
0236 24F6       553            add     a,#0xf6
0238 F581       554            mov     sp,a
023A D005       555            pop     ar5
023C 85F082     556            mov     dpl,_bmm150_set_regs_sloc0_1_0
023F 85F183     557            mov     dph,(_bmm150_set_regs_sloc0_1_0 + 1)
0242 85F2F0     558            mov     b,(_bmm150_set_regs_sloc0_1_0 + 2)
0245 EC         559            mov     a,r4
0246 120000     560            lcall   __gptrput
0249 8000       561            sjmp    L003003?
024B            562   L003002?:
024B            563   ;        bmm150.c:596: rslt = BMM150_E_NULL_PTR;
024B 904E40     564            mov     dptr,#_bmm150_set_regs_rslt_1_55
024E 74FF       565            mov     a,#0xFF
0250 F0         566            movx    @dptr,a
0251            567   L003003?:
0251            568   ;        bmm150.c:599: return rslt;
0251 904E40     569            mov     dptr,#_bmm150_set_regs_rslt_1_55
0254 E0         570            movx    a,@dptr
0255 F582       571            mov     dpl,a
0257 22         572            ret
0258            573   ;------------------------------------------------------------
0258            574   ;Allocation info for local variables in function 'bmm150_get_regs'
0258            575   ;------------------------------------------------------------
0258            576   ;reg_data                  Allocated to stack - offset -5
0258            577   ;len                       Allocated to stack - offset -9
0258            578   ;dev                       Allocated to stack - offset -12
0258            579   ;reg_addr                  Allocated to stack - offset 1
0258            580   ;rslt                      Allocated to stack - offset 2
0258            581   ;sloc0                     Allocated to stack - offset 3
0258            582   ;------------------------------------------------------------
0258            583   ;        bmm150.c:605: xdata int8_t bmm150_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint32_t len, struct bmm150_dev *dev) reentrant
0258            584   ;        -----------------------------------------
0258            585   ;         function bmm150_get_regs
0258            586   ;        -----------------------------------------
0258            587   _bmm150_get_regs:
0258 C000       588            push    _bp
025A 858100     589            mov     _bp,sp
025D C082       590            push    dpl
025F E581       591            mov     a,sp
0261 2405       592            add     a,#0x05
0263 F581       593            mov     sp,a
0265            594   ;        bmm150.c:610: rslt = null_ptr_check(dev);
0265 E500       595            mov     a,_bp
0267 24F4       596            add     a,#0xf4
0269 F8         597            mov     r0,a
026A 8682       598            mov     dpl,@r0
026C 08         599            inc     r0
026D 8683       600            mov     dph,@r0
026F 08         601            inc     r0
0270 86F0       602            mov     b,@r0
0272 120000     603            lcall   _null_ptr_check
0275 AB82       604            mov     r3,dpl
0277 A800       605            mov     r0,_bp
0279 08         606            inc     r0
027A 08         607            inc     r0
027B A603       608            mov     @r0,ar3
027D            609   ;        bmm150.c:613: if ((rslt == BMM150_OK) && (reg_data != NULL))
027D A800       610            mov     r0,_bp
027F 08         611            inc     r0
0280 08         612            inc     r0
0281 E6         613            mov     a,@r0
0282 6000       614            jz      L004012?
0284 020000     615            ljmp    L004004?
0287            616   L004012?:
0287 E500       617            mov     a,_bp
0289 24FB       618            add     a,#0xfb
028B F8         619            mov     r0,a
028C B60058     620            cjne    @r0,#0x00,L004013?
028F 08         621            inc     r0
0290 B60058     622            cjne    @r0,#0x00,L004013?
0293 08         623            inc     r0
0294 B60058     624            cjne    @r0,#0x00,L004013?
0297 020000     625            ljmp    L004004?
029A            626   L004013?:
029A            627   ;        bmm150.c:615: if (dev->intf == BMM150_SPI_INTF)
029A E500       628            mov     a,_bp
029C 24F4       629            add     a,#0xf4
029E F8         630            mov     r0,a
029F 8607       631            mov     ar7,@r0
02A1 08         632            inc     r0
02A2 8603       633            mov     ar3,@r0
02A4 08         634            inc     r0
02A5 8602       635            mov     ar2,@r0
02A7 7401       636            mov     a,#0x01
02A9 2F         637            add     a,r7
02AA FC         638            mov     r4,a
02AB E4         639            clr     a
02AC 3B         640            addc    a,r3
02AD FD         641            mov     r5,a
02AE 8A06       642            mov     ar6,r2
02B0 8C82       643            mov     dpl,r4
02B2 8D83       644            mov     dph,r5
02B4 8EF0       645            mov     b,r6
02B6 120000     646            lcall   __gptrget
02B9 7000       647            jnz     L004002?
02BB            648   ;        bmm150.c:618: reg_addr = reg_addr | 0x80;
02BB A800       649            mov     r0,_bp
02BD 08         650            inc     r0
02BE E6         651            mov     a,@r0
02BF 4480       652            orl     a,#0x80
02C1 F6         653            mov     @r0,a
02C2            654   L004002?:
02C2            655   ;        bmm150.c:622: dev->intf_rslt = dev->read(reg_addr, reg_data, len, dev->intf_ptr);
02C2 E500       656            mov     a,_bp
02C4 2403       657            add     a,#0x03
02C6 F8         658            mov     r0,a
02C7 7405       659            mov     a,#0x05
02C9 2F         660            add     a,r7
02CA F6         661            mov     @r0,a
02CB E4         662            clr     a
02CC 3B         663            addc    a,r3
02CD 08         664            inc     r0
02CE F6         665            mov     @r0,a
02CF 08         666            inc     r0
02D0 A602       667            mov     @r0,ar2
02D2 7406       668            mov     a,#0x06
02D4 2F         669            add     a,r7
02D5 FC         670            mov     r4,a
02D6 E4         671            clr     a
02D7 3B         672            addc    a,r3
02D8 FD         673            mov     r5,a
02D9 8A06       674            mov     ar6,r2
02DB 8C82       675            mov     dpl,r4
02DD 8D83       676            mov     dph,r5
02DF 8EF0       677            mov     b,r6
02E1 120000     678            lcall   __gptrget
02E4 FC         679            mov     r4,a
02E5 A3         680            inc     dptr
02E6 120000     681            lcall   __gptrget
02E9 FD         682            mov     r5,a
02EA 7402       683            mov     a,#0x02
02EC 2F         684            add     a,r7
02ED FF         685            mov     r7,a
02EE E4         686            clr     a
02EF 3B         687            addc    a,r3
02F0 FB         688            mov     r3,a
02F1 8F82       689            mov     dpl,r7
02F3 8B83       690            mov     dph,r3
02F5 8AF0       691            mov     b,r2
02F7 120000     692            lcall   __gptrget
02FA FF         693            mov     r7,a
02FB A3         694            inc     dptr
02FC 120000     695            lcall   __gptrget
02FF FB         696            mov     r3,a
0300 A3         697            inc     dptr
0301 120000     698            lcall   __gptrget
0304 FA         699            mov     r2,a
0305 C005       700            push    ar5
0307 C007       701            push    ar7
0309 C003       702            push    ar3
030B C002       703            push    ar2
030D E500       704            mov     a,_bp
030F 24F7       705            add     a,#0xf7
0311 F8         706            mov     r0,a
0312 E6         707            mov     a,@r0
0313 C0E0       708            push    acc
0315 08         709            inc     r0
0316 E6         710            mov     a,@r0
0317 C0E0       711            push    acc
0319 08         712            inc     r0
031A E6         713            mov     a,@r0
031B C0E0       714            push    acc
031D 08         715            inc     r0
031E E6         716            mov     a,@r0
031F C0E0       717            push    acc
0321 E500       718            mov     a,_bp
0323 24FB       719            add     a,#0xfb
0325 F8         720            mov     r0,a
0326 E6         721            mov     a,@r0
0327 C0E0       722            push    acc
0329 08         723            inc     r0
032A E6         724            mov     a,@r0
032B C0E0       725            push    acc
032D 08         726            inc     r0
032E E6         727            mov     a,@r0
032F C0E0       728            push    acc
0331 74D8       729            mov     a,#L004015?
0333 C0E0       730            push    acc
0335 745F       731            mov     a,#(L004015? >> 8)
0337 C0E0       732            push    acc
0339 C004       733            push    ar4
033B C005       734            push    ar5
033D A800       735            mov     r0,_bp
033F 08         736            inc     r0
0340 8682       737            mov     dpl,@r0
0342 22         738            ret
0343            739   L004015?:
0343 AC82       740            mov     r4,dpl
0345 E581       741            mov     a,sp
0347 24F6       742            add     a,#0xf6
0349 F581       743            mov     sp,a
034B D005       744            pop     ar5
034D E500       745            mov     a,_bp
034F 2403       746            add     a,#0x03
0351 F8         747            mov     r0,a
0352 8682       748            mov     dpl,@r0
0354 08         749            inc     r0
0355 8683       750            mov     dph,@r0
0357 08         751            inc     r0
0358 86F0       752            mov     b,@r0
035A EC         753            mov     a,r4
035B 120000     754            lcall   __gptrput
035E 8000       755            sjmp    L004005?
0360            756   L004004?:
0360            757   ;        bmm150.c:626: rslt = BMM150_E_NULL_PTR;
0360 A800       758            mov     r0,_bp
0362 08         759            inc     r0
0363 08         760            inc     r0
0364 76FF       761            mov     @r0,#0xFF
0366            762   L004005?:
0366            763   ;        bmm150.c:629: return rslt;
0366 A800       764            mov     r0,_bp
0368 08         765            inc     r0
0369 08         766            inc     r0
036A 8682       767            mov     dpl,@r0
036C 850081     768            mov     sp,_bp
036F D000       769            pop     _bp
0371 22         770            ret
0372            771   ;------------------------------------------------------------
0372            772   ;Allocation info for local variables in function 'bmm150_set_op_mode'
0372            773   ;------------------------------------------------------------
0372            774   ;dev                       Allocated with name '_bmm150_set_op_mode_PARM_2'
0372            775   ;settings                  Allocated to registers r2 r3 r4 
0372            776   ;rslt                      Allocated with name '_bmm150_set_op_mode_rslt_1_64'
0372            777   ;pwr_mode                  Allocated with name '_bmm150_set_op_mode_pwr_mode_1_64'
0372            778   ;------------------------------------------------------------
0372            779   ;        bmm150.c:656: xdata int8_t bmm150_set_op_mode(const struct bmm150_settings *settings, struct bmm150_dev *dev)
0372            780   ;        -----------------------------------------
0372            781   ;         function bmm150_set_op_mode
0372            782   ;        -----------------------------------------
0372            783   _bmm150_set_op_mode:
0372 AA82       784            mov     r2,dpl
0374 AB83       785            mov     r3,dph
0376 ACF0       786            mov     r4,b
0378            787   ;        bmm150.c:662: rslt = null_ptr_check(dev);
0378 850082     788            mov     dpl,_bmm150_set_op_mode_PARM_2
037B 850183     789            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
037E 8502F0     790            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
0381 C002       791            push    ar2
0383 C003       792            push    ar3
0385 C004       793            push    ar4
0387 120000     794            lcall   _null_ptr_check
038A AD82       795            mov     r5,dpl
038C D004       796            pop     ar4
038E D003       797            pop     ar3
0390 D002       798            pop     ar2
0392 904E90     799            mov     dptr,#_bmm150_set_op_mode_rslt_1_64
0395 ED         800            mov     a,r5
0396 F0         801            movx    @dptr,a
0397            802   ;        bmm150.c:665: if (rslt == BMM150_OK)
0397 ED         803            mov     a,r5
0398 7000       804            jnz     L005006?
039A            805   ;        bmm150.c:667: pwr_mode = settings->pwr_mode;
039A 0A         806            inc     r2
039B BA0098     807            cjne    r2,#0x00,L005013?
039E 0B         808            inc     r3
039F            809   L005013?:
039F 8A82       810            mov     dpl,r2
03A1 8B83       811            mov     dph,r3
03A3 8CF0       812            mov     b,r4
03A5 120000     813            lcall   __gptrget
03A8            814   ;        bmm150.c:670: if (pwr_mode == BMM150_POWERMODE_NORMAL){
03A8 FA         815            mov     r2,a
03A9 7000       816            jnz     L005006?
03AB            817   ;        bmm150.c:671: rslt = suspend_to_sleep_mode(dev);
03AB 850082     818            mov     dpl,_bmm150_set_op_mode_PARM_2
03AE 850183     819            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
03B1 8502F0     820            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
03B4 C002       821            push    ar2
03B6 120000     822            lcall   _suspend_to_sleep_mode
03B9 AB82       823            mov     r3,dpl
03BB D002       824            pop     ar2
03BD 904E90     825            mov     dptr,#_bmm150_set_op_mode_rslt_1_64
03C0 EB         826            mov     a,r3
03C1 F0         827            movx    @dptr,a
03C2            828   ;        bmm150.c:672: if (rslt == BMM150_OK)
03C2 EB         829            mov     a,r3
03C3 7000       830            jnz     L005006?
03C5            831   ;        bmm150.c:675: rslt = write_op_mode(pwr_mode, dev);
03C5 850090     832            mov     _write_op_mode_PARM_2,_bmm150_set_op_mode_PARM_2
03C8 850191     833            mov     (_write_op_mode_PARM_2 + 1),(_bmm150_set_op_mode_PARM_2 + 1)
03CB 850292     834            mov     (_write_op_mode_PARM_2 + 2),(_bmm150_set_op_mode_PARM_2 + 2)
03CE 8A82       835            mov     dpl,r2
03D0 120000     836            lcall   _write_op_mode
03D3 E582       837            mov     a,dpl
03D5 904E90     838            mov     dptr,#_bmm150_set_op_mode_rslt_1_64
03D8 F0         839            movx    @dptr,a
03D9            840   L005006?:
03D9            841   ;        bmm150.c:730: return rslt;
03D9 904E90     842            mov     dptr,#_bmm150_set_op_mode_rslt_1_64
03DC E0         843            movx    a,@dptr
03DD F582       844            mov     dpl,a
03DF 22         845            ret
03E0            846   ;------------------------------------------------------------
03E0            847   ;Allocation info for local variables in function 'bmm150_set_presetmode'
03E0            848   ;------------------------------------------------------------
03E0            849   ;dev                       Allocated with name '_bmm150_set_presetmode_PARM_2'
03E0            850   ;settings                  Allocated to registers r2 r3 r4 
03E0            851   ;rslt                      Allocated to registers r5 
03E0            852   ;preset_mode               Allocated to registers r6 
03E0            853   ;------------------------------------------------------------
03E0            854   ;        bmm150.c:766: xdata int8_t bmm150_set_presetmode(struct bmm150_settings *settings, struct bmm150_dev *dev)
03E0            855   ;        -----------------------------------------
03E0            856   ;         function bmm150_set_presetmode
03E0            857   ;        -----------------------------------------
03E0            858   _bmm150_set_presetmode:
03E0 AA82       859            mov     r2,dpl
03E2 AB83       860            mov     r3,dph
03E4 ACF0       861            mov     r4,b
03E6            862   ;        bmm150.c:772: rslt = null_ptr_check(dev);
03E6 85B082     863            mov     dpl,_bmm150_set_presetmode_PARM_2
03E9 85B183     864            mov     dph,(_bmm150_set_presetmode_PARM_2 + 1)
03EC 85B2F0     865            mov     b,(_bmm150_set_presetmode_PARM_2 + 2)
03EF C002       866            push    ar2
03F1 C003       867            push    ar3
03F3 C004       868            push    ar4
03F5 120000     869            lcall   _null_ptr_check
03F8 AD82       870            mov     r5,dpl
03FA D004       871            pop     ar4
03FC D003       872            pop     ar3
03FE D002       873            pop     ar2
0400            874   ;        bmm150.c:775: if (rslt == BMM150_OK)
0400 ED         875            mov     a,r5
0401 7000       876            jnz     L006004?
0403            877   ;        bmm150.c:777: preset_mode = settings->preset_mode;
0403 7404       878            mov     a,#0x04
0405 2A         879            add     a,r2
0406 FE         880            mov     r6,a
0407 E4         881            clr     a
0408 3B         882            addc    a,r3
0409 FF         883            mov     r7,a
040A 8C00       884            mov     ar0,r4
040C 8E82       885            mov     dpl,r6
040E 8F83       886            mov     dph,r7
0410 88F0       887            mov     b,r0
0412 120000     888            lcall   __gptrget
0415 FE         889            mov     r6,a
0416            890   ;        bmm150.c:779: if (preset_mode == BMM150_PRESETMODE_LOWPOWER)
0416 7F00       891            mov     r7,#0x00
0418 BE0168     892            cjne    r6,#0x01,L006004?
041B BF0068     893            cjne    r7,#0x00,L006004?
041E            894   ;        bmm150.c:784: settings->data_rate = BMM150_DATA_RATE_10HZ;
041E 7402       895            mov     a,#0x02
0420 2A         896            add     a,r2
0421 FE         897            mov     r6,a
0422 E4         898            clr     a
0423 3B         899            addc    a,r3
0424 FF         900            mov     r7,a
0425 8C00       901            mov     ar0,r4
0427 8E82       902            mov     dpl,r6
0429 8F83       903            mov     dph,r7
042B 88F0       904            mov     b,r0
042D E4         905            clr     a
042E 120000     906            lcall   __gptrput
0431            907   ;        bmm150.c:785: settings->xy_rep = BMM150_REPXY_LOWPOWER;
0431 7403       908            mov     a,#0x03
0433 2A         909            add     a,r2
0434 FE         910            mov     r6,a
0435 E4         911            clr     a
0436 3B         912            addc    a,r3
0437 FF         913            mov     r7,a
0438 8C00       914            mov     ar0,r4
043A 8E82       915            mov     dpl,r6
043C 8F83       916            mov     dph,r7
043E 88F0       917            mov     b,r0
0440 7401       918            mov     a,#0x01
0442 120000     919            lcall   __gptrput
0445            920   ;        bmm150.c:787: rslt = set_odr_xyz_rep(settings, dev);
0445 85B070     921            mov     _set_odr_xyz_rep_PARM_2,_bmm150_set_presetmode_PARM_2
0448 85B171     922            mov     (_set_odr_xyz_rep_PARM_2 + 1),(_bmm150_set_presetmode_PARM_2 + 1)
044B 85B272     923            mov     (_set_odr_xyz_rep_PARM_2 + 2),(_bmm150_set_presetmode_PARM_2 + 2)
044E 8A82       924            mov     dpl,r2
0450 8B83       925            mov     dph,r3
0452 8CF0       926            mov     b,r4
0454 120000     927            lcall   _set_odr_xyz_rep
0457 AD82       928            mov     r5,dpl
0459            929   L006004?:
0459            930   ;        bmm150.c:792: return rslt;
0459 8D82       931            mov     dpl,r5
045B 22         932            ret
045C            933   ;------------------------------------------------------------
045C            934   ;Allocation info for local variables in function 'bmm150_read_mag_data'
045C            935   ;------------------------------------------------------------
045C            936   ;dev                       Allocated with name '_bmm150_read_mag_data_PARM_2'
045C            937   ;mag_data                  Allocated to registers r2 r3 r4 
045C            938   ;rslt                      Allocated with name '_bmm150_read_mag_data_rslt_1_73'
045C            939   ;msb_data                  Allocated with name '_bmm150_read_mag_data_msb_data_1_73'
045C            940   ;reg_data                  Allocated with name '_bmm150_read_mag_data_reg_data_1_73'
045C            941   ;raw_mag_data              Allocated with name '_bmm150_read_mag_data_raw_mag_data_1_73'
045C            942   ;------------------------------------------------------------
045C            943   ;        bmm150.c:864: xdata int8_t bmm150_read_mag_data(struct bmm150_mag_data *mag_data, struct bmm150_dev *dev)
045C            944   ;        -----------------------------------------
045C            945   ;         function bmm150_read_mag_data
045C            946   ;        -----------------------------------------
045C            947   _bmm150_read_mag_data:
045C AA82       948            mov     r2,dpl
045E AB83       949            mov     r3,dph
0460 ACF0       950            mov     r4,b
0462            951   ;        bmm150.c:868: xdata uint8_t reg_data[BMM150_LEN_XYZR_DATA] = { 0 };
0462 904EF0     952            mov     dptr,#_bmm150_read_mag_data_reg_data_1_73
0465 E4         953            clr     a
0466 F0         954            movx    @dptr,a
0467 904EF1     955            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0001)
046A F0         956            movx    @dptr,a
046B 904EF2     957            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0002)
046E F0         958            movx    @dptr,a
046F 904EF3     959            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0003)
0472 F0         960            movx    @dptr,a
0473 904EF4     961            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0004)
0476 E4         962            clr     a
0477 F0         963            movx    @dptr,a
0478 904EF5     964            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0005)
047B F0         965            movx    @dptr,a
047C 904EF6     966            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0006)
047F F0         967            movx    @dptr,a
0480 904EF7     968            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0007)
0483 F0         969            movx    @dptr,a
0484            970   ;        bmm150.c:872: rslt = bmm150_get_regs(BMM150_REG_DATA_X_LSB, reg_data, BMM150_LEN_XYZR_DATA, dev);
0484 C002       971            push    ar2
0486 C003       972            push    ar3
0488 C004       973            push    ar4
048A C060       974            push    _bmm150_read_mag_data_PARM_2
048C C061       975            push    (_bmm150_read_mag_data_PARM_2 + 1)
048E C062       976            push    (_bmm150_read_mag_data_PARM_2 + 2)
0490 7408       977            mov     a,#0x08
0492 C0E0       978            push    acc
0494 E4         979            clr     a
0495 C0E0       980            push    acc
0497 C0E0       981            push    acc
0499 C0E0       982            push    acc
049B 74F0       983            mov     a,#_bmm150_read_mag_data_reg_data_1_73
049D C0E0       984            push    acc
049F 744E       985            mov     a,#(_bmm150_read_mag_data_reg_data_1_73 >> 8)
04A1 C0E0       986            push    acc
04A3 E4         987            clr     a
04A4 C0E0       988            push    acc
04A6 758242     989            mov     dpl,#0x42
04A9 120000     990            lcall   _bmm150_get_regs
04AC AD82       991            mov     r5,dpl
04AE E581       992            mov     a,sp
04B0 24F6       993            add     a,#0xf6
04B2 F581       994            mov     sp,a
04B4 D004       995            pop     ar4
04B6 D003       996            pop     ar3
04B8 D002       997            pop     ar2
04BA            998   ;        bmm150.c:874: if (rslt == BMM150_OK)
04BA ED         999            mov     a,r5
04BB 6000      1000            jz      L007006?
04BD 020000    1001            ljmp    L007002?
04C0           1002   L007006?:
04C0           1003   ;        bmm150.c:877: reg_data[0] = BMM150_GET_BITS(reg_data[0], BMM150_DATA_X);
04C0 904EF0    1004            mov     dptr,#_bmm150_read_mag_data_reg_data_1_73
04C3 E0        1005            movx    a,@dptr
04C4 FE        1006            mov     r6,a
04C5 5306F8    1007            anl     ar6,#0xF8
04C8 E4        1008            clr     a
04C9 C4        1009            swap    a
04CA 23        1010            rl      a
04CB CE        1011            xch     a,r6
04CC C4        1012            swap    a
04CD 23        1013            rl      a
04CE 541F      1014            anl     a,#0x1f
04D0 6E        1015            xrl     a,r6
04D1 CE        1016            xch     a,r6
04D2 541F      1017            anl     a,#0x1f
04D4 CE        1018            xch     a,r6
04D5 6E        1019            xrl     a,r6
04D6 CE        1020            xch     a,r6
04D7 904EF0    1021            mov     dptr,#_bmm150_read_mag_data_reg_data_1_73
04DA EE        1022            mov     a,r6
04DB F0        1023            movx    @dptr,a
04DC           1024   ;        bmm150.c:881: msb_data = ((int16_t)((int8_t)reg_data[1])) * 32;
04DC 904EF1    1025            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0001)
04DF E0        1026            movx    a,@dptr
04E0 FF        1027            mov     r7,a
04E1 33        1028            rlc     a
04E2 95E0      1029            subb    a,acc
04E4 C4        1030            swap    a
04E5 23        1031            rl      a
04E6 54E0      1032            anl     a,#0xe0
04E8 CF        1033            xch     a,r7
04E9 C4        1034            swap    a
04EA 23        1035            rl      a
04EB CF        1036            xch     a,r7
04EC 6F        1037            xrl     a,r7
04ED CF        1038            xch     a,r7
04EE 54E0      1039            anl     a,#0xe0
04F0 CF        1040            xch     a,r7
04F1 6F        1041            xrl     a,r7
04F2 F8        1042            mov     r0,a
04F3           1043   ;        bmm150.c:884: raw_mag_data.raw_datax = (int16_t)(msb_data | reg_data[0]);
04F3 7900      1044            mov     r1,#0x00
04F5 EE        1045            mov     a,r6
04F6 4207      1046            orl     ar7,a
04F8 E9        1047            mov     a,r1
04F9 4200      1048            orl     ar0,a
04FB 904F50    1049            mov     dptr,#_bmm150_read_mag_data_raw_mag_data_1_73
04FE EF        1050            mov     a,r7
04FF F0        1051            movx    @dptr,a
0500 A3        1052            inc     dptr
0501 E8        1053            mov     a,r0
0502 F0        1054            movx    @dptr,a
0503           1055   ;        bmm150.c:887: reg_data[2] = BMM150_GET_BITS(reg_data[2], BMM150_DATA_Y);
0503 904EF2    1056            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0002)
0506 E0        1057            movx    a,@dptr
0507 FE        1058            mov     r6,a
0508 5306F8    1059            anl     ar6,#0xF8
050B E4        1060            clr     a
050C C4        1061            swap    a
050D 23        1062            rl      a
050E CE        1063            xch     a,r6
050F C4        1064            swap    a
0510 23        1065            rl      a
0511 541F      1066            anl     a,#0x1f
0513 6E        1067            xrl     a,r6
0514 CE        1068            xch     a,r6
0515 541F      1069            anl     a,#0x1f
0517 CE        1070            xch     a,r6
0518 6E        1071            xrl     a,r6
0519 CE        1072            xch     a,r6
051A 904EF2    1073            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0002)
051D EE        1074            mov     a,r6
051E F0        1075            movx    @dptr,a
051F           1076   ;        bmm150.c:891: msb_data = ((int16_t)((int8_t)reg_data[3])) * 32;
051F 904EF3    1077            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0003)
0522 E0        1078            movx    a,@dptr
0523 FF        1079            mov     r7,a
0524 33        1080            rlc     a
0525 95E0      1081            subb    a,acc
0527 C4        1082            swap    a
0528 23        1083            rl      a
0529 54E0      1084            anl     a,#0xe0
052B CF        1085            xch     a,r7
052C C4        1086            swap    a
052D 23        1087            rl      a
052E CF        1088            xch     a,r7
052F 6F        1089            xrl     a,r7
0530 CF        1090            xch     a,r7
0531 54E0      1091            anl     a,#0xe0
0533 CF        1092            xch     a,r7
0534 6F        1093            xrl     a,r7
0535 F8        1094            mov     r0,a
0536           1095   ;        bmm150.c:894: raw_mag_data.raw_datay = (int16_t)(msb_data | reg_data[2]);
0536 7900      1096            mov     r1,#0x00
0538 EE        1097            mov     a,r6
0539 4207      1098            orl     ar7,a
053B E9        1099            mov     a,r1
053C 4200      1100            orl     ar0,a
053E 904F52    1101            mov     dptr,#(_bmm150_read_mag_data_raw_mag_data_1_73 + 0x0002)
0541 EF        1102            mov     a,r7
0542 F0        1103            movx    @dptr,a
0543 A3        1104            inc     dptr
0544 E8        1105            mov     a,r0
0545 F0        1106            movx    @dptr,a
0546           1107   ;        bmm150.c:897: reg_data[4] = BMM150_GET_BITS(reg_data[4], BMM150_DATA_Z);
0546 904EF4    1108            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0004)
0549 E0        1109            movx    a,@dptr
054A FE        1110            mov     r6,a
054B 5306FE    1111            anl     ar6,#0xFE
054E E4        1112            clr     a
054F C3        1113            clr     c
0550 13        1114            rrc     a
0551 CE        1115            xch     a,r6
0552 13        1116            rrc     a
0553 CE        1117            xch     a,r6
0554 904EF4    1118            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0004)
0557 EE        1119            mov     a,r6
0558 F0        1120            movx    @dptr,a
0559           1121   ;        bmm150.c:907: reg_data[6] = BMM150_GET_BITS(reg_data[6], BMM150_DATA_RHALL);
0559 904EF6    1122            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0006)
055C E0        1123            movx    a,@dptr
055D FE        1124            mov     r6,a
055E 5306FC    1125            anl     ar6,#0xFC
0561 E4        1126            clr     a
0562 C3        1127            clr     c
0563 13        1128            rrc     a
0564 CE        1129            xch     a,r6
0565 13        1130            rrc     a
0566 CE        1131            xch     a,r6
0567 C3        1132            clr     c
0568 13        1133            rrc     a
0569 CE        1134            xch     a,r6
056A 13        1135            rrc     a
056B CE        1136            xch     a,r6
056C 904EF6    1137            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0006)
056F EE        1138            mov     a,r6
0570 F0        1139            movx    @dptr,a
0571           1140   ;        bmm150.c:908: raw_mag_data.raw_data_r = (uint16_t)(((uint16_t)reg_data[7] << 6) | reg_data[6]);
0571 904EF7    1141            mov     dptr,#(_bmm150_read_mag_data_reg_data_1_73 + 0x0007)
0574 E0        1142            movx    a,@dptr
0575 FF        1143            mov     r7,a
0576 E4        1144            clr     a
0577 5403      1145            anl     a,#0x03
0579 A2E0      1146            mov     c,acc.0
057B CF        1147            xch     a,r7
057C 13        1148            rrc     a
057D CF        1149            xch     a,r7
057E 13        1150            rrc     a
057F A2E0      1151            mov     c,acc.0
0581 CF        1152            xch     a,r7
0582 13        1153            rrc     a
0583 CF        1154            xch     a,r7
0584 13        1155            rrc     a
0585 CF        1156            xch     a,r7
0586 F8        1157            mov     r0,a
0587 7900      1158            mov     r1,#0x00
0589 EE        1159            mov     a,r6
058A 4207      1160            orl     ar7,a
058C E9        1161            mov     a,r1
058D 4200      1162            orl     ar0,a
058F 904F54    1163            mov     dptr,#(_bmm150_read_mag_data_raw_mag_data_1_73 + 0x0004)
0592 EF        1164            mov     a,r7
0593 F0        1165            movx    @dptr,a
0594 A3        1166            inc     dptr
0595 E8        1167            mov     a,r0
0596 F0        1168            movx    @dptr,a
0597           1169   ;        bmm150.c:911: mag_data->x = compensate_x(raw_mag_data.raw_datax, raw_mag_data.raw_data_r, dev);
0597 904F50    1170            mov     dptr,#_bmm150_read_mag_data_raw_mag_data_1_73
059A E0        1171            movx    a,@dptr
059B FE        1172            mov     r6,a
059C A3        1173            inc     dptr
059D E0        1174            movx    a,@dptr
059E F9        1175            mov     r1,a
059F 8F20      1176            mov     _compensate_x_PARM_2,r7
05A1 8821      1177            mov     (_compensate_x_PARM_2 + 1),r0
05A3 856070    1178            mov     _compensate_x_PARM_3,_bmm150_read_mag_data_PARM_2
05A6 856171    1179            mov     (_compensate_x_PARM_3 + 1),(_bmm150_read_mag_data_PARM_2 + 1)
05A9 856272    1180            mov     (_compensate_x_PARM_3 + 2),(_bmm150_read_mag_data_PARM_2 + 2)
05AC 8E82      1181            mov     dpl,r6
05AE 8983      1182            mov     dph,r1
05B0 C002      1183            push    ar2
05B2 C003      1184            push    ar3
05B4 C004      1185            push    ar4
05B6 C005      1186            push    ar5
05B8 120000    1187            lcall   _compensate_x
05BB AE82      1188            mov     r6,dpl
05BD AF83      1189            mov     r7,dph
05BF D005      1190            pop     ar5
05C1 D004      1191            pop     ar4
05C3 D003      1192            pop     ar3
05C5 D002      1193            pop     ar2
05C7 8A82      1194            mov     dpl,r2
05C9 8B83      1195            mov     dph,r3
05CB 8CF0      1196            mov     b,r4
05CD EE        1197            mov     a,r6
05CE 120000    1198            lcall   __gptrput
05D1 A3        1199            inc     dptr
05D2 EF        1200            mov     a,r7
05D3 120000    1201            lcall   __gptrput
05D6           1202   ;        bmm150.c:914: mag_data->y = compensate_y(raw_mag_data.raw_datay, raw_mag_data.raw_data_r, dev);
05D6 7402      1203            mov     a,#0x02
05D8 2A        1204            add     a,r2
05D9 FA        1205            mov     r2,a
05DA E4        1206            clr     a
05DB 3B        1207            addc    a,r3
05DC FB        1208            mov     r3,a
05DD 904F52    1209            mov     dptr,#(_bmm150_read_mag_data_raw_mag_data_1_73 + 0x0002)
05E0 E0        1210            movx    a,@dptr
05E1 FE        1211            mov     r6,a
05E2 A3        1212            inc     dptr
05E3 E0        1213            movx    a,@dptr
05E4 FF        1214            mov     r7,a
05E5 904F54    1215            mov     dptr,#(_bmm150_read_mag_data_raw_mag_data_1_73 + 0x0004)
05E8 E0        1216            movx    a,@dptr
05E9 F510      1217            mov     _compensate_y_PARM_2,a
05EB A3        1218            inc     dptr
05EC E0        1219            movx    a,@dptr
05ED F511      1220            mov     (_compensate_y_PARM_2 + 1),a
05EF 856060    1221            mov     _compensate_y_PARM_3,_bmm150_read_mag_data_PARM_2
05F2 856161    1222            mov     (_compensate_y_PARM_3 + 1),(_bmm150_read_mag_data_PARM_2 + 1)
05F5 856262    1223            mov     (_compensate_y_PARM_3 + 2),(_bmm150_read_mag_data_PARM_2 + 2)
05F8 8E82      1224            mov     dpl,r6
05FA 8F83      1225            mov     dph,r7
05FC C002      1226            push    ar2
05FE C003      1227            push    ar3
0600 C004      1228            push    ar4
0602 C005      1229            push    ar5
0604 120000    1230            lcall   _compensate_y
0607 AE82      1231            mov     r6,dpl
0609 AF83      1232            mov     r7,dph
060B D005      1233            pop     ar5
060D D004      1234            pop     ar4
060F D003      1235            pop     ar3
0611 D002      1236            pop     ar2
0613 8A82      1237            mov     dpl,r2
0615 8B83      1238            mov     dph,r3
0617 8CF0      1239            mov     b,r4
0619 EE        1240            mov     a,r6
061A 120000    1241            lcall   __gptrput
061D A3        1242            inc     dptr
061E EF        1243            mov     a,r7
061F 120000    1244            lcall   __gptrput
0622           1245   L007002?:
0622           1246   ;        bmm150.c:920: return rslt;
0622 8D82      1247            mov     dpl,r5
0624 22        1248            ret
0625           1249   ;------------------------------------------------------------
0625           1250   ;Allocation info for local variables in function 'null_ptr_check'
0625           1251   ;------------------------------------------------------------
0625           1252   ;rslt                      Allocated with name '_null_ptr_check_rslt_1_76'
0625           1253   ;dev                       Allocated to registers r2 r3 r4 
0625           1254   ;------------------------------------------------------------
0625           1255   ;        bmm150.c:1089: xdata static int8_t null_ptr_check(const struct bmm150_dev *dev)
0625           1256   ;        -----------------------------------------
0625           1257   ;         function null_ptr_check
0625           1258   ;        -----------------------------------------
0625           1259   _null_ptr_check:
0625 AA82      1260            mov     r2,dpl
0627 AB83      1261            mov     r3,dph
0629 ACF0      1262            mov     r4,b
062B           1263   ;        bmm150.c:1093: if ((dev == NULL) || (dev->read == NULL) || (dev->write == NULL) || (dev->delay_us == NULL) ||
062B BA00F8    1264            cjne    r2,#0x00,L008014?
062E BB00F8    1265            cjne    r3,#0x00,L008014?
0631 BC00F8    1266            cjne    r4,#0x00,L008014?
0634 020000    1267            ljmp    L008001?
0637           1268   L008014?:
0637 7406      1269            mov     a,#0x06
0639 2A        1270            add     a,r2
063A FD        1271            mov     r5,a
063B E4        1272            clr     a
063C 3B        1273            addc    a,r3
063D FE        1274            mov     r6,a
063E 8C07      1275            mov     ar7,r4
0640 8D82      1276            mov     dpl,r5
0642 8E83      1277            mov     dph,r6
0644 8FF0      1278            mov     b,r7
0646 120000    1279            lcall   __gptrget
0649 FD        1280            mov     r5,a
064A A3        1281            inc     dptr
064B 120000    1282            lcall   __gptrget
064E FE        1283            mov     r6,a
064F 7F80      1284            mov     r7,#0x80
0651 BD0078    1285            cjne    r5,#0x00,L008015?
0654 BE0078    1286            cjne    r6,#0x00,L008015?
0657 BF0078    1287            cjne    r7,#0x00,L008015?
065A 8000      1288            sjmp    L008001?
065C           1289   L008015?:
065C 7408      1290            mov     a,#0x08
065E 2A        1291            add     a,r2
065F FD        1292            mov     r5,a
0660 E4        1293            clr     a
0661 3B        1294            addc    a,r3
0662 FE        1295            mov     r6,a
0663 8C07      1296            mov     ar7,r4
0665 8D82      1297            mov     dpl,r5
0667 8E83      1298            mov     dph,r6
0669 8FF0      1299            mov     b,r7
066B 120000    1300            lcall   __gptrget
066E FD        1301            mov     r5,a
066F A3        1302            inc     dptr
0670 120000    1303            lcall   __gptrget
0673 FE        1304            mov     r6,a
0674 7F80      1305            mov     r7,#0x80
0676 BD00B8    1306            cjne    r5,#0x00,L008016?
0679 BE00B8    1307            cjne    r6,#0x00,L008016?
067C BF00B8    1308            cjne    r7,#0x00,L008016?
067F 8000      1309            sjmp    L008001?
0681           1310   L008016?:
0681 740A      1311            mov     a,#0x0A
0683 2A        1312            add     a,r2
0684 FD        1313            mov     r5,a
0685 E4        1314            clr     a
0686 3B        1315            addc    a,r3
0687 FE        1316            mov     r6,a
0688 8C07      1317            mov     ar7,r4
068A 8D82      1318            mov     dpl,r5
068C 8E83      1319            mov     dph,r6
068E 8FF0      1320            mov     b,r7
0690 120000    1321            lcall   __gptrget
0693 FD        1322            mov     r5,a
0694 A3        1323            inc     dptr
0695 120000    1324            lcall   __gptrget
0698 FE        1325            mov     r6,a
0699 7F80      1326            mov     r7,#0x80
069B BD00F8    1327            cjne    r5,#0x00,L008017?
069E BE00F8    1328            cjne    r6,#0x00,L008017?
06A1 BF00F8    1329            cjne    r7,#0x00,L008017?
06A4 8000      1330            sjmp    L008001?
06A6           1331   L008017?:
06A6           1332   ;        bmm150.c:1094: (dev->intf_ptr == NULL))
06A6 7402      1333            mov     a,#0x02
06A8 2A        1334            add     a,r2
06A9 FA        1335            mov     r2,a
06AA E4        1336            clr     a
06AB 3B        1337            addc    a,r3
06AC FB        1338            mov     r3,a
06AD 8A82      1339            mov     dpl,r2
06AF 8B83      1340            mov     dph,r3
06B1 8CF0      1341            mov     b,r4
06B3 120000    1342            lcall   __gptrget
06B6 FA        1343            mov     r2,a
06B7 A3        1344            inc     dptr
06B8 120000    1345            lcall   __gptrget
06BB FB        1346            mov     r3,a
06BC A3        1347            inc     dptr
06BD 120000    1348            lcall   __gptrget
06C0 FC        1349            mov     r4,a
06C1 BA0038    1350            cjne    r2,#0x00,L008002?
06C4 BB0038    1351            cjne    r3,#0x00,L008002?
06C7 BC0038    1352            cjne    r4,#0x00,L008002?
06CA           1353   L008001?:
06CA           1354   ;        bmm150.c:1097: rslt = BMM150_E_NULL_PTR;
06CA 904FA0    1355            mov     dptr,#_null_ptr_check_rslt_1_76
06CD 74FF      1356            mov     a,#0xFF
06CF F0        1357            movx    @dptr,a
06D0 8000      1358            sjmp    L008003?
06D2           1359   L008002?:
06D2           1360   ;        bmm150.c:1102: rslt = BMM150_OK;
06D2 904FA0    1361            mov     dptr,#_null_ptr_check_rslt_1_76
06D5 E4        1362            clr     a
06D6 F0        1363            movx    @dptr,a
06D7           1364   L008003?:
06D7           1365   ;        bmm150.c:1105: return rslt;
06D7 904FA0    1366            mov     dptr,#_null_ptr_check_rslt_1_76
06DA E0        1367            movx    a,@dptr
06DB F582      1368            mov     dpl,a
06DD 22        1369            ret
06DE           1370   ;------------------------------------------------------------
06DE           1371   ;Allocation info for local variables in function 'set_power_control_bit'
06DE           1372   ;------------------------------------------------------------
06DE           1373   ;dev                       Allocated with name '_set_power_control_bit_PARM_2'
06DE           1374   ;pwrcntrl_bit              Allocated to registers r2 
06DE           1375   ;rslt                      Allocated with name '_set_power_control_bit_rslt_1_80'
06DE           1376   ;reg_data                  Allocated with name '_set_power_control_bit_reg_data_1_80'
06DE           1377   ;------------------------------------------------------------
06DE           1378   ;        bmm150.c:1111: xdata static int8_t set_power_control_bit(uint8_t pwrcntrl_bit, struct bmm150_dev *dev)
06DE           1379   ;        -----------------------------------------
06DE           1380   ;         function set_power_control_bit
06DE           1381   ;        -----------------------------------------
06DE           1382   _set_power_control_bit:
06DE AA82      1383            mov     r2,dpl
06E0           1384   ;        bmm150.c:1114: xdata uint8_t reg_data = 0;
06E0 905060    1385            mov     dptr,#_set_power_control_bit_reg_data_1_80
06E3 E4        1386            clr     a
06E4 F0        1387            movx    @dptr,a
06E5           1388   ;        bmm150.c:1117: rslt = bmm150_get_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
06E5 C002      1389            push    ar2
06E7 C040      1390            push    _set_power_control_bit_PARM_2
06E9 C041      1391            push    (_set_power_control_bit_PARM_2 + 1)
06EB C042      1392            push    (_set_power_control_bit_PARM_2 + 2)
06ED 7401      1393            mov     a,#0x01
06EF C0E0      1394            push    acc
06F1 E4        1395            clr     a
06F2 C0E0      1396            push    acc
06F4 C0E0      1397            push    acc
06F6 C0E0      1398            push    acc
06F8 7460      1399            mov     a,#_set_power_control_bit_reg_data_1_80
06FA C0E0      1400            push    acc
06FC 7450      1401            mov     a,#(_set_power_control_bit_reg_data_1_80 >> 8)
06FE C0E0      1402            push    acc
0700 E4        1403            clr     a
0701 C0E0      1404            push    acc
0703 75824B    1405            mov     dpl,#0x4B
0706 120000    1406            lcall   _bmm150_get_regs
0709 AB82      1407            mov     r3,dpl
070B E581      1408            mov     a,sp
070D 24F6      1409            add     a,#0xf6
070F F581      1410            mov     sp,a
0711 905000    1411            mov     dptr,#_set_power_control_bit_rslt_1_80
0714 EB        1412            mov     a,r3
0715 F0        1413            movx    @dptr,a
0716           1414   ;        bmm150.c:1118: printf("Power control register is read\n");
0716 C003      1415            push    ar3
0718 74B8      1416            mov     a,#__str_7
071A C0E0      1417            push    acc
071C 7464      1418            mov     a,#(__str_7 >> 8)
071E C0E0      1419            push    acc
0720 7480      1420            mov     a,#0x80
0722 C0E0      1421            push    acc
0724 120000    1422            lcall   _printf
0727 1581      1423            dec     sp
0729 1581      1424            dec     sp
072B 1581      1425            dec     sp
072D D003      1426            pop     ar3
072F D002      1427            pop     ar2
0731           1428   ;        bmm150.c:1121: if (rslt == BMM150_OK)
0731 EB        1429            mov     a,r3
0732 7000      1430            jnz     L009004?
0734           1431   ;        bmm150.c:1124: reg_data = BMM150_SET_BITS_POS_0(reg_data, BMM150_PWR_CNTRL, pwrcntrl_bit);
0734 905060    1432            mov     dptr,#_set_power_control_bit_reg_data_1_80
0737 E0        1433            movx    a,@dptr
0738 FB        1434            mov     r3,a
0739 5303FE    1435            anl     ar3,#0xFE
073C 8A04      1436            mov     ar4,r2
073E 530401    1437            anl     ar4,#0x01
0741 E4        1438            clr     a
0742 FD        1439            mov     r5,a
0743 FE        1440            mov     r6,a
0744 EB        1441            mov     a,r3
0745 4204      1442            orl     ar4,a
0747 EE        1443            mov     a,r6
0748 4205      1444            orl     ar5,a
074A 905060    1445            mov     dptr,#_set_power_control_bit_reg_data_1_80
074D EC        1446            mov     a,r4
074E F0        1447            movx    @dptr,a
074F           1448   ;        bmm150.c:1125: rslt = bmm150_set_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
074F 75F060    1449            mov     _bmm150_set_regs_PARM_2,#_set_power_control_bit_reg_data_1_80
0752 75F150    1450            mov     (_bmm150_set_regs_PARM_2 + 1),#(_set_power_control_bit_reg_data_1_80 >> 8)
0755 75F200    1451            mov     (_bmm150_set_regs_PARM_2 + 2),#0x00
0758 75A001    1452            mov     _bmm150_set_regs_PARM_3,#0x01
075B E4        1453            clr     a
075C F5A1      1454            mov     (_bmm150_set_regs_PARM_3 + 1),a
075E F5A2      1455            mov     (_bmm150_set_regs_PARM_3 + 2),a
0760 F5A3      1456            mov     (_bmm150_set_regs_PARM_3 + 3),a
0762 854050    1457            mov     _bmm150_set_regs_PARM_4,_set_power_control_bit_PARM_2
0765 854151    1458            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_power_control_bit_PARM_2 + 1)
0768 854252    1459            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_power_control_bit_PARM_2 + 2)
076B 75824B    1460            mov     dpl,#0x4B
076E C002      1461            push    ar2
0770 120000    1462            lcall   _bmm150_set_regs
0773 AB82      1463            mov     r3,dpl
0775 D002      1464            pop     ar2
0777 905000    1465            mov     dptr,#_set_power_control_bit_rslt_1_80
077A EB        1466            mov     a,r3
077B F0        1467            movx    @dptr,a
077C           1468   ;        bmm150.c:1127: if (rslt == BMM150_OK)
077C EB        1469            mov     a,r3
077D 7000      1470            jnz     L009004?
077F           1471   ;        bmm150.c:1132: dev->pwr_cntrl_bit = pwrcntrl_bit;
077F 7414      1472            mov     a,#0x14
0781 2540      1473            add     a,_set_power_control_bit_PARM_2
0783 FB        1474            mov     r3,a
0784 E4        1475            clr     a
0785 3541      1476            addc    a,(_set_power_control_bit_PARM_2 + 1)
0787 FC        1477            mov     r4,a
0788 AD42      1478            mov     r5,(_set_power_control_bit_PARM_2 + 2)
078A 8B82      1479            mov     dpl,r3
078C 8C83      1480            mov     dph,r4
078E 8DF0      1481            mov     b,r5
0790 EA        1482            mov     a,r2
0791 120000    1483            lcall   __gptrput
0794           1484   L009004?:
0794           1485   ;        bmm150.c:1136: printf("set_power_control_bit DONE\n"); 
0794 7438      1486            mov     a,#__str_8
0796 C0E0      1487            push    acc
0798 7465      1488            mov     a,#(__str_8 >> 8)
079A C0E0      1489            push    acc
079C 7480      1490            mov     a,#0x80
079E C0E0      1491            push    acc
07A0 120000    1492            lcall   _printf
07A3 1581      1493            dec     sp
07A5 1581      1494            dec     sp
07A7 1581      1495            dec     sp
07A9           1496   ;        bmm150.c:1137: return rslt;
07A9 905000    1497            mov     dptr,#_set_power_control_bit_rslt_1_80
07AC E0        1498            movx    a,@dptr
07AD F582      1499            mov     dpl,a
07AF 22        1500            ret
07B0           1501   ;------------------------------------------------------------
07B0           1502   ;Allocation info for local variables in function 'read_trim_registers'
07B0           1503   ;------------------------------------------------------------
07B0           1504   ;dev                       Allocated to registers r2 r3 r4 
07B0           1505   ;rslt                      Allocated with name '_read_trim_registers_rslt_1_84'
07B0           1506   ;trim_x1y1                 Allocated with name '_read_trim_registers_trim_x1y1_1_84'
07B0           1507   ;trim_xyz_data             Allocated with name '_read_trim_registers_trim_xyz_data_1_84'
07B0           1508   ;trim_xy1xy2               Allocated with name '_read_trim_registers_trim_xy1xy2_1_84'
07B0           1509   ;temp_msb                  Allocated with name '_read_trim_registers_temp_msb_1_84'
07B0           1510   ;------------------------------------------------------------
07B0           1511   ;        bmm150.c:1144: xdata static int8_t read_trim_registers(struct bmm150_dev *dev)
07B0           1512   ;        -----------------------------------------
07B0           1513   ;         function read_trim_registers
07B0           1514   ;        -----------------------------------------
07B0           1515   _read_trim_registers:
07B0 AA82      1516            mov     r2,dpl
07B2 AB83      1517            mov     r3,dph
07B4 ACF0      1518            mov     r4,b
07B6           1519   ;        bmm150.c:1147: xdata uint8_t trim_x1y1[2] = { 0 };
07B6 905110    1520            mov     dptr,#_read_trim_registers_trim_x1y1_1_84
07B9           1521   ;        bmm150.c:1148: xdata uint8_t trim_xyz_data[4] = { 0 };
07B9 E4        1522            clr     a
07BA F0        1523            movx    @dptr,a
07BB 905111    1524            mov     dptr,#(_read_trim_registers_trim_x1y1_1_84 + 0x0001)
07BE F0        1525            movx    @dptr,a
07BF 905170    1526            mov     dptr,#_read_trim_registers_trim_xyz_data_1_84
07C2 F0        1527            movx    @dptr,a
07C3 905171    1528            mov     dptr,#(_read_trim_registers_trim_xyz_data_1_84 + 0x0001)
07C6 F0        1529            movx    @dptr,a
07C7 905172    1530            mov     dptr,#(_read_trim_registers_trim_xyz_data_1_84 + 0x0002)
07CA           1531   ;        bmm150.c:1149: xdata uint8_t trim_xy1xy2[10] = { 0 };
07CA E4        1532            clr     a
07CB F0        1533            movx    @dptr,a
07CC 905173    1534            mov     dptr,#(_read_trim_registers_trim_xyz_data_1_84 + 0x0003)
07CF F0        1535            movx    @dptr,a
07D0 9051D0    1536            mov     dptr,#_read_trim_registers_trim_xy1xy2_1_84
07D3 F0        1537            movx    @dptr,a
07D4 9051D1    1538            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0001)
07D7 F0        1539            movx    @dptr,a
07D8 9051D2    1540            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0002)
07DB E4        1541            clr     a
07DC F0        1542            movx    @dptr,a
07DD 9051D3    1543            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0003)
07E0 F0        1544            movx    @dptr,a
07E1 9051D4    1545            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0004)
07E4 F0        1546            movx    @dptr,a
07E5 9051D5    1547            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0005)
07E8 F0        1548            movx    @dptr,a
07E9 9051D6    1549            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0006)
07EC E4        1550            clr     a
07ED F0        1551            movx    @dptr,a
07EE 9051D7    1552            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0007)
07F1 F0        1553            movx    @dptr,a
07F2 9051D8    1554            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0008)
07F5 F0        1555            movx    @dptr,a
07F6 9051D9    1556            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0009)
07F9 F0        1557            movx    @dptr,a
07FA           1558   ;        bmm150.c:1153: rslt = bmm150_get_regs(BMM150_DIG_X1, trim_x1y1, 2, dev);
07FA C002      1559            push    ar2
07FC C003      1560            push    ar3
07FE C004      1561            push    ar4
0800 C002      1562            push    ar2
0802 C003      1563            push    ar3
0804 C004      1564            push    ar4
0806 7402      1565            mov     a,#0x02
0808 C0E0      1566            push    acc
080A E4        1567            clr     a
080B C0E0      1568            push    acc
080D C0E0      1569            push    acc
080F C0E0      1570            push    acc
0811 7410      1571            mov     a,#_read_trim_registers_trim_x1y1_1_84
0813 C0E0      1572            push    acc
0815 7451      1573            mov     a,#(_read_trim_registers_trim_x1y1_1_84 >> 8)
0817 C0E0      1574            push    acc
0819 E4        1575            clr     a
081A C0E0      1576            push    acc
081C 75825D    1577            mov     dpl,#0x5D
081F 120000    1578            lcall   _bmm150_get_regs
0822 AD82      1579            mov     r5,dpl
0824 E581      1580            mov     a,sp
0826 24F6      1581            add     a,#0xf6
0828 F581      1582            mov     sp,a
082A D004      1583            pop     ar4
082C D003      1584            pop     ar3
082E D002      1585            pop     ar2
0830 9050B0    1586            mov     dptr,#_read_trim_registers_rslt_1_84
0833 ED        1587            mov     a,r5
0834 F0        1588            movx    @dptr,a
0835           1589   ;        bmm150.c:1155: if (rslt == BMM150_OK)
0835 ED        1590            mov     a,r5
0836 6000      1591            jz      L010012?
0838 020000    1592            ljmp    L010006?
083B           1593   L010012?:
083B           1594   ;        bmm150.c:1157: rslt = bmm150_get_regs(BMM150_DIG_Z4_LSB, trim_xyz_data, 4, dev);
083B C002      1595            push    ar2
083D C003      1596            push    ar3
083F C004      1597            push    ar4
0841 C002      1598            push    ar2
0843 C003      1599            push    ar3
0845 C004      1600            push    ar4
0847 7404      1601            mov     a,#0x04
0849 C0E0      1602            push    acc
084B E4        1603            clr     a
084C C0E0      1604            push    acc
084E C0E0      1605            push    acc
0850 C0E0      1606            push    acc
0852 7470      1607            mov     a,#_read_trim_registers_trim_xyz_data_1_84
0854 C0E0      1608            push    acc
0856 7451      1609            mov     a,#(_read_trim_registers_trim_xyz_data_1_84 >> 8)
0858 C0E0      1610            push    acc
085A E4        1611            clr     a
085B C0E0      1612            push    acc
085D 758262    1613            mov     dpl,#0x62
0860 120000    1614            lcall   _bmm150_get_regs
0863 AD82      1615            mov     r5,dpl
0865 E581      1616            mov     a,sp
0867 24F6      1617            add     a,#0xf6
0869 F581      1618            mov     sp,a
086B D004      1619            pop     ar4
086D D003      1620            pop     ar3
086F D002      1621            pop     ar2
0871 9050B0    1622            mov     dptr,#_read_trim_registers_rslt_1_84
0874 ED        1623            mov     a,r5
0875 F0        1624            movx    @dptr,a
0876           1625   ;        bmm150.c:1159: if (rslt == BMM150_OK)
0876 ED        1626            mov     a,r5
0877 6000      1627            jz      L010013?
0879 020000    1628            ljmp    L010006?
087C           1629   L010013?:
087C           1630   ;        bmm150.c:1161: rslt = bmm150_get_regs(BMM150_DIG_Z2_LSB, trim_xy1xy2, 10, dev);
087C C002      1631            push    ar2
087E C003      1632            push    ar3
0880 C004      1633            push    ar4
0882 C002      1634            push    ar2
0884 C003      1635            push    ar3
0886 C004      1636            push    ar4
0888 740A      1637            mov     a,#0x0A
088A C0E0      1638            push    acc
088C E4        1639            clr     a
088D C0E0      1640            push    acc
088F C0E0      1641            push    acc
0891 C0E0      1642            push    acc
0893 74D0      1643            mov     a,#_read_trim_registers_trim_xy1xy2_1_84
0895 C0E0      1644            push    acc
0897 7451      1645            mov     a,#(_read_trim_registers_trim_xy1xy2_1_84 >> 8)
0899 C0E0      1646            push    acc
089B E4        1647            clr     a
089C C0E0      1648            push    acc
089E 758268    1649            mov     dpl,#0x68
08A1 120000    1650            lcall   _bmm150_get_regs
08A4 AD82      1651            mov     r5,dpl
08A6 E581      1652            mov     a,sp
08A8 24F6      1653            add     a,#0xf6
08AA F581      1654            mov     sp,a
08AC D004      1655            pop     ar4
08AE D003      1656            pop     ar3
08B0 D002      1657            pop     ar2
08B2 9050B0    1658            mov     dptr,#_read_trim_registers_rslt_1_84
08B5 ED        1659            mov     a,r5
08B6 F0        1660            movx    @dptr,a
08B7           1661   ;        bmm150.c:1163: if (rslt == BMM150_OK)
08B7 ED        1662            mov     a,r5
08B8 6000      1663            jz      L010014?
08BA 020000    1664            ljmp    L010006?
08BD           1665   L010014?:
08BD           1666   ;        bmm150.c:1168: dev->trim_data.dig_x1 = (int8_t)trim_x1y1[0];
08BD 740C      1667            mov     a,#0x0C
08BF 2A        1668            add     a,r2
08C0 FD        1669            mov     r5,a
08C1 E4        1670            clr     a
08C2 3B        1671            addc    a,r3
08C3 FE        1672            mov     r6,a
08C4 8C07      1673            mov     ar7,r4
08C6 905110    1674            mov     dptr,#_read_trim_registers_trim_x1y1_1_84
08C9 E0        1675            movx    a,@dptr
08CA 8D82      1676            mov     dpl,r5
08CC 8E83      1677            mov     dph,r6
08CE 8FF0      1678            mov     b,r7
08D0 120000    1679            lcall   __gptrput
08D3           1680   ;        bmm150.c:1169: dev->trim_data.dig_y1 = (int8_t)trim_x1y1[1];
08D3 740C      1681            mov     a,#0x0C
08D5 2A        1682            add     a,r2
08D6 FA        1683            mov     r2,a
08D7 E4        1684            clr     a
08D8 3B        1685            addc    a,r3
08D9 FB        1686            mov     r3,a
08DA 7401      1687            mov     a,#0x01
08DC 2A        1688            add     a,r2
08DD FD        1689            mov     r5,a
08DE E4        1690            clr     a
08DF 3B        1691            addc    a,r3
08E0 FE        1692            mov     r6,a
08E1 8C07      1693            mov     ar7,r4
08E3 905111    1694            mov     dptr,#(_read_trim_registers_trim_x1y1_1_84 + 0x0001)
08E6 E0        1695            movx    a,@dptr
08E7 8D82      1696            mov     dpl,r5
08E9 8E83      1697            mov     dph,r6
08EB 8FF0      1698            mov     b,r7
08ED 120000    1699            lcall   __gptrput
08F0           1700   ;        bmm150.c:1170: dev->trim_data.dig_x2 = (int8_t)trim_xyz_data[2];
08F0 7402      1701            mov     a,#0x02
08F2 2A        1702            add     a,r2
08F3 FD        1703            mov     r5,a
08F4 E4        1704            clr     a
08F5 3B        1705            addc    a,r3
08F6 FE        1706            mov     r6,a
08F7 8C07      1707            mov     ar7,r4
08F9 905172    1708            mov     dptr,#(_read_trim_registers_trim_xyz_data_1_84 + 0x0002)
08FC E0        1709            movx    a,@dptr
08FD 8D82      1710            mov     dpl,r5
08FF 8E83      1711            mov     dph,r6
0901 8FF0      1712            mov     b,r7
0903 120000    1713            lcall   __gptrput
0906           1714   ;        bmm150.c:1171: dev->trim_data.dig_y2 = (int8_t)trim_xyz_data[3];
0906 7403      1715            mov     a,#0x03
0908 2A        1716            add     a,r2
0909 FD        1717            mov     r5,a
090A E4        1718            clr     a
090B 3B        1719            addc    a,r3
090C FE        1720            mov     r6,a
090D 8C07      1721            mov     ar7,r4
090F 905173    1722            mov     dptr,#(_read_trim_registers_trim_xyz_data_1_84 + 0x0003)
0912 E0        1723            movx    a,@dptr
0913 8D82      1724            mov     dpl,r5
0915 8E83      1725            mov     dph,r6
0917 8FF0      1726            mov     b,r7
0919 120000    1727            lcall   __gptrput
091C           1728   ;        bmm150.c:1180: dev->trim_data.dig_xy1 = trim_xy1xy2[9];
091C 7404      1729            mov     a,#0x04
091E 2A        1730            add     a,r2
091F FD        1731            mov     r5,a
0920 E4        1732            clr     a
0921 3B        1733            addc    a,r3
0922 FE        1734            mov     r6,a
0923 8C07      1735            mov     ar7,r4
0925 9051D9    1736            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0009)
0928 E0        1737            movx    a,@dptr
0929 8D82      1738            mov     dpl,r5
092B 8E83      1739            mov     dph,r6
092D 8FF0      1740            mov     b,r7
092F 120000    1741            lcall   __gptrput
0932           1742   ;        bmm150.c:1181: dev->trim_data.dig_xy2 = (int8_t)trim_xy1xy2[8];
0932 7405      1743            mov     a,#0x05
0934 2A        1744            add     a,r2
0935 FD        1745            mov     r5,a
0936 E4        1746            clr     a
0937 3B        1747            addc    a,r3
0938 FE        1748            mov     r6,a
0939 8C07      1749            mov     ar7,r4
093B 9051D8    1750            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0008)
093E E0        1751            movx    a,@dptr
093F 8D82      1752            mov     dpl,r5
0941 8E83      1753            mov     dph,r6
0943 8FF0      1754            mov     b,r7
0945 120000    1755            lcall   __gptrput
0948           1756   ;        bmm150.c:1182: temp_msb = ((uint16_t)(trim_xy1xy2[5] & 0x7F)) << 8;
0948 9051D5    1757            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0005)
094B E0        1758            movx    a,@dptr
094C FD        1759            mov     r5,a
094D 53057F    1760            anl     ar5,#0x7F
0950 8D06      1761            mov     ar6,r5
0952 7D00      1762            mov     r5,#0x00
0954           1763   ;        bmm150.c:1183: dev->trim_data.dig_xyz1 = (uint16_t)(temp_msb | trim_xy1xy2[4]);
0954 7406      1764            mov     a,#0x06
0956 2A        1765            add     a,r2
0957 FA        1766            mov     r2,a
0958 E4        1767            clr     a
0959 3B        1768            addc    a,r3
095A FB        1769            mov     r3,a
095B 9051D4    1770            mov     dptr,#(_read_trim_registers_trim_xy1xy2_1_84 + 0x0004)
095E E0        1771            movx    a,@dptr
095F FF        1772            mov     r7,a
0960 7800      1773            mov     r0,#0x00
0962 4205      1774            orl     ar5,a
0964 E8        1775            mov     a,r0
0965 4206      1776            orl     ar6,a
0967 8A82      1777            mov     dpl,r2
0969 8B83      1778            mov     dph,r3
096B 8CF0      1779            mov     b,r4
096D ED        1780            mov     a,r5
096E 120000    1781            lcall   __gptrput
0971 A3        1782            inc     dptr
0972 EE        1783            mov     a,r6
0973 120000    1784            lcall   __gptrput
0976           1785   L010006?:
0976           1786   ;        bmm150.c:1188: return rslt;
0976 9050B0    1787            mov     dptr,#_read_trim_registers_rslt_1_84
0979 E0        1788            movx    a,@dptr
097A F582      1789            mov     dpl,a
097C 22        1790            ret
097D           1791   ;------------------------------------------------------------
097D           1792   ;Allocation info for local variables in function 'write_op_mode'
097D           1793   ;------------------------------------------------------------
097D           1794   ;dev                       Allocated with name '_write_op_mode_PARM_2'
097D           1795   ;op_mode                   Allocated to registers r2 
097D           1796   ;rslt                      Allocated with name '_write_op_mode_rslt_1_89'
097D           1797   ;reg_data                  Allocated with name '_write_op_mode_reg_data_1_89'
097D           1798   ;------------------------------------------------------------
097D           1799   ;        bmm150.c:1195: xdata static int8_t write_op_mode(uint8_t op_mode, struct bmm150_dev *dev)
097D           1800   ;        -----------------------------------------
097D           1801   ;         function write_op_mode
097D           1802   ;        -----------------------------------------
097D           1803   _write_op_mode:
097D AA82      1804            mov     r2,dpl
097F           1805   ;        bmm150.c:1201: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
097F C002      1806            push    ar2
0981 C090      1807            push    _write_op_mode_PARM_2
0983 C091      1808            push    (_write_op_mode_PARM_2 + 1)
0985 C092      1809            push    (_write_op_mode_PARM_2 + 2)
0987 7401      1810            mov     a,#0x01
0989 C0E0      1811            push    acc
098B E4        1812            clr     a
098C C0E0      1813            push    acc
098E C0E0      1814            push    acc
0990 C0E0      1815            push    acc
0992 7470      1816            mov     a,#_write_op_mode_reg_data_1_89
0994 C0E0      1817            push    acc
0996 7452      1818            mov     a,#(_write_op_mode_reg_data_1_89 >> 8)
0998 C0E0      1819            push    acc
099A E4        1820            clr     a
099B C0E0      1821            push    acc
099D 75824C    1822            mov     dpl,#0x4C
09A0 120000    1823            lcall   _bmm150_get_regs
09A3 AB82      1824            mov     r3,dpl
09A5 E581      1825            mov     a,sp
09A7 24F6      1826            add     a,#0xf6
09A9 F581      1827            mov     sp,a
09AB D002      1828            pop     ar2
09AD 905220    1829            mov     dptr,#_write_op_mode_rslt_1_89
09B0 EB        1830            mov     a,r3
09B1 F0        1831            movx    @dptr,a
09B2           1832   ;        bmm150.c:1203: if (rslt == BMM150_OK)
09B2 EB        1833            mov     a,r3
09B3 7000      1834            jnz     L011002?
09B5           1835   ;        bmm150.c:1206: reg_data = BMM150_SET_BITS(reg_data, BMM150_OP_MODE, op_mode);
09B5 905270    1836            mov     dptr,#_write_op_mode_reg_data_1_89
09B8 E0        1837            movx    a,@dptr
09B9 FB        1838            mov     r3,a
09BA 5303F9    1839            anl     ar3,#0xF9
09BD E4        1840            clr     a
09BE CA        1841            xch     a,r2
09BF 25E0      1842            add     a,acc
09C1 CA        1843            xch     a,r2
09C2 33        1844            rlc     a
09C3 530206    1845            anl     ar2,#0x06
09C6 E4        1846            clr     a
09C7 FC        1847            mov     r4,a
09C8 FD        1848            mov     r5,a
09C9 EB        1849            mov     a,r3
09CA 4202      1850            orl     ar2,a
09CC ED        1851            mov     a,r5
09CD 4204      1852            orl     ar4,a
09CF 905270    1853            mov     dptr,#_write_op_mode_reg_data_1_89
09D2 EA        1854            mov     a,r2
09D3 F0        1855            movx    @dptr,a
09D4           1856   ;        bmm150.c:1207: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
09D4 75F070    1857            mov     _bmm150_set_regs_PARM_2,#_write_op_mode_reg_data_1_89
09D7 75F152    1858            mov     (_bmm150_set_regs_PARM_2 + 1),#(_write_op_mode_reg_data_1_89 >> 8)
09DA 75F200    1859            mov     (_bmm150_set_regs_PARM_2 + 2),#0x00
09DD 75A001    1860            mov     _bmm150_set_regs_PARM_3,#0x01
09E0 E4        1861            clr     a
09E1 F5A1      1862            mov     (_bmm150_set_regs_PARM_3 + 1),a
09E3 F5A2      1863            mov     (_bmm150_set_regs_PARM_3 + 2),a
09E5 F5A3      1864            mov     (_bmm150_set_regs_PARM_3 + 3),a
09E7 859050    1865            mov     _bmm150_set_regs_PARM_4,_write_op_mode_PARM_2
09EA 859151    1866            mov     (_bmm150_set_regs_PARM_4 + 1),(_write_op_mode_PARM_2 + 1)
09ED 859252    1867            mov     (_bmm150_set_regs_PARM_4 + 2),(_write_op_mode_PARM_2 + 2)
09F0 75824C    1868            mov     dpl,#0x4C
09F3 120000    1869            lcall   _bmm150_set_regs
09F6 E582      1870            mov     a,dpl
09F8 905220    1871            mov     dptr,#_write_op_mode_rslt_1_89
09FB F0        1872            movx    @dptr,a
09FC           1873   L011002?:
09FC           1874   ;        bmm150.c:1210: return rslt;
09FC 905220    1875            mov     dptr,#_write_op_mode_rslt_1_89
09FF E0        1876            movx    a,@dptr
0A00 F582      1877            mov     dpl,a
0A02 22        1878            ret
0A03           1879   ;------------------------------------------------------------
0A03           1880   ;Allocation info for local variables in function 'suspend_to_sleep_mode'
0A03           1881   ;------------------------------------------------------------
0A03           1882   ;dev                       Allocated to registers r2 r3 r4 
0A03           1883   ;rslt                      Allocated with name '_suspend_to_sleep_mode_rslt_1_92'
0A03           1884   ;------------------------------------------------------------
0A03           1885   ;        bmm150.c:1217: xdata static int8_t suspend_to_sleep_mode(struct bmm150_dev *dev)
0A03           1886   ;        -----------------------------------------
0A03           1887   ;         function suspend_to_sleep_mode
0A03           1888   ;        -----------------------------------------
0A03           1889   _suspend_to_sleep_mode:
0A03           1890   ;        bmm150.c:1222: rslt = null_ptr_check(dev);
0A03 AA82      1891            mov     r2,dpl
0A05 AB83      1892            mov     r3,dph
0A07 ACF0      1893            mov     r4,b
0A09 C002      1894            push    ar2
0A0B C003      1895            push    ar3
0A0D C004      1896            push    ar4
0A0F 120000    1897            lcall   _null_ptr_check
0A12 AD82      1898            mov     r5,dpl
0A14 D004      1899            pop     ar4
0A16 D003      1900            pop     ar3
0A18 D002      1901            pop     ar2
0A1A 9052D0    1902            mov     dptr,#_suspend_to_sleep_mode_rslt_1_92
0A1D ED        1903            mov     a,r5
0A1E F0        1904            movx    @dptr,a
0A1F           1905   ;        bmm150.c:1225: if (rslt == BMM150_OK)
0A1F ED        1906            mov     a,r5
0A20 6000      1907            jz      L012009?
0A22 020000    1908            ljmp    L012004?
0A25           1909   L012009?:
0A25           1910   ;        bmm150.c:1227: if (dev->pwr_cntrl_bit == BMM150_POWER_CNTRL_DISABLE)
0A25 7414      1911            mov     a,#0x14
0A27 2A        1912            add     a,r2
0A28 FD        1913            mov     r5,a
0A29 E4        1914            clr     a
0A2A 3B        1915            addc    a,r3
0A2B FE        1916            mov     r6,a
0A2C 8C07      1917            mov     ar7,r4
0A2E 8D82      1918            mov     dpl,r5
0A30 8E83      1919            mov     dph,r6
0A32 8FF0      1920            mov     b,r7
0A34 120000    1921            lcall   __gptrget
0A37 6000      1922            jz      L012010?
0A39 020000    1923            ljmp    L012004?
0A3C           1924   L012010?:
0A3C           1925   ;        bmm150.c:1229: rslt = set_power_control_bit(BMM150_POWER_CNTRL_ENABLE, dev);
0A3C 8A40      1926            mov     _set_power_control_bit_PARM_2,r2
0A3E 8B41      1927            mov     (_set_power_control_bit_PARM_2 + 1),r3
0A40 8C42      1928            mov     (_set_power_control_bit_PARM_2 + 2),r4
0A42 758201    1929            mov     dpl,#0x01
0A45 C002      1930            push    ar2
0A47 C003      1931            push    ar3
0A49 C004      1932            push    ar4
0A4B 120000    1933            lcall   _set_power_control_bit
0A4E E582      1934            mov     a,dpl
0A50 D004      1935            pop     ar4
0A52 D003      1936            pop     ar3
0A54 D002      1937            pop     ar2
0A56 9052D0    1938            mov     dptr,#_suspend_to_sleep_mode_rslt_1_92
0A59 F0        1939            movx    @dptr,a
0A5A           1940   ;        bmm150.c:1232: dev->delay_us(BMM150_START_UP_TIME, dev->intf_ptr);
0A5A 740A      1941            mov     a,#0x0A
0A5C 2A        1942            add     a,r2
0A5D FD        1943            mov     r5,a
0A5E E4        1944            clr     a
0A5F 3B        1945            addc    a,r3
0A60 FE        1946            mov     r6,a
0A61 8C07      1947            mov     ar7,r4
0A63 8D82      1948            mov     dpl,r5
0A65 8E83      1949            mov     dph,r6
0A67 8FF0      1950            mov     b,r7
0A69 120000    1951            lcall   __gptrget
0A6C FD        1952            mov     r5,a
0A6D A3        1953            inc     dptr
0A6E 120000    1954            lcall   __gptrget
0A71 FE        1955            mov     r6,a
0A72 7402      1956            mov     a,#0x02
0A74 2A        1957            add     a,r2
0A75 FA        1958            mov     r2,a
0A76 E4        1959            clr     a
0A77 3B        1960            addc    a,r3
0A78 FB        1961            mov     r3,a
0A79 8A82      1962            mov     dpl,r2
0A7B 8B83      1963            mov     dph,r3
0A7D 8CF0      1964            mov     b,r4
0A7F 120000    1965            lcall   __gptrget
0A82 FA        1966            mov     r2,a
0A83 A3        1967            inc     dptr
0A84 120000    1968            lcall   __gptrget
0A87 FB        1969            mov     r3,a
0A88 A3        1970            inc     dptr
0A89 120000    1971            lcall   __gptrget
0A8C FC        1972            mov     r4,a
0A8D C005      1973            push    ar5
0A8F C006      1974            push    ar6
0A91 C002      1975            push    ar2
0A93 C003      1976            push    ar3
0A95 C004      1977            push    ar4
0A97 7478      1978            mov     a,#L012011?
0A99 C0E0      1979            push    acc
0A9B 7467      1980            mov     a,#(L012011? >> 8)
0A9D C0E0      1981            push    acc
0A9F C005      1982            push    ar5
0AA1 C006      1983            push    ar6
0AA3 900BB8    1984            mov     dptr,#0x0BB8
0AA6 E4        1985            clr     a
0AA7 F5F0      1986            mov     b,a
0AA9 22        1987            ret
0AAA           1988   L012011?:
0AAA 1581      1989            dec     sp
0AAC 1581      1990            dec     sp
0AAE 1581      1991            dec     sp
0AB0 D006      1992            pop     ar6
0AB2 D005      1993            pop     ar5
0AB4           1994   L012004?:
0AB4           1995   ;        bmm150.c:1236: return rslt;
0AB4 9052D0    1996            mov     dptr,#_suspend_to_sleep_mode_rslt_1_92
0AB7 E0        1997            movx    a,@dptr
0AB8 F582      1998            mov     dpl,a
0ABA 22        1999            ret
0ABB           2000   ;------------------------------------------------------------
0ABB           2001   ;Allocation info for local variables in function 'set_xy_rep'
0ABB           2002   ;------------------------------------------------------------
0ABB           2003   ;dev                       Allocated with name '_set_xy_rep_PARM_2'
0ABB           2004   ;settings                  Allocated to registers r2 r3 r4 
0ABB           2005   ;rslt                      Allocated with name '_set_xy_rep_rslt_1_96'
0ABB           2006   ;rep_xy                    Allocated with name '_set_xy_rep_rep_xy_1_96'
0ABB           2007   ;------------------------------------------------------------
0ABB           2008   ;        bmm150.c:1242: xdata static int8_t set_xy_rep(const struct bmm150_settings *settings, struct bmm150_dev *dev)
0ABB           2009   ;        -----------------------------------------
0ABB           2010   ;         function set_xy_rep
0ABB           2011   ;        -----------------------------------------
0ABB           2012   _set_xy_rep:
0ABB AA82      2013            mov     r2,dpl
0ABD AB83      2014            mov     r3,dph
0ABF ACF0      2015            mov     r4,b
0AC1           2016   ;        bmm150.c:1248: rep_xy = settings->xy_rep;
0AC1 7403      2017            mov     a,#0x03
0AC3 2A        2018            add     a,r2
0AC4 FA        2019            mov     r2,a
0AC5 E4        2020            clr     a
0AC6 3B        2021            addc    a,r3
0AC7 FB        2022            mov     r3,a
0AC8 8A82      2023            mov     dpl,r2
0ACA 8B83      2024            mov     dph,r3
0ACC 8CF0      2025            mov     b,r4
0ACE 120000    2026            lcall   __gptrget
0AD1 905320    2027            mov     dptr,#_set_xy_rep_rep_xy_1_96
0AD4 F0        2028            movx    @dptr,a
0AD5           2029   ;        bmm150.c:1249: rslt = bmm150_set_regs(BMM150_REG_REP_XY, &rep_xy, 1, dev);
0AD5 75F020    2030            mov     _bmm150_set_regs_PARM_2,#_set_xy_rep_rep_xy_1_96
0AD8 75F153    2031            mov     (_bmm150_set_regs_PARM_2 + 1),#(_set_xy_rep_rep_xy_1_96 >> 8)
0ADB 75F200    2032            mov     (_bmm150_set_regs_PARM_2 + 2),#0x00
0ADE 75A001    2033            mov     _bmm150_set_regs_PARM_3,#0x01
0AE1 E4        2034            clr     a
0AE2 F5A1      2035            mov     (_bmm150_set_regs_PARM_3 + 1),a
0AE4 F5A2      2036            mov     (_bmm150_set_regs_PARM_3 + 2),a
0AE6 F5A3      2037            mov     (_bmm150_set_regs_PARM_3 + 3),a
0AE8 85E050    2038            mov     _bmm150_set_regs_PARM_4,_set_xy_rep_PARM_2
0AEB 85E151    2039            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_xy_rep_PARM_2 + 1)
0AEE 85E252    2040            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_xy_rep_PARM_2 + 2)
0AF1 758251    2041            mov     dpl,#0x51
0AF4           2042   ;        bmm150.c:1251: return rslt;
0AF4 020000    2043            ljmp    _bmm150_set_regs
0AF7           2044   ;------------------------------------------------------------
0AF7           2045   ;Allocation info for local variables in function 'set_odr'
0AF7           2046   ;------------------------------------------------------------
0AF7           2047   ;dev                       Allocated with name '_set_odr_PARM_2'
0AF7           2048   ;settings                  Allocated to registers r2 r3 r4 
0AF7           2049   ;rslt                      Allocated with name '_set_odr_rslt_1_98'
0AF7           2050   ;reg_data                  Allocated with name '_set_odr_reg_data_1_98'
0AF7           2051   ;------------------------------------------------------------
0AF7           2052   ;        bmm150.c:1272: xdata static int8_t set_odr(const struct bmm150_settings *settings, struct bmm150_dev *dev)
0AF7           2053   ;        -----------------------------------------
0AF7           2054   ;         function set_odr
0AF7           2055   ;        -----------------------------------------
0AF7           2056   _set_odr:
0AF7 AA82      2057            mov     r2,dpl
0AF9 AB83      2058            mov     r3,dph
0AFB ACF0      2059            mov     r4,b
0AFD           2060   ;        bmm150.c:1278: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
0AFD C002      2061            push    ar2
0AFF C003      2062            push    ar3
0B01 C004      2063            push    ar4
0B03 C020      2064            push    _set_odr_PARM_2
0B05 C021      2065            push    (_set_odr_PARM_2 + 1)
0B07 C022      2066            push    (_set_odr_PARM_2 + 2)
0B09 7401      2067            mov     a,#0x01
0B0B C0E0      2068            push    acc
0B0D E4        2069            clr     a
0B0E C0E0      2070            push    acc
0B10 C0E0      2071            push    acc
0B12 C0E0      2072            push    acc
0B14 74C0      2073            mov     a,#_set_odr_reg_data_1_98
0B16 C0E0      2074            push    acc
0B18 7453      2075            mov     a,#(_set_odr_reg_data_1_98 >> 8)
0B1A C0E0      2076            push    acc
0B1C E4        2077            clr     a
0B1D C0E0      2078            push    acc
0B1F 75824C    2079            mov     dpl,#0x4C
0B22 120000    2080            lcall   _bmm150_get_regs
0B25 AD82      2081            mov     r5,dpl
0B27 E581      2082            mov     a,sp
0B29 24F6      2083            add     a,#0xf6
0B2B F581      2084            mov     sp,a
0B2D D004      2085            pop     ar4
0B2F D003      2086            pop     ar3
0B31 D002      2087            pop     ar2
0B33 905370    2088            mov     dptr,#_set_odr_rslt_1_98
0B36 ED        2089            mov     a,r5
0B37 F0        2090            movx    @dptr,a
0B38           2091   ;        bmm150.c:1280: if (rslt == BMM150_OK)
0B38 ED        2092            mov     a,r5
0B39 7000      2093            jnz     L014002?
0B3B           2094   ;        bmm150.c:1283: reg_data = BMM150_SET_BITS(reg_data, BMM150_ODR, settings->data_rate);
0B3B 9053C0    2095            mov     dptr,#_set_odr_reg_data_1_98
0B3E E0        2096            movx    a,@dptr
0B3F FD        2097            mov     r5,a
0B40 5305C7    2098            anl     ar5,#0xC7
0B43 7402      2099            mov     a,#0x02
0B45 2A        2100            add     a,r2
0B46 FA        2101            mov     r2,a
0B47 E4        2102            clr     a
0B48 3B        2103            addc    a,r3
0B49 FB        2104            mov     r3,a
0B4A 8A82      2105            mov     dpl,r2
0B4C 8B83      2106            mov     dph,r3
0B4E 8CF0      2107            mov     b,r4
0B50 120000    2108            lcall   __gptrget
0B53 FA        2109            mov     r2,a
0B54 E4        2110            clr     a
0B55 C4        2111            swap    a
0B56 03        2112            rr      a
0B57 54F8      2113            anl     a,#0xf8
0B59 CA        2114            xch     a,r2
0B5A C4        2115            swap    a
0B5B 03        2116            rr      a
0B5C CA        2117            xch     a,r2
0B5D 6A        2118            xrl     a,r2
0B5E CA        2119            xch     a,r2
0B5F 54F8      2120            anl     a,#0xf8
0B61 CA        2121            xch     a,r2
0B62 6A        2122            xrl     a,r2
0B63 530238    2123            anl     ar2,#0x38
0B66 E4        2124            clr     a
0B67 FB        2125            mov     r3,a
0B68 FC        2126            mov     r4,a
0B69 ED        2127            mov     a,r5
0B6A 4202      2128            orl     ar2,a
0B6C EC        2129            mov     a,r4
0B6D 4203      2130            orl     ar3,a
0B6F 9053C0    2131            mov     dptr,#_set_odr_reg_data_1_98
0B72 EA        2132            mov     a,r2
0B73 F0        2133            movx    @dptr,a
0B74           2134   ;        bmm150.c:1284: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
0B74 75F0C0    2135            mov     _bmm150_set_regs_PARM_2,#_set_odr_reg_data_1_98
0B77 75F153    2136            mov     (_bmm150_set_regs_PARM_2 + 1),#(_set_odr_reg_data_1_98 >> 8)
0B7A 75F200    2137            mov     (_bmm150_set_regs_PARM_2 + 2),#0x00
0B7D 75A001    2138            mov     _bmm150_set_regs_PARM_3,#0x01
0B80 E4        2139            clr     a
0B81 F5A1      2140            mov     (_bmm150_set_regs_PARM_3 + 1),a
0B83 F5A2      2141            mov     (_bmm150_set_regs_PARM_3 + 2),a
0B85 F5A3      2142            mov     (_bmm150_set_regs_PARM_3 + 3),a
0B87 852050    2143            mov     _bmm150_set_regs_PARM_4,_set_odr_PARM_2
0B8A 852151    2144            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_odr_PARM_2 + 1)
0B8D 852252    2145            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_odr_PARM_2 + 2)
0B90 75824C    2146            mov     dpl,#0x4C
0B93 120000    2147            lcall   _bmm150_set_regs
0B96 E582      2148            mov     a,dpl
0B98 905370    2149            mov     dptr,#_set_odr_rslt_1_98
0B9B F0        2150            movx    @dptr,a
0B9C           2151   L014002?:
0B9C           2152   ;        bmm150.c:1287: return rslt;
0B9C 905370    2153            mov     dptr,#_set_odr_rslt_1_98
0B9F E0        2154            movx    a,@dptr
0BA0 F582      2155            mov     dpl,a
0BA2 22        2156            ret
0BA3           2157   ;------------------------------------------------------------
0BA3           2158   ;Allocation info for local variables in function 'set_odr_xyz_rep'
0BA3           2159   ;------------------------------------------------------------
0BA3           2160   ;dev                       Allocated with name '_set_odr_xyz_rep_PARM_2'
0BA3           2161   ;settings                  Allocated to registers r2 r3 r4 
0BA3           2162   ;rslt                      Allocated with name '_set_odr_xyz_rep_rslt_1_101'
0BA3           2163   ;------------------------------------------------------------
0BA3           2164   ;        bmm150.c:1293: xdata static int8_t set_odr_xyz_rep(const struct bmm150_settings *settings, struct bmm150_dev *dev)
0BA3           2165   ;        -----------------------------------------
0BA3           2166   ;         function set_odr_xyz_rep
0BA3           2167   ;        -----------------------------------------
0BA3           2168   _set_odr_xyz_rep:
0BA3 AA82      2169            mov     r2,dpl
0BA5 AB83      2170            mov     r3,dph
0BA7 ACF0      2171            mov     r4,b
0BA9           2172   ;        bmm150.c:1298: rslt = set_odr(settings, dev);
0BA9 857020    2173            mov     _set_odr_PARM_2,_set_odr_xyz_rep_PARM_2
0BAC 857121    2174            mov     (_set_odr_PARM_2 + 1),(_set_odr_xyz_rep_PARM_2 + 1)
0BAF 857222    2175            mov     (_set_odr_PARM_2 + 2),(_set_odr_xyz_rep_PARM_2 + 2)
0BB2 8A82      2176            mov     dpl,r2
0BB4 8B83      2177            mov     dph,r3
0BB6 8CF0      2178            mov     b,r4
0BB8 C002      2179            push    ar2
0BBA C003      2180            push    ar3
0BBC C004      2181            push    ar4
0BBE 120000    2182            lcall   _set_odr
0BC1 AD82      2183            mov     r5,dpl
0BC3 D004      2184            pop     ar4
0BC5 D003      2185            pop     ar3
0BC7 D002      2186            pop     ar2
0BC9 905410    2187            mov     dptr,#_set_odr_xyz_rep_rslt_1_101
0BCC ED        2188            mov     a,r5
0BCD F0        2189            movx    @dptr,a
0BCE           2190   ;        bmm150.c:1300: if (rslt == BMM150_OK)
0BCE ED        2191            mov     a,r5
0BCF 7000      2192            jnz     L015002?
0BD1           2193   ;        bmm150.c:1303: rslt = set_xy_rep(settings, dev);
0BD1 8570E0    2194            mov     _set_xy_rep_PARM_2,_set_odr_xyz_rep_PARM_2
0BD4 8571E1    2195            mov     (_set_xy_rep_PARM_2 + 1),(_set_odr_xyz_rep_PARM_2 + 1)
0BD7 8572E2    2196            mov     (_set_xy_rep_PARM_2 + 2),(_set_odr_xyz_rep_PARM_2 + 2)
0BDA 8A82      2197            mov     dpl,r2
0BDC 8B83      2198            mov     dph,r3
0BDE 8CF0      2199            mov     b,r4
0BE0 120000    2200            lcall   _set_xy_rep
0BE3 E582      2201            mov     a,dpl
0BE5 905410    2202            mov     dptr,#_set_odr_xyz_rep_rslt_1_101
0BE8 F0        2203            movx    @dptr,a
0BE9           2204   L015002?:
0BE9           2205   ;        bmm150.c:1312: return rslt;
0BE9 905410    2206            mov     dptr,#_set_odr_xyz_rep_rslt_1_101
0BEC E0        2207            movx    a,@dptr
0BED F582      2208            mov     dpl,a
0BEF 22        2209            ret
0BF0           2210   ;------------------------------------------------------------
0BF0           2211   ;Allocation info for local variables in function 'set_control_measurement_xyz'
0BF0           2212   ;------------------------------------------------------------
0BF0           2213   ;dev                       Allocated with name '_set_control_measurement_xyz_PARM_2'
0BF0           2214   ;settings                  Allocated to registers r2 r3 r4 
0BF0           2215   ;rslt                      Allocated with name '_set_control_measurement_xyz_rslt_1_104'
0BF0           2216   ;reg_data                  Allocated with name '_set_control_measurement_xyz_reg_data_1_104'
0BF0           2217   ;------------------------------------------------------------
0BF0           2218   ;        bmm150.c:1319: xdata static int8_t set_control_measurement_xyz(const struct bmm150_settings *settings, struct bmm150_dev *dev)
0BF0           2219   ;        -----------------------------------------
0BF0           2220   ;         function set_control_measurement_xyz
0BF0           2221   ;        -----------------------------------------
0BF0           2222   _set_control_measurement_xyz:
0BF0 AA82      2223            mov     r2,dpl
0BF2 AB83      2224            mov     r3,dph
0BF4 ACF0      2225            mov     r4,b
0BF6           2226   ;        bmm150.c:1324: rslt = bmm150_get_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
0BF6 C002      2227            push    ar2
0BF8 C003      2228            push    ar3
0BFA C004      2229            push    ar4
0BFC C0D0      2230            push    _set_control_measurement_xyz_PARM_2
0BFE C0D1      2231            push    (_set_control_measurement_xyz_PARM_2 + 1)
0C00 C0D2      2232            push    (_set_control_measurement_xyz_PARM_2 + 2)
0C02 7401      2233            mov     a,#0x01
0C04 C0E0      2234            push    acc
0C06 E4        2235            clr     a
0C07 C0E0      2236            push    acc
0C09 C0E0      2237            push    acc
0C0B C0E0      2238            push    acc
0C0D 74D0      2239            mov     a,#_set_control_measurement_xyz_reg_data_1_104
0C0F C0E0      2240            push    acc
0C11 7454      2241            mov     a,#(_set_control_measurement_xyz_reg_data_1_104 >> 8)
0C13 C0E0      2242            push    acc
0C15 E4        2243            clr     a
0C16 C0E0      2244            push    acc
0C18 75824E    2245            mov     dpl,#0x4E
0C1B 120000    2246            lcall   _bmm150_get_regs
0C1E AD82      2247            mov     r5,dpl
0C20 E581      2248            mov     a,sp
0C22 24F6      2249            add     a,#0xf6
0C24 F581      2250            mov     sp,a
0C26 D004      2251            pop     ar4
0C28 D003      2252            pop     ar3
0C2A D002      2253            pop     ar2
0C2C 905470    2254            mov     dptr,#_set_control_measurement_xyz_rslt_1_104
0C2F ED        2255            mov     a,r5
0C30 F0        2256            movx    @dptr,a
0C31           2257   ;        bmm150.c:1326: if (rslt == BMM150_OK)
0C31 ED        2258            mov     a,r5
0C32 7000      2259            jnz     L016002?
0C34           2260   ;        bmm150.c:1329: reg_data = BMM150_SET_BITS(reg_data, BMM150_CONTROL_MEASURE, settings->xyz_axes_control);
0C34 9054D0    2261            mov     dptr,#_set_control_measurement_xyz_reg_data_1_104
0C37 E0        2262            movx    a,@dptr
0C38 FD        2263            mov     r5,a
0C39 5305C7    2264            anl     ar5,#0xC7
0C3C 8A82      2265            mov     dpl,r2
0C3E 8B83      2266            mov     dph,r3
0C40 8CF0      2267            mov     b,r4
0C42 120000    2268            lcall   __gptrget
0C45 FA        2269            mov     r2,a
0C46 E4        2270            clr     a
0C47 C4        2271            swap    a
0C48 03        2272            rr      a
0C49 54F8      2273            anl     a,#0xf8
0C4B CA        2274            xch     a,r2
0C4C C4        2275            swap    a
0C4D 03        2276            rr      a
0C4E CA        2277            xch     a,r2
0C4F 6A        2278            xrl     a,r2
0C50 CA        2279            xch     a,r2
0C51 54F8      2280            anl     a,#0xf8
0C53 CA        2281            xch     a,r2
0C54 6A        2282            xrl     a,r2
0C55 530238    2283            anl     ar2,#0x38
0C58 E4        2284            clr     a
0C59 FB        2285            mov     r3,a
0C5A FC        2286            mov     r4,a
0C5B ED        2287            mov     a,r5
0C5C 4202      2288            orl     ar2,a
0C5E EC        2289            mov     a,r4
0C5F 4203      2290            orl     ar3,a
0C61 9054D0    2291            mov     dptr,#_set_control_measurement_xyz_reg_data_1_104
0C64 EA        2292            mov     a,r2
0C65 F0        2293            movx    @dptr,a
0C66           2294   ;        bmm150.c:1330: rslt = bmm150_set_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
0C66 75F0D0    2295            mov     _bmm150_set_regs_PARM_2,#_set_control_measurement_xyz_reg_data_1_104
0C69 75F154    2296            mov     (_bmm150_set_regs_PARM_2 + 1),#(_set_control_measurement_xyz_reg_data_1_104 >> 8)
0C6C 75F200    2297            mov     (_bmm150_set_regs_PARM_2 + 2),#0x00
0C6F 75A001    2298            mov     _bmm150_set_regs_PARM_3,#0x01
0C72 E4        2299            clr     a
0C73 F5A1      2300            mov     (_bmm150_set_regs_PARM_3 + 1),a
0C75 F5A2      2301            mov     (_bmm150_set_regs_PARM_3 + 2),a
0C77 F5A3      2302            mov     (_bmm150_set_regs_PARM_3 + 3),a
0C79 85D050    2303            mov     _bmm150_set_regs_PARM_4,_set_control_measurement_xyz_PARM_2
0C7C 85D151    2304            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_control_measurement_xyz_PARM_2 + 1)
0C7F 85D252    2305            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_control_measurement_xyz_PARM_2 + 2)
0C82 75824E    2306            mov     dpl,#0x4E
0C85 120000    2307            lcall   _bmm150_set_regs
0C88 E582      2308            mov     a,dpl
0C8A 905470    2309            mov     dptr,#_set_control_measurement_xyz_rslt_1_104
0C8D F0        2310            movx    @dptr,a
0C8E           2311   L016002?:
0C8E           2312   ;        bmm150.c:1333: return rslt;
0C8E 905470    2313            mov     dptr,#_set_control_measurement_xyz_rslt_1_104
0C91 E0        2314            movx    a,@dptr
0C92 F582      2315            mov     dpl,a
0C94 22        2316            ret
0C95           2317   ;------------------------------------------------------------
0C95           2318   ;Allocation info for local variables in function 'are_settings_changed'
0C95           2319   ;------------------------------------------------------------
0C95           2320   ;settings_changed          Allocated with name '_are_settings_changed_settings_changed_1_107'
0C95           2321   ;desired_settings          Allocated with name '_are_settings_changed_PARM_2'
0C95           2322   ;sub_settings              Allocated to registers r2 r3 
0C95           2323   ;------------------------------------------------------------
0C95           2324   ;        bmm150.c:1340: xdata static uint8_t are_settings_changed(uint16_t sub_settings, uint16_t desired_settings)
0C95           2325   ;        -----------------------------------------
0C95           2326   ;         function are_settings_changed
0C95           2327   ;        -----------------------------------------
0C95           2328   _are_settings_changed:
0C95 AA82      2329            mov     r2,dpl
0C97 AB83      2330            mov     r3,dph
0C99           2331   ;        bmm150.c:1344: if (sub_settings & desired_settings)
0C99 E5A0      2332            mov     a,_are_settings_changed_PARM_2
0C9B 5202      2333            anl     ar2,a
0C9D E5A1      2334            mov     a,(_are_settings_changed_PARM_2 + 1)
0C9F 5203      2335            anl     ar3,a
0CA1 EA        2336            mov     a,r2
0CA2 4B        2337            orl     a,r3
0CA3 6000      2338            jz      L017002?
0CA5           2339   ;        bmm150.c:1347: settings_changed = BMM150_TRUE;
0CA5 905530    2340            mov     dptr,#_are_settings_changed_settings_changed_1_107
0CA8 7401      2341            mov     a,#0x01
0CAA F0        2342            movx    @dptr,a
0CAB 8000      2343            sjmp    L017003?
0CAD           2344   L017002?:
0CAD           2345   ;        bmm150.c:1352: settings_changed = BMM150_FALSE;
0CAD 905530    2346            mov     dptr,#_are_settings_changed_settings_changed_1_107
0CB0 E4        2347            clr     a
0CB1 F0        2348            movx    @dptr,a
0CB2           2349   L017003?:
0CB2           2350   ;        bmm150.c:1355: return settings_changed;
0CB2 905530    2351            mov     dptr,#_are_settings_changed_settings_changed_1_107
0CB5 E0        2352            movx    a,@dptr
0CB6 F582      2353            mov     dpl,a
0CB8 22        2354            ret
0CB9           2355   ;------------------------------------------------------------
0CB9           2356   ;Allocation info for local variables in function 'compensate_x'
0CB9           2357   ;------------------------------------------------------------
0CB9           2358   ;data_rhall                Allocated with name '_compensate_x_PARM_2'
0CB9           2359   ;dev                       Allocated with name '_compensate_x_PARM_3'
0CB9           2360   ;mag_data_x                Allocated with name '_compensate_x_mag_data_x_1_110'
0CB9           2361   ;sloc0                     Allocated with name '_compensate_x_sloc0_1_0'
0CB9           2362   ;sloc1                     Allocated with name '_compensate_x_sloc1_1_0'
0CB9           2363   ;sloc2                     Allocated with name '_compensate_x_sloc2_1_0'
0CB9           2364   ;retval                    Allocated with name '_compensate_x_retval_1_111'
0CB9           2365   ;process_comp_x0           Allocated with name '_compensate_x_process_comp_x0_1_111'
0CB9           2366   ;process_comp_x1           Allocated with name '_compensate_x_process_comp_x1_1_111'
0CB9           2367   ;process_comp_x2           Allocated with name '_compensate_x_process_comp_x2_1_111'
0CB9           2368   ;process_comp_x3           Allocated with name '_compensate_x_process_comp_x3_1_111'
0CB9           2369   ;process_comp_x4           Allocated with name '_compensate_x_process_comp_x4_1_111'
0CB9           2370   ;process_comp_x5           Allocated with name '_compensate_x_process_comp_x5_1_111'
0CB9           2371   ;process_comp_x6           Allocated with name '_compensate_x_process_comp_x6_1_111'
0CB9           2372   ;process_comp_x7           Allocated with name '_compensate_x_process_comp_x7_1_111'
0CB9           2373   ;process_comp_x8           Allocated with name '_compensate_x_process_comp_x8_1_111'
0CB9           2374   ;process_comp_x9           Allocated with name '_compensate_x_process_comp_x9_1_111'
0CB9           2375   ;process_comp_x10          Allocated with name '_compensate_x_process_comp_x10_1_111'
0CB9           2376   ;------------------------------------------------------------
0CB9           2377   ;        bmm150.c:1568: xdata static int16_t compensate_x(int16_t mag_data_x, uint16_t data_rhall, const struct bmm150_dev *dev)
0CB9           2378   ;        -----------------------------------------
0CB9           2379   ;         function compensate_x
0CB9           2380   ;        -----------------------------------------
0CB9           2381   _compensate_x:
0CB9 8582D0    2382            mov     _compensate_x_mag_data_x_1_110,dpl
0CBC 8583D1    2383            mov     (_compensate_x_mag_data_x_1_110 + 1),dph
0CBF           2384   ;        bmm150.c:1584: if (mag_data_x != BMM150_OVERFLOW_ADCVAL_XYAXES_FLIP)
0CBF E4        2385            clr     a
0CC0 B5D018    2386            cjne    a,_compensate_x_mag_data_x_1_110,L018019?
0CC3 74F0      2387            mov     a,#0xF0
0CC5 B5D118    2388            cjne    a,(_compensate_x_mag_data_x_1_110 + 1),L018019?
0CC8 020000    2389            ljmp    L018011?
0CCB           2390   L018019?:
0CCB           2391   ;        bmm150.c:1586: if (data_rhall != 0)
0CCB E520      2392            mov     a,_compensate_x_PARM_2
0CCD 4521      2393            orl     a,(_compensate_x_PARM_2 + 1)
0CCF 6000      2394            jz      L018005?
0CD1           2395   ;        bmm150.c:1589: process_comp_x0 = data_rhall;
0CD1 9055E0    2396            mov     dptr,#_compensate_x_process_comp_x0_1_111
0CD4 E520      2397            mov     a,_compensate_x_PARM_2
0CD6 F0        2398            movx    @dptr,a
0CD7 A3        2399            inc     dptr
0CD8 E521      2400            mov     a,(_compensate_x_PARM_2 + 1)
0CDA F0        2401            movx    @dptr,a
0CDB 8000      2402            sjmp    L018006?
0CDD           2403   L018005?:
0CDD           2404   ;        bmm150.c:1591: else if (dev->trim_data.dig_xyz1 != 0)
0CDD 7412      2405            mov     a,#0x12
0CDF 2570      2406            add     a,_compensate_x_PARM_3
0CE1 FC        2407            mov     r4,a
0CE2 E4        2408            clr     a
0CE3 3571      2409            addc    a,(_compensate_x_PARM_3 + 1)
0CE5 FD        2410            mov     r5,a
0CE6 AE72      2411            mov     r6,(_compensate_x_PARM_3 + 2)
0CE8 8C82      2412            mov     dpl,r4
0CEA 8D83      2413            mov     dph,r5
0CEC 8EF0      2414            mov     b,r6
0CEE 120000    2415            lcall   __gptrget
0CF1 FC        2416            mov     r4,a
0CF2 A3        2417            inc     dptr
0CF3 120000    2418            lcall   __gptrget
0CF6 FD        2419            mov     r5,a
0CF7 4C        2420            orl     a,r4
0CF8 6000      2421            jz      L018002?
0CFA           2422   ;        bmm150.c:1593: process_comp_x0 = dev->trim_data.dig_xyz1;
0CFA 9055E0    2423            mov     dptr,#_compensate_x_process_comp_x0_1_111
0CFD EC        2424            mov     a,r4
0CFE F0        2425            movx    @dptr,a
0CFF A3        2426            inc     dptr
0D00 ED        2427            mov     a,r5
0D01 F0        2428            movx    @dptr,a
0D02 8000      2429            sjmp    L018006?
0D04           2430   L018002?:
0D04           2431   ;        bmm150.c:1597: process_comp_x0 = 0;
0D04 9055E0    2432            mov     dptr,#_compensate_x_process_comp_x0_1_111
0D07 E4        2433            clr     a
0D08 F0        2434            movx    @dptr,a
0D09 A3        2435            inc     dptr
0D0A F0        2436            movx    @dptr,a
0D0B           2437   L018006?:
0D0B           2438   ;        bmm150.c:1600: if (process_comp_x0 != 0)
0D0B 9055E0    2439            mov     dptr,#_compensate_x_process_comp_x0_1_111
0D0E E0        2440            movx    a,@dptr
0D0F F570      2441            mov     _compensate_x_sloc1_1_0,a
0D11 A3        2442            inc     dptr
0D12 E0        2443            movx    a,@dptr
0D13 F571      2444            mov     (_compensate_x_sloc1_1_0 + 1),a
0D15 E570      2445            mov     a,_compensate_x_sloc1_1_0
0D17 4571      2446            orl     a,(_compensate_x_sloc1_1_0 + 1)
0D19 7000      2447            jnz     L018022?
0D1B 020000    2448            ljmp    L018008?
0D1E           2449   L018022?:
0D1E           2450   ;        bmm150.c:1603: process_comp_x1 = ((int32_t)dev->trim_data.dig_xyz1) * 16384;
0D1E AE70      2451            mov     r6,_compensate_x_PARM_3
0D20 AF71      2452            mov     r7,(_compensate_x_PARM_3 + 1)
0D22 A872      2453            mov     r0,(_compensate_x_PARM_3 + 2)
0D24 740C      2454            mov     a,#0x0C
0D26 2E        2455            add     a,r6
0D27 F520      2456            mov     _compensate_x_sloc0_1_0,a
0D29 E4        2457            clr     a
0D2A 3F        2458            addc    a,r7
0D2B F521      2459            mov     (_compensate_x_sloc0_1_0 + 1),a
0D2D 8822      2460            mov     (_compensate_x_sloc0_1_0 + 2),r0
0D2F 7412      2461            mov     a,#0x12
0D31 2E        2462            add     a,r6
0D32 FA        2463            mov     r2,a
0D33 E4        2464            clr     a
0D34 3F        2465            addc    a,r7
0D35 FB        2466            mov     r3,a
0D36 8801      2467            mov     ar1,r0
0D38 8A82      2468            mov     dpl,r2
0D3A 8B83      2469            mov     dph,r3
0D3C 89F0      2470            mov     b,r1
0D3E 120000    2471            lcall   __gptrget
0D41 FA        2472            mov     r2,a
0D42 A3        2473            inc     dptr
0D43 120000    2474            lcall   __gptrget
0D46 FB        2475            mov     r3,a
0D47 E4        2476            clr     a
0D48 F9        2477            mov     r1,a
0D49 EB        2478            mov     a,r3
0D4A C9        2479            xch     a,r1
0D4B 5403      2480            anl     a,#0x03
0D4D A2E0      2481            mov     c,acc.0
0D4F C9        2482            xch     a,r1
0D50 13        2483            rrc     a
0D51 C9        2484            xch     a,r1
0D52 13        2485            rrc     a
0D53 A2E0      2486            mov     c,acc.0
0D55 C9        2487            xch     a,r1
0D56 13        2488            rrc     a
0D57 C9        2489            xch     a,r1
0D58 13        2490            rrc     a
0D59 C9        2491            xch     a,r1
0D5A FC        2492            mov     r4,a
0D5B EA        2493            mov     a,r2
0D5C 03        2494            rr      a
0D5D 03        2495            rr      a
0D5E 54C0      2496            anl     a,#0xc0
0D60 FB        2497            mov     r3,a
0D61 EA        2498            mov     a,r2
0D62 03        2499            rr      a
0D63 03        2500            rr      a
0D64 543F      2501            anl     a,#0x3f
0D66 49        2502            orl     a,r1
0D67 F9        2503            mov     r1,a
0D68 7A00      2504            mov     r2,#0x00
0D6A           2505   ;        bmm150.c:1604: process_comp_x2 = ((uint16_t)(process_comp_x1 / process_comp_x0)) - ((uint16_t)0x4000);
0D6A 857000    2506            mov     __divslong_PARM_2,_compensate_x_sloc1_1_0
0D6D 857101    2507            mov     (__divslong_PARM_2 + 1),(_compensate_x_sloc1_1_0 + 1)
0D70 750200    2508            mov     (__divslong_PARM_2 + 2),#0x00
0D73 750300    2509            mov     (__divslong_PARM_2 + 3),#0x00
0D76 8A82      2510            mov     dpl,r2
0D78 8B83      2511            mov     dph,r3
0D7A 89F0      2512            mov     b,r1
0D7C EC        2513            mov     a,r4
0D7D C006      2514            push    ar6
0D7F C007      2515            push    ar7
0D81 C000      2516            push    ar0
0D83 120000    2517            lcall   __divslong
0D86 AA82      2518            mov     r2,dpl
0D88 AB83      2519            mov     r3,dph
0D8A 8A70      2520            mov     _compensate_x_sloc1_1_0,r2
0D8C EB        2521            mov     a,r3
0D8D 24C0      2522            add     a,#0xc0
0D8F F571      2523            mov     (_compensate_x_sloc1_1_0 + 1),a
0D91           2524   ;        bmm150.c:1606: process_comp_x3 = (((int32_t)retval) * ((int32_t)retval));
0D91 AC70      2525            mov     r4,_compensate_x_sloc1_1_0
0D93 AD71      2526            mov     r5,(_compensate_x_sloc1_1_0 + 1)
0D95 8CC0      2527            mov     _compensate_x_sloc2_1_0,r4
0D97 ED        2528            mov     a,r5
0D98 F5C1      2529            mov     (_compensate_x_sloc2_1_0 + 1),a
0D9A 33        2530            rlc     a
0D9B 95E0      2531            subb    a,acc
0D9D F5C2      2532            mov     (_compensate_x_sloc2_1_0 + 2),a
0D9F F5C3      2533            mov     (_compensate_x_sloc2_1_0 + 3),a
0DA1 AB70      2534            mov     r3,_compensate_x_sloc1_1_0
0DA3 AA71      2535            mov     r2,(_compensate_x_sloc1_1_0 + 1)
0DA5 8B00      2536            mov     __mullong_PARM_2,r3
0DA7 EA        2537            mov     a,r2
0DA8 F501      2538            mov     (__mullong_PARM_2 + 1),a
0DAA 33        2539            rlc     a
0DAB 95E0      2540            subb    a,acc
0DAD F502      2541            mov     (__mullong_PARM_2 + 2),a
0DAF F503      2542            mov     (__mullong_PARM_2 + 3),a
0DB1           2543   ;        bmm150.c:1607: process_comp_x4 = (((int32_t)dev->trim_data.dig_xy2) * (process_comp_x3 / 128));
0DB1 85C082    2544            mov     dpl,_compensate_x_sloc2_1_0
0DB4 85C183    2545            mov     dph,(_compensate_x_sloc2_1_0 + 1)
0DB7 85C2F0    2546            mov     b,(_compensate_x_sloc2_1_0 + 2)
0DBA E5C3      2547            mov     a,(_compensate_x_sloc2_1_0 + 3)
0DBC 120000    2548            lcall   __mullong
0DBF 8582C0    2549            mov     _compensate_x_sloc2_1_0,dpl
0DC2 8583C1    2550            mov     (_compensate_x_sloc2_1_0 + 1),dph
0DC5 85F0C2    2551            mov     (_compensate_x_sloc2_1_0 + 2),b
0DC8 F5C3      2552            mov     (_compensate_x_sloc2_1_0 + 3),a
0DCA D000      2553            pop     ar0
0DCC D007      2554            pop     ar7
0DCE D006      2555            pop     ar6
0DD0 7411      2556            mov     a,#0x11
0DD2 2E        2557            add     a,r6
0DD3 F9        2558            mov     r1,a
0DD4 E4        2559            clr     a
0DD5 3F        2560            addc    a,r7
0DD6 FA        2561            mov     r2,a
0DD7 8803      2562            mov     ar3,r0
0DD9 8982      2563            mov     dpl,r1
0DDB 8A83      2564            mov     dph,r2
0DDD 8BF0      2565            mov     b,r3
0DDF 120000    2566            lcall   __gptrget
0DE2 F9        2567            mov     r1,a
0DE3 33        2568            rlc     a
0DE4 95E0      2569            subb    a,acc
0DE6 FA        2570            mov     r2,a
0DE7 FB        2571            mov     r3,a
0DE8 FC        2572            mov     r4,a
0DE9 750080    2573            mov     __divslong_PARM_2,#0x80
0DEC E4        2574            clr     a
0DED F501      2575            mov     (__divslong_PARM_2 + 1),a
0DEF F502      2576            mov     (__divslong_PARM_2 + 2),a
0DF1 F503      2577            mov     (__divslong_PARM_2 + 3),a
0DF3 85C082    2578            mov     dpl,_compensate_x_sloc2_1_0
0DF6 85C183    2579            mov     dph,(_compensate_x_sloc2_1_0 + 1)
0DF9 85C2F0    2580            mov     b,(_compensate_x_sloc2_1_0 + 2)
0DFC E5C3      2581            mov     a,(_compensate_x_sloc2_1_0 + 3)
0DFE C002      2582            push    ar2
0E00 C003      2583            push    ar3
0E02 C004      2584            push    ar4
0E04 C006      2585            push    ar6
0E06 C007      2586            push    ar7
0E08 C000      2587            push    ar0
0E0A C001      2588            push    ar1
0E0C 120000    2589            lcall   __divslong
0E0F 858200    2590            mov     __mullong_PARM_2,dpl
0E12 858301    2591            mov     (__mullong_PARM_2 + 1),dph
0E15 85F002    2592            mov     (__mullong_PARM_2 + 2),b
0E18 F503      2593            mov     (__mullong_PARM_2 + 3),a
0E1A D001      2594            pop     ar1
0E1C D000      2595            pop     ar0
0E1E D007      2596            pop     ar7
0E20 D006      2597            pop     ar6
0E22 D004      2598            pop     ar4
0E24 D003      2599            pop     ar3
0E26 D002      2600            pop     ar2
0E28           2601   ;        bmm150.c:1608: process_comp_x5 = (int32_t)(((int16_t)dev->trim_data.dig_xy1) * 128);
0E28 8982      2602            mov     dpl,r1
0E2A 8A83      2603            mov     dph,r2
0E2C 8BF0      2604            mov     b,r3
0E2E EC        2605            mov     a,r4
0E2F C006      2606            push    ar6
0E31 C007      2607            push    ar7
0E33 C000      2608            push    ar0
0E35 120000    2609            lcall   __mullong
0E38 8582C0    2610            mov     _compensate_x_sloc2_1_0,dpl
0E3B 8583C1    2611            mov     (_compensate_x_sloc2_1_0 + 1),dph
0E3E 85F0C2    2612            mov     (_compensate_x_sloc2_1_0 + 2),b
0E41 F5C3      2613            mov     (_compensate_x_sloc2_1_0 + 3),a
0E43 D000      2614            pop     ar0
0E45 D007      2615            pop     ar7
0E47 D006      2616            pop     ar6
0E49 7410      2617            mov     a,#0x10
0E4B 2E        2618            add     a,r6
0E4C F9        2619            mov     r1,a
0E4D E4        2620            clr     a
0E4E 3F        2621            addc    a,r7
0E4F FA        2622            mov     r2,a
0E50 8803      2623            mov     ar3,r0
0E52 8982      2624            mov     dpl,r1
0E54 8A83      2625            mov     dph,r2
0E56 8BF0      2626            mov     b,r3
0E58 120000    2627            lcall   __gptrget
0E5B F9        2628            mov     r1,a
0E5C E4        2629            clr     a
0E5D 5401      2630            anl     a,#0x01
0E5F A2E0      2631            mov     c,acc.0
0E61 C9        2632            xch     a,r1
0E62 13        2633            rrc     a
0E63 C9        2634            xch     a,r1
0E64 13        2635            rrc     a
0E65 C9        2636            xch     a,r1
0E66 8900      2637            mov     __mullong_PARM_2,r1
0E68 F501      2638            mov     (__mullong_PARM_2 + 1),a
0E6A 33        2639            rlc     a
0E6B 95E0      2640            subb    a,acc
0E6D F502      2641            mov     (__mullong_PARM_2 + 2),a
0E6F F503      2642            mov     (__mullong_PARM_2 + 3),a
0E71           2643   ;        bmm150.c:1609: process_comp_x6 = ((int32_t)retval) * process_comp_x5;
0E71 AA70      2644            mov     r2,_compensate_x_sloc1_1_0
0E73 E571      2645            mov     a,(_compensate_x_sloc1_1_0 + 1)
0E75 FB        2646            mov     r3,a
0E76 33        2647            rlc     a
0E77 95E0      2648            subb    a,acc
0E79 FC        2649            mov     r4,a
0E7A           2650   ;        bmm150.c:1610: process_comp_x7 = (((process_comp_x4 + process_comp_x6) / 512) + ((int32_t)0x100000));
0E7A 8A82      2651            mov     dpl,r2
0E7C 8B83      2652            mov     dph,r3
0E7E 8CF0      2653            mov     b,r4
0E80 C006      2654            push    ar6
0E82 C007      2655            push    ar7
0E84 C000      2656            push    ar0
0E86 120000    2657            lcall   __mullong
0E89 AA82      2658            mov     r2,dpl
0E8B AB83      2659            mov     r3,dph
0E8D ACF0      2660            mov     r4,b
0E8F FD        2661            mov     r5,a
0E90 EA        2662            mov     a,r2
0E91 25C0      2663            add     a,_compensate_x_sloc2_1_0
0E93 FA        2664            mov     r2,a
0E94 EB        2665            mov     a,r3
0E95 35C1      2666            addc    a,(_compensate_x_sloc2_1_0 + 1)
0E97 FB        2667            mov     r3,a
0E98 EC        2668            mov     a,r4
0E99 35C2      2669            addc    a,(_compensate_x_sloc2_1_0 + 2)
0E9B FC        2670            mov     r4,a
0E9C ED        2671            mov     a,r5
0E9D 35C3      2672            addc    a,(_compensate_x_sloc2_1_0 + 3)
0E9F FD        2673            mov     r5,a
0EA0 750000    2674            mov     __divslong_PARM_2,#0x00
0EA3 750102    2675            mov     (__divslong_PARM_2 + 1),#0x02
0EA6 750200    2676            mov     (__divslong_PARM_2 + 2),#0x00
0EA9 750300    2677            mov     (__divslong_PARM_2 + 3),#0x00
0EAC 8A82      2678            mov     dpl,r2
0EAE 8B83      2679            mov     dph,r3
0EB0 8CF0      2680            mov     b,r4
0EB2 ED        2681            mov     a,r5
0EB3 120000    2682            lcall   __divslong
0EB6 AA82      2683            mov     r2,dpl
0EB8 AB83      2684            mov     r3,dph
0EBA ACF0      2685            mov     r4,b
0EBC FD        2686            mov     r5,a
0EBD D000      2687            pop     ar0
0EBF D007      2688            pop     ar7
0EC1 D006      2689            pop     ar6
0EC3 7410      2690            mov     a,#0x10
0EC5 2C        2691            add     a,r4
0EC6 FC        2692            mov     r4,a
0EC7 E4        2693            clr     a
0EC8 3D        2694            addc    a,r5
0EC9 FD        2695            mov     r5,a
0ECA           2696   ;        bmm150.c:1611: process_comp_x8 = ((int32_t)(((int16_t)dev->trim_data.dig_x2) + ((int16_t)0xA0)));
0ECA 740E      2697            mov     a,#0x0E
0ECC 2E        2698            add     a,r6
0ECD FE        2699            mov     r6,a
0ECE E4        2700            clr     a
0ECF 3F        2701            addc    a,r7
0ED0 FF        2702            mov     r7,a
0ED1 8E82      2703            mov     dpl,r6
0ED3 8F83      2704            mov     dph,r7
0ED5 88F0      2705            mov     b,r0
0ED7 120000    2706            lcall   __gptrget
0EDA FE        2707            mov     r6,a
0EDB 33        2708            rlc     a
0EDC 95E0      2709            subb    a,acc
0EDE FF        2710            mov     r7,a
0EDF 74A0      2711            mov     a,#0xA0
0EE1 2E        2712            add     a,r6
0EE2 FE        2713            mov     r6,a
0EE3 E4        2714            clr     a
0EE4 3F        2715            addc    a,r7
0EE5 8E00      2716            mov     __mullong_PARM_2,r6
0EE7 F501      2717            mov     (__mullong_PARM_2 + 1),a
0EE9 33        2718            rlc     a
0EEA 95E0      2719            subb    a,acc
0EEC F502      2720            mov     (__mullong_PARM_2 + 2),a
0EEE F503      2721            mov     (__mullong_PARM_2 + 3),a
0EF0           2722   ;        bmm150.c:1612: process_comp_x9 = ((process_comp_x7 * process_comp_x8) / 4096);
0EF0 8A82      2723            mov     dpl,r2
0EF2 8B83      2724            mov     dph,r3
0EF4 8CF0      2725            mov     b,r4
0EF6 ED        2726            mov     a,r5
0EF7 120000    2727            lcall   __mullong
0EFA           2728   ;        bmm150.c:1613: process_comp_x10 = ((int32_t)mag_data_x) * process_comp_x9;
0EFA 750000    2729            mov     __divslong_PARM_2,#0x00
0EFD 750110    2730            mov     (__divslong_PARM_2 + 1),#0x10
0F00 750200    2731            mov     (__divslong_PARM_2 + 2),#0x00
0F03 750300    2732            mov     (__divslong_PARM_2 + 3),#0x00
0F06 120000    2733            lcall   __divslong
0F09 858200    2734            mov     __mullong_PARM_2,dpl
0F0C 858301    2735            mov     (__mullong_PARM_2 + 1),dph
0F0F 85F002    2736            mov     (__mullong_PARM_2 + 2),b
0F12 F503      2737            mov     (__mullong_PARM_2 + 3),a
0F14 AAD0      2738            mov     r2,_compensate_x_mag_data_x_1_110
0F16 E5D1      2739            mov     a,(_compensate_x_mag_data_x_1_110 + 1)
0F18 FB        2740            mov     r3,a
0F19 33        2741            rlc     a
0F1A 95E0      2742            subb    a,acc
0F1C FC        2743            mov     r4,a
0F1D           2744   ;        bmm150.c:1614: retval = ((int16_t)(process_comp_x10 / 8192));
0F1D 8A82      2745            mov     dpl,r2
0F1F 8B83      2746            mov     dph,r3
0F21 8CF0      2747            mov     b,r4
0F23 120000    2748            lcall   __mullong
0F26 750000    2749            mov     __divslong_PARM_2,#0x00
0F29 750120    2750            mov     (__divslong_PARM_2 + 1),#0x20
0F2C 750200    2751            mov     (__divslong_PARM_2 + 2),#0x00
0F2F 750300    2752            mov     (__divslong_PARM_2 + 3),#0x00
0F32 120000    2753            lcall   __divslong
0F35 AA82      2754            mov     r2,dpl
0F37 AB83      2755            mov     r3,dph
0F39           2756   ;        bmm150.c:1615: retval = (retval + (((int16_t)dev->trim_data.dig_x1) * 8)) / 16;
0F39 852082    2757            mov     dpl,_compensate_x_sloc0_1_0
0F3C 852183    2758            mov     dph,(_compensate_x_sloc0_1_0 + 1)
0F3F 8522F0    2759            mov     b,(_compensate_x_sloc0_1_0 + 2)
0F42 120000    2760            lcall   __gptrget
0F45 FC        2761            mov     r4,a
0F46 33        2762            rlc     a
0F47 95E0      2763            subb    a,acc
0F49 C4        2764            swap    a
0F4A 03        2765            rr      a
0F4B 54F8      2766            anl     a,#0xf8
0F4D CC        2767            xch     a,r4
0F4E C4        2768            swap    a
0F4F 03        2769            rr      a
0F50 CC        2770            xch     a,r4
0F51 6C        2771            xrl     a,r4
0F52 CC        2772            xch     a,r4
0F53 54F8      2773            anl     a,#0xf8
0F55 CC        2774            xch     a,r4
0F56 6C        2775            xrl     a,r4
0F57 FD        2776            mov     r5,a
0F58 EC        2777            mov     a,r4
0F59 2A        2778            add     a,r2
0F5A F582      2779            mov     dpl,a
0F5C ED        2780            mov     a,r5
0F5D 3B        2781            addc    a,r3
0F5E F583      2782            mov     dph,a
0F60 750010    2783            mov     __divsint_PARM_2,#0x10
0F63 E4        2784            clr     a
0F64 F501      2785            mov     (__divsint_PARM_2 + 1),a
0F66 120000    2786            lcall   __divsint
0F69 E582      2787            mov     a,dpl
0F6B 8583F0    2788            mov     b,dph
0F6E 905580    2789            mov     dptr,#_compensate_x_retval_1_111
0F71 F0        2790            movx    @dptr,a
0F72 A3        2791            inc     dptr
0F73 E5F0      2792            mov     a,b
0F75 F0        2793            movx    @dptr,a
0F76 8000      2794            sjmp    L018012?
0F78           2795   L018008?:
0F78           2796   ;        bmm150.c:1619: retval = BMM150_OVERFLOW_OUTPUT;
0F78 905580    2797            mov     dptr,#_compensate_x_retval_1_111
0F7B E4        2798            clr     a
0F7C F0        2799            movx    @dptr,a
0F7D A3        2800            inc     dptr
0F7E 7480      2801            mov     a,#0x80
0F80 F0        2802            movx    @dptr,a
0F81 8000      2803            sjmp    L018012?
0F83           2804   L018011?:
0F83           2805   ;        bmm150.c:1625: retval = BMM150_OVERFLOW_OUTPUT;
0F83 905580    2806            mov     dptr,#_compensate_x_retval_1_111
0F86 E4        2807            clr     a
0F87 F0        2808            movx    @dptr,a
0F88 A3        2809            inc     dptr
0F89 7480      2810            mov     a,#0x80
0F8B F0        2811            movx    @dptr,a
0F8C           2812   L018012?:
0F8C           2813   ;        bmm150.c:1628: return retval;
0F8C 905580    2814            mov     dptr,#_compensate_x_retval_1_111
0F8F E0        2815            movx    a,@dptr
0F90 FA        2816            mov     r2,a
0F91 A3        2817            inc     dptr
0F92 E0        2818            movx    a,@dptr
0F93 8A82      2819            mov     dpl,r2
0F95 F583      2820            mov     dph,a
0F97 22        2821            ret
0F98           2822   ;------------------------------------------------------------
0F98           2823   ;Allocation info for local variables in function 'compensate_y'
0F98           2824   ;------------------------------------------------------------
0F98           2825   ;data_rhall                Allocated with name '_compensate_y_PARM_2'
0F98           2826   ;dev                       Allocated with name '_compensate_y_PARM_3'
0F98           2827   ;mag_data_y                Allocated with name '_compensate_y_mag_data_y_1_119'
0F98           2828   ;sloc0                     Allocated with name '_compensate_y_sloc0_1_0'
0F98           2829   ;sloc1                     Allocated with name '_compensate_y_sloc1_1_0'
0F98           2830   ;retval                    Allocated with name '_compensate_y_retval_1_120'
0F98           2831   ;process_comp_y0           Allocated with name '_compensate_y_process_comp_y0_1_120'
0F98           2832   ;process_comp_y1           Allocated with name '_compensate_y_process_comp_y1_1_120'
0F98           2833   ;process_comp_y2           Allocated with name '_compensate_y_process_comp_y2_1_120'
0F98           2834   ;process_comp_y3           Allocated with name '_compensate_y_process_comp_y3_1_120'
0F98           2835   ;process_comp_y4           Allocated with name '_compensate_y_process_comp_y4_1_120'
0F98           2836   ;process_comp_y5           Allocated with name '_compensate_y_process_comp_y5_1_120'
0F98           2837   ;process_comp_y6           Allocated with name '_compensate_y_process_comp_y6_1_120'
0F98           2838   ;process_comp_y7           Allocated with name '_compensate_y_process_comp_y7_1_120'
0F98           2839   ;process_comp_y8           Allocated with name '_compensate_y_process_comp_y8_1_120'
0F98           2840   ;process_comp_y9           Allocated with name '_compensate_y_process_comp_y9_1_120'
0F98           2841   ;------------------------------------------------------------
0F98           2842   ;        bmm150.c:1635: xdata static int16_t compensate_y(int16_t mag_data_y, uint16_t data_rhall, const struct bmm150_dev *dev)
0F98           2843   ;        -----------------------------------------
0F98           2844   ;         function compensate_y
0F98           2845   ;        -----------------------------------------
0F98           2846   _compensate_y:
0F98 8582B0    2847            mov     _compensate_y_mag_data_y_1_119,dpl
0F9B 8583B1    2848            mov     (_compensate_y_mag_data_y_1_119 + 1),dph
0F9E           2849   ;        bmm150.c:1650: if (mag_data_y != BMM150_OVERFLOW_ADCVAL_XYAXES_FLIP)
0F9E E4        2850            clr     a
0F9F B5B0C8    2851            cjne    a,_compensate_y_mag_data_y_1_119,L019019?
0FA2 74F0      2852            mov     a,#0xF0
0FA4 B5B1C8    2853            cjne    a,(_compensate_y_mag_data_y_1_119 + 1),L019019?
0FA7 020000    2854            ljmp    L019011?
0FAA           2855   L019019?:
0FAA           2856   ;        bmm150.c:1652: if (data_rhall != 0)
0FAA E510      2857            mov     a,_compensate_y_PARM_2
0FAC 4511      2858            orl     a,(_compensate_y_PARM_2 + 1)
0FAE 6000      2859            jz      L019005?
0FB0           2860   ;        bmm150.c:1655: process_comp_y0 = data_rhall;
0FB0 905690    2861            mov     dptr,#_compensate_y_process_comp_y0_1_120
0FB3 E510      2862            mov     a,_compensate_y_PARM_2
0FB5 F0        2863            movx    @dptr,a
0FB6 A3        2864            inc     dptr
0FB7 E511      2865            mov     a,(_compensate_y_PARM_2 + 1)
0FB9 F0        2866            movx    @dptr,a
0FBA 8000      2867            sjmp    L019006?
0FBC           2868   L019005?:
0FBC           2869   ;        bmm150.c:1657: else if (dev->trim_data.dig_xyz1 != 0)
0FBC 7412      2870            mov     a,#0x12
0FBE 2560      2871            add     a,_compensate_y_PARM_3
0FC0 FC        2872            mov     r4,a
0FC1 E4        2873            clr     a
0FC2 3561      2874            addc    a,(_compensate_y_PARM_3 + 1)
0FC4 FD        2875            mov     r5,a
0FC5 AE62      2876            mov     r6,(_compensate_y_PARM_3 + 2)
0FC7 8C82      2877            mov     dpl,r4
0FC9 8D83      2878            mov     dph,r5
0FCB 8EF0      2879            mov     b,r6
0FCD 120000    2880            lcall   __gptrget
0FD0 FC        2881            mov     r4,a
0FD1 A3        2882            inc     dptr
0FD2 120000    2883            lcall   __gptrget
0FD5 FD        2884            mov     r5,a
0FD6 4C        2885            orl     a,r4
0FD7 6000      2886            jz      L019002?
0FD9           2887   ;        bmm150.c:1659: process_comp_y0 = dev->trim_data.dig_xyz1;
0FD9 905690    2888            mov     dptr,#_compensate_y_process_comp_y0_1_120
0FDC EC        2889            mov     a,r4
0FDD F0        2890            movx    @dptr,a
0FDE A3        2891            inc     dptr
0FDF ED        2892            mov     a,r5
0FE0 F0        2893            movx    @dptr,a
0FE1 8000      2894            sjmp    L019006?
0FE3           2895   L019002?:
0FE3           2896   ;        bmm150.c:1663: process_comp_y0 = 0;
0FE3 905690    2897            mov     dptr,#_compensate_y_process_comp_y0_1_120
0FE6 E4        2898            clr     a
0FE7 F0        2899            movx    @dptr,a
0FE8 A3        2900            inc     dptr
0FE9 F0        2901            movx    @dptr,a
0FEA           2902   L019006?:
0FEA           2903   ;        bmm150.c:1666: if (process_comp_y0 != 0)
0FEA 905690    2904            mov     dptr,#_compensate_y_process_comp_y0_1_120
0FED E0        2905            movx    a,@dptr
0FEE F500      2906            mov     _compensate_y_sloc0_1_0,a
0FF0 A3        2907            inc     dptr
0FF1 E0        2908            movx    a,@dptr
0FF2 F501      2909            mov     (_compensate_y_sloc0_1_0 + 1),a
0FF4 E500      2910            mov     a,_compensate_y_sloc0_1_0
0FF6 4501      2911            orl     a,(_compensate_y_sloc0_1_0 + 1)
0FF8 7000      2912            jnz     L019022?
0FFA 020000    2913            ljmp    L019008?
0FFD           2914   L019022?:
0FFD           2915   ;        bmm150.c:1669: process_comp_y1 = (((int32_t)dev->trim_data.dig_xyz1) * 16384) / process_comp_y0;
0FFD AE60      2916            mov     r6,_compensate_y_PARM_3
0FFF AF61      2917            mov     r7,(_compensate_y_PARM_3 + 1)
1001 A862      2918            mov     r0,(_compensate_y_PARM_3 + 2)
1003 7412      2919            mov     a,#0x12
1005 2E        2920            add     a,r6
1006 F9        2921            mov     r1,a
1007 E4        2922            clr     a
1008 3F        2923            addc    a,r7
1009 FA        2924            mov     r2,a
100A 8803      2925            mov     ar3,r0
100C 8982      2926            mov     dpl,r1
100E 8A83      2927            mov     dph,r2
1010 8BF0      2928            mov     b,r3
1012 120000    2929            lcall   __gptrget
1015 F9        2930            mov     r1,a
1016 A3        2931            inc     dptr
1017 120000    2932            lcall   __gptrget
101A FA        2933            mov     r2,a
101B E4        2934            clr     a
101C FB        2935            mov     r3,a
101D EA        2936            mov     a,r2
101E CB        2937            xch     a,r3
101F 5403      2938            anl     a,#0x03
1021 A2E0      2939            mov     c,acc.0
1023 CB        2940            xch     a,r3
1024 13        2941            rrc     a
1025 CB        2942            xch     a,r3
1026 13        2943            rrc     a
1027 A2E0      2944            mov     c,acc.0
1029 CB        2945            xch     a,r3
102A 13        2946            rrc     a
102B CB        2947            xch     a,r3
102C 13        2948            rrc     a
102D CB        2949            xch     a,r3
102E FC        2950            mov     r4,a
102F E9        2951            mov     a,r1
1030 03        2952            rr      a
1031 03        2953            rr      a
1032 54C0      2954            anl     a,#0xc0
1034 FA        2955            mov     r2,a
1035 E9        2956            mov     a,r1
1036 03        2957            rr      a
1037 03        2958            rr      a
1038 543F      2959            anl     a,#0x3f
103A 4B        2960            orl     a,r3
103B FB        2961            mov     r3,a
103C 7900      2962            mov     r1,#0x00
103E 850000    2963            mov     __divslong_PARM_2,_compensate_y_sloc0_1_0
1041 850101    2964            mov     (__divslong_PARM_2 + 1),(_compensate_y_sloc0_1_0 + 1)
1044 750200    2965            mov     (__divslong_PARM_2 + 2),#0x00
1047 750300    2966            mov     (__divslong_PARM_2 + 3),#0x00
104A           2967   ;        bmm150.c:1670: process_comp_y2 = ((uint16_t)process_comp_y1) - ((uint16_t)0x4000);
104A 8982      2968            mov     dpl,r1
104C 8A83      2969            mov     dph,r2
104E 8BF0      2970            mov     b,r3
1050 EC        2971            mov     a,r4
1051 C006      2972            push    ar6
1053 C007      2973            push    ar7
1055 C000      2974            push    ar0
1057 120000    2975            lcall   __divslong
105A AA82      2976            mov     r2,dpl
105C AB83      2977            mov     r3,dph
105E 8A00      2978            mov     _compensate_y_sloc0_1_0,r2
1060 EB        2979            mov     a,r3
1061 24C0      2980            add     a,#0xc0
1063 F501      2981            mov     (_compensate_y_sloc0_1_0 + 1),a
1065           2982   ;        bmm150.c:1672: process_comp_y3 = ((int32_t) retval) * ((int32_t)retval);
1065 AC00      2983            mov     r4,_compensate_y_sloc0_1_0
1067 AD01      2984            mov     r5,(_compensate_y_sloc0_1_0 + 1)
1069 8C50      2985            mov     _compensate_y_sloc1_1_0,r4
106B ED        2986            mov     a,r5
106C F551      2987            mov     (_compensate_y_sloc1_1_0 + 1),a
106E 33        2988            rlc     a
106F 95E0      2989            subb    a,acc
1071 F552      2990            mov     (_compensate_y_sloc1_1_0 + 2),a
1073 F553      2991            mov     (_compensate_y_sloc1_1_0 + 3),a
1075 AB00      2992            mov     r3,_compensate_y_sloc0_1_0
1077 AA01      2993            mov     r2,(_compensate_y_sloc0_1_0 + 1)
1079 8B00      2994            mov     __mullong_PARM_2,r3
107B EA        2995            mov     a,r2
107C F501      2996            mov     (__mullong_PARM_2 + 1),a
107E 33        2997            rlc     a
107F 95E0      2998            subb    a,acc
1081 F502      2999            mov     (__mullong_PARM_2 + 2),a
1083 F503      3000            mov     (__mullong_PARM_2 + 3),a
1085           3001   ;        bmm150.c:1673: process_comp_y4 = ((int32_t)dev->trim_data.dig_xy2) * (process_comp_y3 / 128);
1085 855082    3002            mov     dpl,_compensate_y_sloc1_1_0
1088 855183    3003            mov     dph,(_compensate_y_sloc1_1_0 + 1)
108B 8552F0    3004            mov     b,(_compensate_y_sloc1_1_0 + 2)
108E E553      3005            mov     a,(_compensate_y_sloc1_1_0 + 3)
1090 120000    3006            lcall   __mullong
1093 858250    3007            mov     _compensate_y_sloc1_1_0,dpl
1096 858351    3008            mov     (_compensate_y_sloc1_1_0 + 1),dph
1099 85F052    3009            mov     (_compensate_y_sloc1_1_0 + 2),b
109C F553      3010            mov     (_compensate_y_sloc1_1_0 + 3),a
109E D000      3011            pop     ar0
10A0 D007      3012            pop     ar7
10A2 D006      3013            pop     ar6
10A4 7411      3014            mov     a,#0x11
10A6 2E        3015            add     a,r6
10A7 F9        3016            mov     r1,a
10A8 E4        3017            clr     a
10A9 3F        3018            addc    a,r7
10AA FA        3019            mov     r2,a
10AB 8803      3020            mov     ar3,r0
10AD 8982      3021            mov     dpl,r1
10AF 8A83      3022            mov     dph,r2
10B1 8BF0      3023            mov     b,r3
10B3 120000    3024            lcall   __gptrget
10B6 F9        3025            mov     r1,a
10B7 33        3026            rlc     a
10B8 95E0      3027            subb    a,acc
10BA FA        3028            mov     r2,a
10BB FB        3029            mov     r3,a
10BC FC        3030            mov     r4,a
10BD 750080    3031            mov     __divslong_PARM_2,#0x80
10C0 E4        3032            clr     a
10C1 F501      3033            mov     (__divslong_PARM_2 + 1),a
10C3 F502      3034            mov     (__divslong_PARM_2 + 2),a
10C5 F503      3035            mov     (__divslong_PARM_2 + 3),a
10C7 855082    3036            mov     dpl,_compensate_y_sloc1_1_0
10CA 855183    3037            mov     dph,(_compensate_y_sloc1_1_0 + 1)
10CD 8552F0    3038            mov     b,(_compensate_y_sloc1_1_0 + 2)
10D0 E553      3039            mov     a,(_compensate_y_sloc1_1_0 + 3)
10D2 C002      3040            push    ar2
10D4 C003      3041            push    ar3
10D6 C004      3042            push    ar4
10D8 C006      3043            push    ar6
10DA C007      3044            push    ar7
10DC C000      3045            push    ar0
10DE C001      3046            push    ar1
10E0 120000    3047            lcall   __divslong
10E3 858200    3048            mov     __mullong_PARM_2,dpl
10E6 858301    3049            mov     (__mullong_PARM_2 + 1),dph
10E9 85F002    3050            mov     (__mullong_PARM_2 + 2),b
10EC F503      3051            mov     (__mullong_PARM_2 + 3),a
10EE D001      3052            pop     ar1
10F0 D000      3053            pop     ar0
10F2 D007      3054            pop     ar7
10F4 D006      3055            pop     ar6
10F6 D004      3056            pop     ar4
10F8 D003      3057            pop     ar3
10FA D002      3058            pop     ar2
10FC           3059   ;        bmm150.c:1674: process_comp_y5 = ((int32_t)(((int16_t)dev->trim_data.dig_xy1) * 128));
10FC 8982      3060            mov     dpl,r1
10FE 8A83      3061            mov     dph,r2
1100 8BF0      3062            mov     b,r3
1102 EC        3063            mov     a,r4
1103 C006      3064            push    ar6
1105 C007      3065            push    ar7
1107 C000      3066            push    ar0
1109 120000    3067            lcall   __mullong
110C 858250    3068            mov     _compensate_y_sloc1_1_0,dpl
110F 858351    3069            mov     (_compensate_y_sloc1_1_0 + 1),dph
1112 85F052    3070            mov     (_compensate_y_sloc1_1_0 + 2),b
1115 F553      3071            mov     (_compensate_y_sloc1_1_0 + 3),a
1117 D000      3072            pop     ar0
1119 D007      3073            pop     ar7
111B D006      3074            pop     ar6
111D 7410      3075            mov     a,#0x10
111F 2E        3076            add     a,r6
1120 F9        3077            mov     r1,a
1121 E4        3078            clr     a
1122 3F        3079            addc    a,r7
1123 FA        3080            mov     r2,a
1124 8803      3081            mov     ar3,r0
1126 8982      3082            mov     dpl,r1
1128 8A83      3083            mov     dph,r2
112A 8BF0      3084            mov     b,r3
112C 120000    3085            lcall   __gptrget
112F F9        3086            mov     r1,a
1130 E4        3087            clr     a
1131 5401      3088            anl     a,#0x01
1133 A2E0      3089            mov     c,acc.0
1135 C9        3090            xch     a,r1
1136 13        3091            rrc     a
1137 C9        3092            xch     a,r1
1138 13        3093            rrc     a
1139 C9        3094            xch     a,r1
113A 8900      3095            mov     __mullong_PARM_2,r1
113C F501      3096            mov     (__mullong_PARM_2 + 1),a
113E 33        3097            rlc     a
113F 95E0      3098            subb    a,acc
1141 F502      3099            mov     (__mullong_PARM_2 + 2),a
1143 F503      3100            mov     (__mullong_PARM_2 + 3),a
1145           3101   ;        bmm150.c:1675: process_comp_y6 = ((process_comp_y4 + (((int32_t)retval) * process_comp_y5)) / 512);
1145 AA00      3102            mov     r2,_compensate_y_sloc0_1_0
1147 E501      3103            mov     a,(_compensate_y_sloc0_1_0 + 1)
1149 FB        3104            mov     r3,a
114A 33        3105            rlc     a
114B 95E0      3106            subb    a,acc
114D FC        3107            mov     r4,a
114E 8A82      3108            mov     dpl,r2
1150 8B83      3109            mov     dph,r3
1152 8CF0      3110            mov     b,r4
1154 C006      3111            push    ar6
1156 C007      3112            push    ar7
1158 C000      3113            push    ar0
115A 120000    3114            lcall   __mullong
115D AA82      3115            mov     r2,dpl
115F AB83      3116            mov     r3,dph
1161 ACF0      3117            mov     r4,b
1163 FD        3118            mov     r5,a
1164 EA        3119            mov     a,r2
1165 2550      3120            add     a,_compensate_y_sloc1_1_0
1167 FA        3121            mov     r2,a
1168 EB        3122            mov     a,r3
1169 3551      3123            addc    a,(_compensate_y_sloc1_1_0 + 1)
116B FB        3124            mov     r3,a
116C EC        3125            mov     a,r4
116D 3552      3126            addc    a,(_compensate_y_sloc1_1_0 + 2)
116F FC        3127            mov     r4,a
1170 ED        3128            mov     a,r5
1171 3553      3129            addc    a,(_compensate_y_sloc1_1_0 + 3)
1173 FD        3130            mov     r5,a
1174 750000    3131            mov     __divslong_PARM_2,#0x00
1177 750102    3132            mov     (__divslong_PARM_2 + 1),#0x02
117A 750200    3133            mov     (__divslong_PARM_2 + 2),#0x00
117D 750300    3134            mov     (__divslong_PARM_2 + 3),#0x00
1180           3135   ;        bmm150.c:1676: process_comp_y7 = ((int32_t)(((int16_t)dev->trim_data.dig_y2) + ((int16_t)0xA0)));
1180 8A82      3136            mov     dpl,r2
1182 8B83      3137            mov     dph,r3
1184 8CF0      3138            mov     b,r4
1186 ED        3139            mov     a,r5
1187 120000    3140            lcall   __divslong
118A 858250    3141            mov     _compensate_y_sloc1_1_0,dpl
118D 858351    3142            mov     (_compensate_y_sloc1_1_0 + 1),dph
1190 85F052    3143            mov     (_compensate_y_sloc1_1_0 + 2),b
1193 F553      3144            mov     (_compensate_y_sloc1_1_0 + 3),a
1195 D000      3145            pop     ar0
1197 D007      3146            pop     ar7
1199 D006      3147            pop     ar6
119B 740F      3148            mov     a,#0x0F
119D 2E        3149            add     a,r6
119E F9        3150            mov     r1,a
119F E4        3151            clr     a
11A0 3F        3152            addc    a,r7
11A1 FA        3153            mov     r2,a
11A2 8803      3154            mov     ar3,r0
11A4 8982      3155            mov     dpl,r1
11A6 8A83      3156            mov     dph,r2
11A8 8BF0      3157            mov     b,r3
11AA 120000    3158            lcall   __gptrget
11AD F9        3159            mov     r1,a
11AE 33        3160            rlc     a
11AF 95E0      3161            subb    a,acc
11B1 FA        3162            mov     r2,a
11B2 74A0      3163            mov     a,#0xA0
11B4 29        3164            add     a,r1
11B5 F9        3165            mov     r1,a
11B6 E4        3166            clr     a
11B7 3A        3167            addc    a,r2
11B8 8900      3168            mov     __mullong_PARM_2,r1
11BA F501      3169            mov     (__mullong_PARM_2 + 1),a
11BC 33        3170            rlc     a
11BD 95E0      3171            subb    a,acc
11BF F502      3172            mov     (__mullong_PARM_2 + 2),a
11C1 F503      3173            mov     (__mullong_PARM_2 + 3),a
11C3           3174   ;        bmm150.c:1677: process_comp_y8 = (((process_comp_y6 + ((int32_t)0x100000)) * process_comp_y7) / 4096);
11C3 AA50      3175            mov     r2,_compensate_y_sloc1_1_0
11C5 AB51      3176            mov     r3,(_compensate_y_sloc1_1_0 + 1)
11C7 7410      3177            mov     a,#0x10
11C9 2552      3178            add     a,(_compensate_y_sloc1_1_0 + 2)
11CB FC        3179            mov     r4,a
11CC E4        3180            clr     a
11CD 3553      3181            addc    a,(_compensate_y_sloc1_1_0 + 3)
11CF 8A82      3182            mov     dpl,r2
11D1 8B83      3183            mov     dph,r3
11D3 8CF0      3184            mov     b,r4
11D5 C006      3185            push    ar6
11D7 C007      3186            push    ar7
11D9 C000      3187            push    ar0
11DB 120000    3188            lcall   __mullong
11DE           3189   ;        bmm150.c:1678: process_comp_y9 = (((int32_t)mag_data_y) * process_comp_y8);
11DE 750000    3190            mov     __divslong_PARM_2,#0x00
11E1 750110    3191            mov     (__divslong_PARM_2 + 1),#0x10
11E4 750200    3192            mov     (__divslong_PARM_2 + 2),#0x00
11E7 750300    3193            mov     (__divslong_PARM_2 + 3),#0x00
11EA 120000    3194            lcall   __divslong
11ED 858200    3195            mov     __mullong_PARM_2,dpl
11F0 858301    3196            mov     (__mullong_PARM_2 + 1),dph
11F3 85F002    3197            mov     (__mullong_PARM_2 + 2),b
11F6 F503      3198            mov     (__mullong_PARM_2 + 3),a
11F8 AAB0      3199            mov     r2,_compensate_y_mag_data_y_1_119
11FA E5B1      3200            mov     a,(_compensate_y_mag_data_y_1_119 + 1)
11FC FB        3201            mov     r3,a
11FD 33        3202            rlc     a
11FE 95E0      3203            subb    a,acc
1200 FC        3204            mov     r4,a
1201           3205   ;        bmm150.c:1679: retval = (int16_t)(process_comp_y9 / 8192);
1201 8A82      3206            mov     dpl,r2
1203 8B83      3207            mov     dph,r3
1205 8CF0      3208            mov     b,r4
1207 120000    3209            lcall   __mullong
120A 750000    3210            mov     __divslong_PARM_2,#0x00
120D 750120    3211            mov     (__divslong_PARM_2 + 1),#0x20
1210 750200    3212            mov     (__divslong_PARM_2 + 2),#0x00
1213 750300    3213            mov     (__divslong_PARM_2 + 3),#0x00
1216 120000    3214            lcall   __divslong
1219 AA82      3215            mov     r2,dpl
121B AB83      3216            mov     r3,dph
121D D000      3217            pop     ar0
121F D007      3218            pop     ar7
1221 D006      3219            pop     ar6
1223           3220   ;        bmm150.c:1680: retval = (retval + (((int16_t)dev->trim_data.dig_y1) * 8)) / 16;
1223 740D      3221            mov     a,#0x0D
1225 2E        3222            add     a,r6
1226 FE        3223            mov     r6,a
1227 E4        3224            clr     a
1228 3F        3225            addc    a,r7
1229 FF        3226            mov     r7,a
122A 8E82      3227            mov     dpl,r6
122C 8F83      3228            mov     dph,r7
122E 88F0      3229            mov     b,r0
1230 120000    3230            lcall   __gptrget
1233 FE        3231            mov     r6,a
1234 33        3232            rlc     a
1235 95E0      3233            subb    a,acc
1237 C4        3234            swap    a
1238 03        3235            rr      a
1239 54F8      3236            anl     a,#0xf8
123B CE        3237            xch     a,r6
123C C4        3238            swap    a
123D 03        3239            rr      a
123E CE        3240            xch     a,r6
123F 6E        3241            xrl     a,r6
1240 CE        3242            xch     a,r6
1241 54F8      3243            anl     a,#0xf8
1243 CE        3244            xch     a,r6
1244 6E        3245            xrl     a,r6
1245 FC        3246            mov     r4,a
1246 EE        3247            mov     a,r6
1247 2A        3248            add     a,r2
1248 F582      3249            mov     dpl,a
124A EC        3250            mov     a,r4
124B 3B        3251            addc    a,r3
124C F583      3252            mov     dph,a
124E 750010    3253            mov     __divsint_PARM_2,#0x10
1251 E4        3254            clr     a
1252 F501      3255            mov     (__divsint_PARM_2 + 1),a
1254 120000    3256            lcall   __divsint
1257 E582      3257            mov     a,dpl
1259 8583F0    3258            mov     b,dph
125C 905630    3259            mov     dptr,#_compensate_y_retval_1_120
125F F0        3260            movx    @dptr,a
1260 A3        3261            inc     dptr
1261 E5F0      3262            mov     a,b
1263 F0        3263            movx    @dptr,a
1264 8000      3264            sjmp    L019012?
1266           3265   L019008?:
1266           3266   ;        bmm150.c:1684: retval = BMM150_OVERFLOW_OUTPUT;
1266 905630    3267            mov     dptr,#_compensate_y_retval_1_120
1269 E4        3268            clr     a
126A F0        3269            movx    @dptr,a
126B A3        3270            inc     dptr
126C 7480      3271            mov     a,#0x80
126E F0        3272            movx    @dptr,a
126F 8000      3273            sjmp    L019012?
1271           3274   L019011?:
1271           3275   ;        bmm150.c:1690: retval = BMM150_OVERFLOW_OUTPUT;
1271 905630    3276            mov     dptr,#_compensate_y_retval_1_120
1274 E4        3277            clr     a
1275 F0        3278            movx    @dptr,a
1276 A3        3279            inc     dptr
1277 7480      3280            mov     a,#0x80
1279 F0        3281            movx    @dptr,a
127A           3282   L019012?:
127A           3283   ;        bmm150.c:1693: return retval;
127A 905630    3284            mov     dptr,#_compensate_y_retval_1_120
127D E0        3285            movx    a,@dptr
127E FA        3286            mov     r2,a
127F A3        3287            inc     dptr
1280 E0        3288            movx    a,@dptr
1281 8A82      3289            mov     dpl,r2
1283 F583      3290            mov     dph,a
1285 22        3291            ret
1286           3292            rseg R_CSEG
1286           3293   
0000           3294            rseg R_XINIT
0000           3295   
0000           3296            rseg R_CONST
0000           3297   __str_0:
0000 706F7765  3298            db 'powering sensor'
     72696E67
     2073656E
     736F72
000F 0A        3299            db 0x0A
0010 00        3300            db 0x00
0011           3301   __str_1:
0011 73746172  3302            db 'startup time delay 3ms'
     74757020
     74696D65
     2064656C
     61792033
     6D73
0027 0A        3303            db 0x0A
0028 00        3304            db 0x00
0029           3305   __str_2:
0029 72656164  3306            db 'reading chip ID'
     696E6720
     63686970
     204944
0038 0A        3307            db 0x0A
0039 00        3308            db 0x00
003A           3309   __str_3:
003A 43686970  3310            db 'Chip ID is: %d'
     20494420
     69733A20
     2564
0048 0A        3311            db 0x0A
0049 00        3312            db 0x00
004A           3313   __str_4:
004A 55706461  3314            db 'Updating trim values'
     74696E67
     20747269
     6D207661
     6C756573
005E 0A        3315            db 0x0A
005F 00        3316            db 0x00
0060           3317   __str_5:
0060 5472696D  3318            db 'Trim values done'
     2076616C
     75657320
     646F6E65
0070 0A        3319            db 0x0A
0071 00        3320            db 0x00
0072           3321   __str_6:
0072 494E4954  3322            db 'INIT NOT OK'
     204E4F54
     204F4B
007D 0A        3323            db 0x0A
007E 00        3324            db 0x00
007F           3325   __str_7:
007F 506F7765  3326            db 'Power control register is read'
     7220636F
     6E74726F
     6C207265
     67697374
     65722069
     73207265
     6164
009D 0A        3327            db 0x0A
009E 00        3328            db 0x00
009F           3329   __str_8:
009F 7365745F  3330            db 'set_power_control_bit DONE'
     706F7765
     725F636F
     6E74726F
     6C5F6269
     7420444F
     4E45
00B9 0A        3331            db 0x0A
00BA 00        3332            db 0x00
00BB           3333   
0000           3334            CSEG
0000           3335   
0000           3336   end
