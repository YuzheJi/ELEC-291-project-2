0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Apr 02 19:34:47 2025
0000              5   ;--------------------------------------------------------
                  5   $name freq
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _get_freq
0000             27   ;--------------------------------------------------------
0000             28   ; Special Function Registers
0000             29   ;--------------------------------------------------------
0000             30   _ACC            DATA 0xe0
0000             31   _ADC0ASAH       DATA 0xb6
0000             32   _ADC0ASAL       DATA 0xb5
0000             33   _ADC0ASCF       DATA 0xa1
0000             34   _ADC0ASCT       DATA 0xc7
0000             35   _ADC0CF0        DATA 0xbc
0000             36   _ADC0CF1        DATA 0xb9
0000             37   _ADC0CF2        DATA 0xdf
0000             38   _ADC0CN0        DATA 0xe8
0000             39   _ADC0CN1        DATA 0xb2
0000             40   _ADC0CN2        DATA 0xb3
0000             41   _ADC0GTH        DATA 0xc4
0000             42   _ADC0GTL        DATA 0xc3
0000             43   _ADC0H          DATA 0xbe
0000             44   _ADC0L          DATA 0xbd
0000             45   _ADC0LTH        DATA 0xc6
0000             46   _ADC0LTL        DATA 0xc5
0000             47   _ADC0MX         DATA 0xbb
0000             48   _B              DATA 0xf0
0000             49   _CKCON0         DATA 0x8e
0000             50   _CKCON1         DATA 0xa6
0000             51   _CLEN0          DATA 0xc6
0000             52   _CLIE0          DATA 0xc7
0000             53   _CLIF0          DATA 0xe8
0000             54   _CLKSEL         DATA 0xa9
0000             55   _CLOUT0         DATA 0xd1
0000             56   _CLU0CF         DATA 0xb1
0000             57   _CLU0FN         DATA 0xaf
0000             58   _CLU0MX         DATA 0x84
0000             59   _CLU1CF         DATA 0xb3
0000             60   _CLU1FN         DATA 0xb2
0000             61   _CLU1MX         DATA 0x85
0000             62   _CLU2CF         DATA 0xb6
0000             63   _CLU2FN         DATA 0xb5
0000             64   _CLU2MX         DATA 0x91
0000             65   _CLU3CF         DATA 0xbf
0000             66   _CLU3FN         DATA 0xbe
0000             67   _CLU3MX         DATA 0xae
0000             68   _CMP0CN0        DATA 0x9b
0000             69   _CMP0CN1        DATA 0x99
0000             70   _CMP0MD         DATA 0x9d
0000             71   _CMP0MX         DATA 0x9f
0000             72   _CMP1CN0        DATA 0xbf
0000             73   _CMP1CN1        DATA 0xac
0000             74   _CMP1MD         DATA 0xab
0000             75   _CMP1MX         DATA 0xaa
0000             76   _CRC0CN0        DATA 0xce
0000             77   _CRC0CN1        DATA 0x86
0000             78   _CRC0CNT        DATA 0xd3
0000             79   _CRC0DAT        DATA 0xcb
0000             80   _CRC0FLIP       DATA 0xcf
0000             81   _CRC0IN         DATA 0xca
0000             82   _CRC0ST         DATA 0xd2
0000             83   _DAC0CF0        DATA 0x91
0000             84   _DAC0CF1        DATA 0x92
0000             85   _DAC0H          DATA 0x85
0000             86   _DAC0L          DATA 0x84
0000             87   _DAC1CF0        DATA 0x93
0000             88   _DAC1CF1        DATA 0x94
0000             89   _DAC1H          DATA 0x8a
0000             90   _DAC1L          DATA 0x89
0000             91   _DAC2CF0        DATA 0x95
0000             92   _DAC2CF1        DATA 0x96
0000             93   _DAC2H          DATA 0x8c
0000             94   _DAC2L          DATA 0x8b
0000             95   _DAC3CF0        DATA 0x9a
0000             96   _DAC3CF1        DATA 0x9c
0000             97   _DAC3H          DATA 0x8e
0000             98   _DAC3L          DATA 0x8d
0000             99   _DACGCF0        DATA 0x88
0000            100   _DACGCF1        DATA 0x98
0000            101   _DACGCF2        DATA 0xa2
0000            102   _DERIVID        DATA 0xad
0000            103   _DEVICEID       DATA 0xb5
0000            104   _DPH            DATA 0x83
0000            105   _DPL            DATA 0x82
0000            106   _EIE1           DATA 0xe6
0000            107   _EIE2           DATA 0xf3
0000            108   _EIP1           DATA 0xbb
0000            109   _EIP1H          DATA 0xee
0000            110   _EIP2           DATA 0xed
0000            111   _EIP2H          DATA 0xf6
0000            112   _EMI0CN         DATA 0xe7
0000            113   _FLKEY          DATA 0xb7
0000            114   _HFO0CAL        DATA 0xc7
0000            115   _HFO1CAL        DATA 0xd6
0000            116   _HFOCN          DATA 0xef
0000            117   _I2C0ADM        DATA 0xff
0000            118   _I2C0CN0        DATA 0xba
0000            119   _I2C0DIN        DATA 0xbc
0000            120   _I2C0DOUT       DATA 0xbb
0000            121   _I2C0FCN0       DATA 0xad
0000            122   _I2C0FCN1       DATA 0xab
0000            123   _I2C0FCT        DATA 0xf5
0000            124   _I2C0SLAD       DATA 0xbd
0000            125   _I2C0STAT       DATA 0xb9
0000            126   _IE             DATA 0xa8
0000            127   _IP             DATA 0xb8
0000            128   _IPH            DATA 0xf2
0000            129   _IT01CF         DATA 0xe4
0000            130   _LFO0CN         DATA 0xb1
0000            131   _P0             DATA 0x80
0000            132   _P0MASK         DATA 0xfe
0000            133   _P0MAT          DATA 0xfd
0000            134   _P0MDIN         DATA 0xf1
0000            135   _P0MDOUT        DATA 0xa4
0000            136   _P0SKIP         DATA 0xd4
0000            137   _P1             DATA 0x90
0000            138   _P1MASK         DATA 0xee
0000            139   _P1MAT          DATA 0xed
0000            140   _P1MDIN         DATA 0xf2
0000            141   _P1MDOUT        DATA 0xa5
0000            142   _P1SKIP         DATA 0xd5
0000            143   _P2             DATA 0xa0
0000            144   _P2MASK         DATA 0xfc
0000            145   _P2MAT          DATA 0xfb
0000            146   _P2MDIN         DATA 0xf3
0000            147   _P2MDOUT        DATA 0xa6
0000            148   _P2SKIP         DATA 0xcc
0000            149   _P3             DATA 0xb0
0000            150   _P3MDIN         DATA 0xf4
0000            151   _P3MDOUT        DATA 0x9c
0000            152   _PCA0CENT       DATA 0x9e
0000            153   _PCA0CLR        DATA 0x9c
0000            154   _PCA0CN0        DATA 0xd8
0000            155   _PCA0CPH0       DATA 0xfc
0000            156   _PCA0CPH1       DATA 0xea
0000            157   _PCA0CPH2       DATA 0xec
0000            158   _PCA0CPH3       DATA 0xf5
0000            159   _PCA0CPH4       DATA 0x85
0000            160   _PCA0CPH5       DATA 0xde
0000            161   _PCA0CPL0       DATA 0xfb
0000            162   _PCA0CPL1       DATA 0xe9
0000            163   _PCA0CPL2       DATA 0xeb
0000            164   _PCA0CPL3       DATA 0xf4
0000            165   _PCA0CPL4       DATA 0x84
0000            166   _PCA0CPL5       DATA 0xdd
0000            167   _PCA0CPM0       DATA 0xda
0000            168   _PCA0CPM1       DATA 0xdb
0000            169   _PCA0CPM2       DATA 0xdc
0000            170   _PCA0CPM3       DATA 0xae
0000            171   _PCA0CPM4       DATA 0xaf
0000            172   _PCA0CPM5       DATA 0xcc
0000            173   _PCA0H          DATA 0xfa
0000            174   _PCA0L          DATA 0xf9
0000            175   _PCA0MD         DATA 0xd9
0000            176   _PCA0POL        DATA 0x96
0000            177   _PCA0PWM        DATA 0xf7
0000            178   _PCON0          DATA 0x87
0000            179   _PCON1          DATA 0xcd
0000            180   _PFE0CN         DATA 0xc1
0000            181   _PRTDRV         DATA 0xf6
0000            182   _PSCTL          DATA 0x8f
0000            183   _PSTAT0         DATA 0xaa
0000            184   _PSW            DATA 0xd0
0000            185   _REF0CN         DATA 0xd1
0000            186   _REG0CN         DATA 0xc9
0000            187   _REVID          DATA 0xb6
0000            188   _RSTSRC         DATA 0xef
0000            189   _SBCON1         DATA 0x94
0000            190   _SBRLH1         DATA 0x96
0000            191   _SBRLL1         DATA 0x95
0000            192   _SBUF           DATA 0x99
0000            193   _SBUF0          DATA 0x99
0000            194   _SBUF1          DATA 0x92
0000            195   _SCON           DATA 0x98
0000            196   _SCON0          DATA 0x98
0000            197   _SCON1          DATA 0xc8
0000            198   _SFRPAGE        DATA 0xa7
0000            199   _SFRPGCN        DATA 0xbc
0000            200   _SFRSTACK       DATA 0xd7
0000            201   _SMB0ADM        DATA 0xd6
0000            202   _SMB0ADR        DATA 0xd7
0000            203   _SMB0CF         DATA 0xc1
0000            204   _SMB0CN0        DATA 0xc0
0000            205   _SMB0DAT        DATA 0xc2
0000            206   _SMB0FCN0       DATA 0xc3
0000            207   _SMB0FCN1       DATA 0xc4
0000            208   _SMB0FCT        DATA 0xef
0000            209   _SMB0RXLN       DATA 0xc5
0000            210   _SMB0TC         DATA 0xac
0000            211   _SMOD1          DATA 0x93
0000            212   _SP             DATA 0x81
0000            213   _SPI0CFG        DATA 0xa1
0000            214   _SPI0CKR        DATA 0xa2
0000            215   _SPI0CN0        DATA 0xf8
0000            216   _SPI0DAT        DATA 0xa3
0000            217   _SPI0FCN0       DATA 0x9a
0000            218   _SPI0FCN1       DATA 0x9b
0000            219   _SPI0FCT        DATA 0xf7
0000            220   _SPI0PCF        DATA 0xdf
0000            221   _TCON           DATA 0x88
0000            222   _TH0            DATA 0x8c
0000            223   _TH1            DATA 0x8d
0000            224   _TL0            DATA 0x8a
0000            225   _TL1            DATA 0x8b
0000            226   _TMOD           DATA 0x89
0000            227   _TMR2CN0        DATA 0xc8
0000            228   _TMR2CN1        DATA 0xfd
0000            229   _TMR2H          DATA 0xcf
0000            230   _TMR2L          DATA 0xce
0000            231   _TMR2RLH        DATA 0xcb
0000            232   _TMR2RLL        DATA 0xca
0000            233   _TMR3CN0        DATA 0x91
0000            234   _TMR3CN1        DATA 0xfe
0000            235   _TMR3H          DATA 0x95
0000            236   _TMR3L          DATA 0x94
0000            237   _TMR3RLH        DATA 0x93
0000            238   _TMR3RLL        DATA 0x92
0000            239   _TMR4CN0        DATA 0x98
0000            240   _TMR4CN1        DATA 0xff
0000            241   _TMR4H          DATA 0xa5
0000            242   _TMR4L          DATA 0xa4
0000            243   _TMR4RLH        DATA 0xa3
0000            244   _TMR4RLL        DATA 0xa2
0000            245   _TMR5CN0        DATA 0xc0
0000            246   _TMR5CN1        DATA 0xf1
0000            247   _TMR5H          DATA 0xd5
0000            248   _TMR5L          DATA 0xd4
0000            249   _TMR5RLH        DATA 0xd3
0000            250   _TMR5RLL        DATA 0xd2
0000            251   _UART0PCF       DATA 0xd9
0000            252   _UART1FCN0      DATA 0x9d
0000            253   _UART1FCN1      DATA 0xd8
0000            254   _UART1FCT       DATA 0xfa
0000            255   _UART1LIN       DATA 0x9e
0000            256   _UART1PCF       DATA 0xda
0000            257   _VDM0CN         DATA 0xff
0000            258   _WDTCN          DATA 0x97
0000            259   _XBR0           DATA 0xe1
0000            260   _XBR1           DATA 0xe2
0000            261   _XBR2           DATA 0xe3
0000            262   _XOSC0CN        DATA 0x86
0000            263   _DPTR           DATA 0x8382
0000            264   _TMR2RL         DATA 0xcbca
0000            265   _TMR3RL         DATA 0x9392
0000            266   _TMR4RL         DATA 0xa3a2
0000            267   _TMR5RL         DATA 0xd3d2
0000            268   _TMR0           DATA 0x8c8a
0000            269   _TMR1           DATA 0x8d8b
0000            270   _TMR2           DATA 0xcfce
0000            271   _TMR3           DATA 0x9594
0000            272   _TMR4           DATA 0xa5a4
0000            273   _TMR5           DATA 0xd5d4
0000            274   _SBRL1          DATA 0x9695
0000            275   _PCA0           DATA 0xfaf9
0000            276   _PCA0CP0        DATA 0xfcfb
0000            277   _PCA0CP1        DATA 0xeae9
0000            278   _PCA0CP2        DATA 0xeceb
0000            279   _PCA0CP3        DATA 0xf5f4
0000            280   _PCA0CP4        DATA 0x8584
0000            281   _PCA0CP5        DATA 0xdedd
0000            282   _ADC0ASA        DATA 0xb6b5
0000            283   _ADC0GT         DATA 0xc4c3
0000            284   _ADC0           DATA 0xbebd
0000            285   _ADC0LT         DATA 0xc6c5
0000            286   _DAC0           DATA 0x8584
0000            287   _DAC1           DATA 0x8a89
0000            288   _DAC2           DATA 0x8c8b
0000            289   _DAC3           DATA 0x8e8d
0000            290   ;--------------------------------------------------------
0000            291   ; special function bits
0000            292   ;--------------------------------------------------------
0000            293   _ACC_0          BIT 0xe0
0000            294   _ACC_1          BIT 0xe1
0000            295   _ACC_2          BIT 0xe2
0000            296   _ACC_3          BIT 0xe3
0000            297   _ACC_4          BIT 0xe4
0000            298   _ACC_5          BIT 0xe5
0000            299   _ACC_6          BIT 0xe6
0000            300   _ACC_7          BIT 0xe7
0000            301   _TEMPE          BIT 0xe8
0000            302   _ADGN0          BIT 0xe9
0000            303   _ADGN1          BIT 0xea
0000            304   _ADWINT         BIT 0xeb
0000            305   _ADBUSY         BIT 0xec
0000            306   _ADINT          BIT 0xed
0000            307   _IPOEN          BIT 0xee
0000            308   _ADEN           BIT 0xef
0000            309   _B_0            BIT 0xf0
0000            310   _B_1            BIT 0xf1
0000            311   _B_2            BIT 0xf2
0000            312   _B_3            BIT 0xf3
0000            313   _B_4            BIT 0xf4
0000            314   _B_5            BIT 0xf5
0000            315   _B_6            BIT 0xf6
0000            316   _B_7            BIT 0xf7
0000            317   _C0FIF          BIT 0xe8
0000            318   _C0RIF          BIT 0xe9
0000            319   _C1FIF          BIT 0xea
0000            320   _C1RIF          BIT 0xeb
0000            321   _C2FIF          BIT 0xec
0000            322   _C2RIF          BIT 0xed
0000            323   _C3FIF          BIT 0xee
0000            324   _C3RIF          BIT 0xef
0000            325   _D1SRC0         BIT 0x88
0000            326   _D1SRC1         BIT 0x89
0000            327   _D1AMEN         BIT 0x8a
0000            328   _D01REFSL       BIT 0x8b
0000            329   _D3SRC0         BIT 0x8c
0000            330   _D3SRC1         BIT 0x8d
0000            331   _D3AMEN         BIT 0x8e
0000            332   _D23REFSL       BIT 0x8f
0000            333   _D0UDIS         BIT 0x98
0000            334   _D1UDIS         BIT 0x99
0000            335   _D2UDIS         BIT 0x9a
0000            336   _D3UDIS         BIT 0x9b
0000            337   _EX0            BIT 0xa8
0000            338   _ET0            BIT 0xa9
0000            339   _EX1            BIT 0xaa
0000            340   _ET1            BIT 0xab
0000            341   _ES0            BIT 0xac
0000            342   _ET2            BIT 0xad
0000            343   _ESPI0          BIT 0xae
0000            344   _EA             BIT 0xaf
0000            345   _PX0            BIT 0xb8
0000            346   _PT0            BIT 0xb9
0000            347   _PX1            BIT 0xba
0000            348   _PT1            BIT 0xbb
0000            349   _PS0            BIT 0xbc
0000            350   _PT2            BIT 0xbd
0000            351   _PSPI0          BIT 0xbe
0000            352   _P0_0           BIT 0x80
0000            353   _P0_1           BIT 0x81
0000            354   _P0_2           BIT 0x82
0000            355   _P0_3           BIT 0x83
0000            356   _P0_4           BIT 0x84
0000            357   _P0_5           BIT 0x85
0000            358   _P0_6           BIT 0x86
0000            359   _P0_7           BIT 0x87
0000            360   _P1_0           BIT 0x90
0000            361   _P1_1           BIT 0x91
0000            362   _P1_2           BIT 0x92
0000            363   _P1_3           BIT 0x93
0000            364   _P1_4           BIT 0x94
0000            365   _P1_5           BIT 0x95
0000            366   _P1_6           BIT 0x96
0000            367   _P1_7           BIT 0x97
0000            368   _P2_0           BIT 0xa0
0000            369   _P2_1           BIT 0xa1
0000            370   _P2_2           BIT 0xa2
0000            371   _P2_3           BIT 0xa3
0000            372   _P2_4           BIT 0xa4
0000            373   _P2_5           BIT 0xa5
0000            374   _P2_6           BIT 0xa6
0000            375   _P3_0           BIT 0xb0
0000            376   _P3_1           BIT 0xb1
0000            377   _P3_2           BIT 0xb2
0000            378   _P3_3           BIT 0xb3
0000            379   _P3_4           BIT 0xb4
0000            380   _P3_7           BIT 0xb7
0000            381   _CCF0           BIT 0xd8
0000            382   _CCF1           BIT 0xd9
0000            383   _CCF2           BIT 0xda
0000            384   _CCF3           BIT 0xdb
0000            385   _CCF4           BIT 0xdc
0000            386   _CCF5           BIT 0xdd
0000            387   _CR             BIT 0xde
0000            388   _CF             BIT 0xdf
0000            389   _PARITY         BIT 0xd0
0000            390   _F1             BIT 0xd1
0000            391   _OV             BIT 0xd2
0000            392   _RS0            BIT 0xd3
0000            393   _RS1            BIT 0xd4
0000            394   _F0             BIT 0xd5
0000            395   _AC             BIT 0xd6
0000            396   _CY             BIT 0xd7
0000            397   _RI             BIT 0x98
0000            398   _TI             BIT 0x99
0000            399   _RB8            BIT 0x9a
0000            400   _TB8            BIT 0x9b
0000            401   _REN            BIT 0x9c
0000            402   _CE             BIT 0x9d
0000            403   _SMODE          BIT 0x9e
0000            404   _RI1            BIT 0xc8
0000            405   _TI1            BIT 0xc9
0000            406   _RBX1           BIT 0xca
0000            407   _TBX1           BIT 0xcb
0000            408   _REN1           BIT 0xcc
0000            409   _PERR1          BIT 0xcd
0000            410   _OVR1           BIT 0xce
0000            411   _SI             BIT 0xc0
0000            412   _ACK            BIT 0xc1
0000            413   _ARBLOST        BIT 0xc2
0000            414   _ACKRQ          BIT 0xc3
0000            415   _STO            BIT 0xc4
0000            416   _STA            BIT 0xc5
0000            417   _TXMODE         BIT 0xc6
0000            418   _MASTER         BIT 0xc7
0000            419   _SPIEN          BIT 0xf8
0000            420   _TXNF           BIT 0xf9
0000            421   _NSSMD0         BIT 0xfa
0000            422   _NSSMD1         BIT 0xfb
0000            423   _RXOVRN         BIT 0xfc
0000            424   _MODF           BIT 0xfd
0000            425   _WCOL           BIT 0xfe
0000            426   _SPIF           BIT 0xff
0000            427   _IT0            BIT 0x88
0000            428   _IE0            BIT 0x89
0000            429   _IT1            BIT 0x8a
0000            430   _IE1            BIT 0x8b
0000            431   _TR0            BIT 0x8c
0000            432   _TF0            BIT 0x8d
0000            433   _TR1            BIT 0x8e
0000            434   _TF1            BIT 0x8f
0000            435   _T2XCLK0        BIT 0xc8
0000            436   _T2XCLK1        BIT 0xc9
0000            437   _TR2            BIT 0xca
0000            438   _T2SPLIT        BIT 0xcb
0000            439   _TF2CEN         BIT 0xcc
0000            440   _TF2LEN         BIT 0xcd
0000            441   _TF2L           BIT 0xce
0000            442   _TF2H           BIT 0xcf
0000            443   _T4XCLK0        BIT 0x98
0000            444   _T4XCLK1        BIT 0x99
0000            445   _TR4            BIT 0x9a
0000            446   _T4SPLIT        BIT 0x9b
0000            447   _TF4CEN         BIT 0x9c
0000            448   _TF4LEN         BIT 0x9d
0000            449   _TF4L           BIT 0x9e
0000            450   _TF4H           BIT 0x9f
0000            451   _T5XCLK0        BIT 0xc0
0000            452   _T5XCLK1        BIT 0xc1
0000            453   _TR5            BIT 0xc2
0000            454   _T5SPLIT        BIT 0xc3
0000            455   _TF5CEN         BIT 0xc4
0000            456   _TF5LEN         BIT 0xc5
0000            457   _TF5L           BIT 0xc6
0000            458   _TF5H           BIT 0xc7
0000            459   _RIE            BIT 0xd8
0000            460   _RXTO0          BIT 0xd9
0000            461   _RXTO1          BIT 0xda
0000            462   _RFRQ           BIT 0xdb
0000            463   _TIE            BIT 0xdc
0000            464   _TXHOLD         BIT 0xdd
0000            465   _TXNF1          BIT 0xde
0000            466   _TFRQ           BIT 0xdf
0000            467   ;--------------------------------------------------------
0000            468   ; overlayable register banks
0000            469   ;--------------------------------------------------------
0000            470            rbank0 segment data overlay
0000            471   ;--------------------------------------------------------
0000            472   ; internal ram data
0000            473   ;--------------------------------------------------------
0000            474            rseg R_DSEG
0000            475   _get_freq_freq100_1_1_23:
0000            476            ds 4
0004            477   _get_freq_freq100_2_1_23:
0004            478            ds 4
0008            479   _get_freq_overflow_count_1_23:
0008            480            ds 1
0009            481   _get_freq_i_1_23:
0009            482            ds 2
000B            483   _get_freq_sloc0_1_0:
000B            484            ds 4
000F            485   ;--------------------------------------------------------
000F            486   ; overlayable items in internal ram 
000F            487   ;--------------------------------------------------------
0000            488            rseg R_OSEG
0000            489   ;--------------------------------------------------------
0000            490   ; indirectly addressable internal ram data
0000            491   ;--------------------------------------------------------
0000            492            rseg R_ISEG
0000            493   ;--------------------------------------------------------
0000            494   ; absolute internal ram data
0000            495   ;--------------------------------------------------------
0000            496            DSEG
0000            497   ;--------------------------------------------------------
0000            498   ; bit data
0000            499   ;--------------------------------------------------------
0000            500            rseg R_BSEG
0000            501   ;--------------------------------------------------------
0000            502   ; paged external ram data
0000            503   ;--------------------------------------------------------
0000            504            rseg R_PSEG
0000            505   ;--------------------------------------------------------
0000            506   ; external ram data
0000            507   ;--------------------------------------------------------
0000            508            rseg R_XSEG
0000            509   ;--------------------------------------------------------
0000            510   ; absolute external ram data
0000            511   ;--------------------------------------------------------
0000            512            XSEG
0000            513   ;--------------------------------------------------------
0000            514   ; external initialized ram data
0000            515   ;--------------------------------------------------------
0000            516            rseg R_IXSEG
0000            517            rseg R_HOME
0000            518            rseg R_GSINIT
0000            519            rseg R_CSEG
0000            520   ;--------------------------------------------------------
0000            521   ; Interrupt vectors
0000            522   ;--------------------------------------------------------
0000            523   ;--------------------------------------------------------
0000            524   ; global & static initialisations
0000            525   ;--------------------------------------------------------
0000            526            rseg R_HOME
0000            527            rseg R_GSINIT
0000            528            rseg R_GSINIT
0000            529   ;--------------------------------------------------------
0000            530   ; data variables initialization
0000            531   ;--------------------------------------------------------
0000            532            rseg R_DINIT
0000            533            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            534   ;--------------------------------------------------------
0000            535   ; code
0000            536   ;--------------------------------------------------------
0000            537            rseg R_CSEG
0000            538   ;------------------------------------------------------------
0000            539   ;Allocation info for local variables in function 'get_freq'
0000            540   ;------------------------------------------------------------
0000            541   ;freq100_1                 Allocated with name '_get_freq_freq100_1_1_23'
0000            542   ;freq100_2                 Allocated with name '_get_freq_freq100_2_1_23'
0000            543   ;period                    Allocated to registers r2 r3 r4 r5 
0000            544   ;overflow_count            Allocated with name '_get_freq_overflow_count_1_23'
0000            545   ;i                         Allocated with name '_get_freq_i_1_23'
0000            546   ;sloc0                     Allocated with name '_get_freq_sloc0_1_0'
0000            547   ;------------------------------------------------------------
0000            548   ;        freq.c:5: int get_freq(){
0000            549   ;        -----------------------------------------
0000            550   ;         function get_freq
0000            551   ;        -----------------------------------------
0000            552   _get_freq:
0000            553            using   0
0000            554   ;        freq.c:6: long freq100_1 = 0;
0000            555   ;        freq.c:7: long freq100_2 = 0;
0000 E4         556            clr     a
0001 F560       557            mov     _get_freq_freq100_1_1_23,a
0003 F561       558            mov     (_get_freq_freq100_1_1_23 + 1),a
0005 F562       559            mov     (_get_freq_freq100_1_1_23 + 2),a
0007 F563       560            mov     (_get_freq_freq100_1_1_23 + 3),a
0009 F5B0       561            mov     _get_freq_freq100_2_1_23,a
000B F5B1       562            mov     (_get_freq_freq100_2_1_23 + 1),a
000D F5B2       563            mov     (_get_freq_freq100_2_1_23 + 2),a
000F F5B3       564            mov     (_get_freq_freq100_2_1_23 + 3),a
0011            565   ;        freq.c:9: unsigned char overflow_count=0;
0011            566   ;        freq.c:12: for(i=0; i<5; i++){
0011 E4         567            clr     a
0012 F500       568            mov     _get_freq_overflow_count_1_23,a
0014 F550       569            mov     _get_freq_i_1_23,a
0016 F551       570            mov     (_get_freq_i_1_23 + 1),a
0018            571   L002033?:
0018 C3         572            clr     c
0019 E550       573            mov     a,_get_freq_i_1_23
001B 9405       574            subb    a,#0x05
001D E551       575            mov     a,(_get_freq_i_1_23 + 1)
001F 6480       576            xrl     a,#0x80
0021 9480       577            subb    a,#0x80
0023 4000       578            jc      L002071?
0025 020000     579            ljmp    L002036?
0028            580   L002071?:
0028            581   ;        freq.c:13: TL0=0; 
0028 758A00     582            mov     _TL0,#0x00
002B            583   ;        freq.c:14: TH0=0;
002B 758C00     584            mov     _TH0,#0x00
002E            585   ;        freq.c:15: TF0=0;
002E C28D       586            clr     _TF0
0030            587   ;        freq.c:17: while(metal_detect!=0); // Wait for the signal to be zero
0030            588   L002001?:
0030 20B0A0     589            jb      _P3_0,L002001?
0033            590   ;        freq.c:18: while(metal_detect!=1); // Wait for the signal to be one
0033            591   L002004?:
0033 30B0E8     592            jnb     _P3_0,L002004?
0036            593   ;        freq.c:19: TR0=1; // Start the timer
0036 D28C       594            setb    _TR0
0038            595   ;        freq.c:20: while(metal_detect!=0) // Wait for the signal to be zero
0038 A900       596            mov     r1,_get_freq_overflow_count_1_23
003A            597   L002009?:
003A 30B068     598            jnb     _P3_0,L002051?
003D            599   ;        freq.c:22: if(TF0==1) // Did the 16-bit timer overflow?
003D            600   ;        freq.c:24: TF0=0;
003D 108DA8     601            jbc     _TF0,L002075?
0040 8000       602            sjmp    L002009?
0042            603   L002075?:
0042            604   ;        freq.c:25: overflow_count++;
0042 09         605            inc     r1
0043            606   ;        freq.c:28: while(metal_detect!=1) // Wait for the signal to be one
0043 8000       607            sjmp    L002009?
0045            608   L002051?:
0045            609   L002014?:
0045 20B028     610            jb      _P3_0,L002016?
0048            611   ;        freq.c:30: if(TF0==1) // Did the 16-bit timer overflow?
0048            612   ;        freq.c:32: TF0=0;
0048 108D68     613            jbc     _TF0,L002077?
004B 8000       614            sjmp    L002014?
004D            615   L002077?:
004D            616   ;        freq.c:33: overflow_count++;
004D 09         617            inc     r1
004E 8000       618            sjmp    L002014?
0050            619   L002016?:
0050            620   ;        freq.c:36: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0050 C28C       621            clr     _TR0
0052            622   ;        freq.c:37: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0052 8982       623            mov     dpl,r1
0054 120000     624            lcall   ___uchar2fs
0057 A982       625            mov     r1,dpl
0059 AA83       626            mov     r2,dph
005B ABF0       627            mov     r3,b
005D FC         628            mov     r4,a
005E C001       629            push    ar1
0060 C002       630            push    ar2
0062 C003       631            push    ar3
0064 C004       632            push    ar4
0066 900000     633            mov     dptr,#0x0000
0069 75F080     634            mov     b,#0x80
006C 7447       635            mov     a,#0x47
006E 120000     636            lcall   ___fsmul
0071 8582A0     637            mov     _get_freq_sloc0_1_0,dpl
0074 8583A1     638            mov     (_get_freq_sloc0_1_0 + 1),dph
0077 85F0A2     639            mov     (_get_freq_sloc0_1_0 + 2),b
007A F5A3       640            mov     (_get_freq_sloc0_1_0 + 3),a
007C E581       641            mov     a,sp
007E 24FC       642            add     a,#0xfc
0080 F581       643            mov     sp,a
0082 858C82     644            mov     dpl,_TH0
0085 120000     645            lcall   ___uchar2fs
0088 A982       646            mov     r1,dpl
008A AF83       647            mov     r7,dph
008C A8F0       648            mov     r0,b
008E FA         649            mov     r2,a
008F C001       650            push    ar1
0091 C007       651            push    ar7
0093 C000       652            push    ar0
0095 C002       653            push    ar2
0097 900000     654            mov     dptr,#0x0000
009A 75F080     655            mov     b,#0x80
009D 7443       656            mov     a,#0x43
009F 120000     657            lcall   ___fsmul
00A2 AA82       658            mov     r2,dpl
00A4 AB83       659            mov     r3,dph
00A6 ACF0       660            mov     r4,b
00A8 FD         661            mov     r5,a
00A9 E581       662            mov     a,sp
00AB 24FC       663            add     a,#0xfc
00AD F581       664            mov     sp,a
00AF C002       665            push    ar2
00B1 C003       666            push    ar3
00B3 C004       667            push    ar4
00B5 C005       668            push    ar5
00B7 85A082     669            mov     dpl,_get_freq_sloc0_1_0
00BA 85A183     670            mov     dph,(_get_freq_sloc0_1_0 + 1)
00BD 85A2F0     671            mov     b,(_get_freq_sloc0_1_0 + 2)
00C0 E5A3       672            mov     a,(_get_freq_sloc0_1_0 + 3)
00C2 120000     673            lcall   ___fsadd
00C5 8582A0     674            mov     _get_freq_sloc0_1_0,dpl
00C8 8583A1     675            mov     (_get_freq_sloc0_1_0 + 1),dph
00CB 85F0A2     676            mov     (_get_freq_sloc0_1_0 + 2),b
00CE F5A3       677            mov     (_get_freq_sloc0_1_0 + 3),a
00D0 E581       678            mov     a,sp
00D2 24FC       679            add     a,#0xfc
00D4 F581       680            mov     sp,a
00D6 AF8A       681            mov     r7,_TL0
00D8 7800       682            mov     r0,#0x00
00DA 8F82       683            mov     dpl,r7
00DC 8883       684            mov     dph,r0
00DE 120000     685            lcall   ___sint2fs
00E1 AF82       686            mov     r7,dpl
00E3 A883       687            mov     r0,dph
00E5 A9F0       688            mov     r1,b
00E7 FA         689            mov     r2,a
00E8 C007       690            push    ar7
00EA C000       691            push    ar0
00EC C001       692            push    ar1
00EE C002       693            push    ar2
00F0 85A082     694            mov     dpl,_get_freq_sloc0_1_0
00F3 85A183     695            mov     dph,(_get_freq_sloc0_1_0 + 1)
00F6 85A2F0     696            mov     b,(_get_freq_sloc0_1_0 + 2)
00F9 E5A3       697            mov     a,(_get_freq_sloc0_1_0 + 3)
00FB 120000     698            lcall   ___fsadd
00FE AA82       699            mov     r2,dpl
0100 AB83       700            mov     r3,dph
0102 ACF0       701            mov     r4,b
0104 FD         702            mov     r5,a
0105 E581       703            mov     a,sp
0107 24FC       704            add     a,#0xfc
0109 F581       705            mov     sp,a
010B C002       706            push    ar2
010D C003       707            push    ar3
010F C004       708            push    ar4
0111 C005       709            push    ar5
0113 90F4FC     710            mov     dptr,#0xF4FC
0116 75F032     711            mov     b,#0x32
0119 7434       712            mov     a,#0x34
011B 120000     713            lcall   ___fsmul
011E AA82       714            mov     r2,dpl
0120 AB83       715            mov     r3,dph
0122 ACF0       716            mov     r4,b
0124 FD         717            mov     r5,a
0125 E581       718            mov     a,sp
0127 24FC       719            add     a,#0xfc
0129 F581       720            mov     sp,a
012B            721   ;        freq.c:38: overflow_count = 0;
012B 750000     722            mov     _get_freq_overflow_count_1_23,#0x00
012E            723   ;        freq.c:39: freq100_1 += 1.0/(period*10);
012E C002       724            push    ar2
0130 C003       725            push    ar3
0132 C004       726            push    ar4
0134 C005       727            push    ar5
0136 900000     728            mov     dptr,#0x0000
0139 75F020     729            mov     b,#0x20
013C 7441       730            mov     a,#0x41
013E 120000     731            lcall   ___fsmul
0141 AF82       732            mov     r7,dpl
0143 A883       733            mov     r0,dph
0145 A9F0       734            mov     r1,b
0147 FE         735            mov     r6,a
0148 E581       736            mov     a,sp
014A 24FC       737            add     a,#0xfc
014C F581       738            mov     sp,a
014E C007       739            push    ar7
0150 C000       740            push    ar0
0152 C001       741            push    ar1
0154 C006       742            push    ar6
0156 900000     743            mov     dptr,#0x0000
0159 75F080     744            mov     b,#0x80
015C 743F       745            mov     a,#0x3F
015E 120000     746            lcall   ___fsdiv
0161 8582A0     747            mov     _get_freq_sloc0_1_0,dpl
0164 8583A1     748            mov     (_get_freq_sloc0_1_0 + 1),dph
0167 85F0A2     749            mov     (_get_freq_sloc0_1_0 + 2),b
016A F5A3       750            mov     (_get_freq_sloc0_1_0 + 3),a
016C E581       751            mov     a,sp
016E 24FC       752            add     a,#0xfc
0170 F581       753            mov     sp,a
0172 856082     754            mov     dpl,_get_freq_freq100_1_1_23
0175 856183     755            mov     dph,(_get_freq_freq100_1_1_23 + 1)
0178 8562F0     756            mov     b,(_get_freq_freq100_1_1_23 + 2)
017B E563       757            mov     a,(_get_freq_freq100_1_1_23 + 3)
017D 120000     758            lcall   ___slong2fs
0180 AE82       759            mov     r6,dpl
0182 AF83       760            mov     r7,dph
0184 A8F0       761            mov     r0,b
0186 F9         762            mov     r1,a
0187 C0A0       763            push    _get_freq_sloc0_1_0
0189 C0A1       764            push    (_get_freq_sloc0_1_0 + 1)
018B C0A2       765            push    (_get_freq_sloc0_1_0 + 2)
018D C0A3       766            push    (_get_freq_sloc0_1_0 + 3)
018F 8E82       767            mov     dpl,r6
0191 8F83       768            mov     dph,r7
0193 88F0       769            mov     b,r0
0195 E9         770            mov     a,r1
0196 120000     771            lcall   ___fsadd
0199 AE82       772            mov     r6,dpl
019B AF83       773            mov     r7,dph
019D A8F0       774            mov     r0,b
019F F9         775            mov     r1,a
01A0 E581       776            mov     a,sp
01A2 24FC       777            add     a,#0xfc
01A4 F581       778            mov     sp,a
01A6 8E82       779            mov     dpl,r6
01A8 8F83       780            mov     dph,r7
01AA 88F0       781            mov     b,r0
01AC E9         782            mov     a,r1
01AD 120000     783            lcall   ___fs2slong
01B0 858260     784            mov     _get_freq_freq100_1_1_23,dpl
01B3 858361     785            mov     (_get_freq_freq100_1_1_23 + 1),dph
01B6 85F062     786            mov     (_get_freq_freq100_1_1_23 + 2),b
01B9 F563       787            mov     (_get_freq_freq100_1_1_23 + 3),a
01BB            788   ;        freq.c:12: for(i=0; i<5; i++){
01BB 0550       789            inc     _get_freq_i_1_23
01BD E4         790            clr     a
01BE B55068     791            cjne    a,_get_freq_i_1_23,L002078?
01C1 0551       792            inc     (_get_freq_i_1_23 + 1)
01C3            793   L002078?:
01C3 020000     794            ljmp    L002033?
01C6            795   L002036?:
01C6            796   ;        freq.c:41: freq100_1 /= 5.0;
01C6 856082     797            mov     dpl,_get_freq_freq100_1_1_23
01C9 856183     798            mov     dph,(_get_freq_freq100_1_1_23 + 1)
01CC 8562F0     799            mov     b,(_get_freq_freq100_1_1_23 + 2)
01CF E563       800            mov     a,(_get_freq_freq100_1_1_23 + 3)
01D1 120000     801            lcall   ___slong2fs
01D4 AE82       802            mov     r6,dpl
01D6 AF83       803            mov     r7,dph
01D8 A8F0       804            mov     r0,b
01DA F9         805            mov     r1,a
01DB E4         806            clr     a
01DC C0E0       807            push    acc
01DE C0E0       808            push    acc
01E0 74A0       809            mov     a,#0xA0
01E2 C0E0       810            push    acc
01E4 7440       811            mov     a,#0x40
01E6 C0E0       812            push    acc
01E8 8E82       813            mov     dpl,r6
01EA 8F83       814            mov     dph,r7
01EC 88F0       815            mov     b,r0
01EE E9         816            mov     a,r1
01EF 120000     817            lcall   ___fsdiv
01F2 AE82       818            mov     r6,dpl
01F4 AF83       819            mov     r7,dph
01F6 A8F0       820            mov     r0,b
01F8 F9         821            mov     r1,a
01F9 E581       822            mov     a,sp
01FB 24FC       823            add     a,#0xfc
01FD F581       824            mov     sp,a
01FF 8E82       825            mov     dpl,r6
0201 8F83       826            mov     dph,r7
0203 88F0       827            mov     b,r0
0205 E9         828            mov     a,r1
0206 120000     829            lcall   ___fs2slong
0209 858260     830            mov     _get_freq_freq100_1_1_23,dpl
020C 858361     831            mov     (_get_freq_freq100_1_1_23 + 1),dph
020F 85F062     832            mov     (_get_freq_freq100_1_1_23 + 2),b
0212 F563       833            mov     (_get_freq_freq100_1_1_23 + 3),a
0214            834   ;        freq.c:43: for(i=0; i<5; i++){
0214 E4         835            clr     a
0215 F550       836            mov     _get_freq_i_1_23,a
0217 F551       837            mov     (_get_freq_i_1_23 + 1),a
0219            838   L002037?:
0219 C3         839            clr     c
021A E550       840            mov     a,_get_freq_i_1_23
021C 9405       841            subb    a,#0x05
021E E551       842            mov     a,(_get_freq_i_1_23 + 1)
0220 6480       843            xrl     a,#0x80
0222 9480       844            subb    a,#0x80
0224 4000       845            jc      L002079?
0226 020000     846            ljmp    L002040?
0229            847   L002079?:
0229            848   ;        freq.c:44: TL0=0; 
0229 758A00     849            mov     _TL0,#0x00
022C            850   ;        freq.c:45: TH0=0;
022C 758C00     851            mov     _TH0,#0x00
022F            852   ;        freq.c:46: TF0=0;
022F C28D       853            clr     _TF0
0231            854   ;        freq.c:48: while(metal_detect!=0); // Wait for the signal to be zero
0231            855   L002017?:
0231 20B0A8     856            jb      _P3_0,L002017?
0234            857   ;        freq.c:49: while(metal_detect!=1); // Wait for the signal to be one
0234            858   L002020?:
0234 30B0E8     859            jnb     _P3_0,L002020?
0237            860   ;        freq.c:50: TR0=1; // Start the timer
0237 D28C       861            setb    _TR0
0239            862   ;        freq.c:51: while(metal_detect!=0) // Wait for the signal to be zero
0239 A800       863            mov     r0,_get_freq_overflow_count_1_23
023B            864   L002025?:
023B 30B068     865            jnb     _P3_0,L002062?
023E            866   ;        freq.c:53: if(TF0==1) // Did the 16-bit timer overflow?
023E            867   ;        freq.c:55: TF0=0;
023E 108DA8     868            jbc     _TF0,L002083?
0241 8000       869            sjmp    L002025?
0243            870   L002083?:
0243            871   ;        freq.c:56: overflow_count++;
0243 08         872            inc     r0
0244            873   ;        freq.c:59: while(metal_detect!=1) // Wait for the signal to be one
0244 8000       874            sjmp    L002025?
0246            875   L002062?:
0246            876   L002030?:
0246 20B028     877            jb      _P3_0,L002032?
0249            878   ;        freq.c:61: if(TF0==1) // Did the 16-bit timer overflow?
0249            879   ;        freq.c:63: TF0=0;
0249 108D68     880            jbc     _TF0,L002085?
024C 8000       881            sjmp    L002030?
024E            882   L002085?:
024E            883   ;        freq.c:64: overflow_count++;
024E 08         884            inc     r0
024F 8000       885            sjmp    L002030?
0251            886   L002032?:
0251            887   ;        freq.c:67: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0251 C28C       888            clr     _TR0
0253            889   ;        freq.c:68: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0253 8882       890            mov     dpl,r0
0255 120000     891            lcall   ___uchar2fs
0258 A882       892            mov     r0,dpl
025A A983       893            mov     r1,dph
025C AEF0       894            mov     r6,b
025E FF         895            mov     r7,a
025F C000       896            push    ar0
0261 C001       897            push    ar1
0263 C006       898            push    ar6
0265 C007       899            push    ar7
0267 900000     900            mov     dptr,#0x0000
026A 75F080     901            mov     b,#0x80
026D 7447       902            mov     a,#0x47
026F 120000     903            lcall   ___fsmul
0272 8582A0     904            mov     _get_freq_sloc0_1_0,dpl
0275 8583A1     905            mov     (_get_freq_sloc0_1_0 + 1),dph
0278 85F0A2     906            mov     (_get_freq_sloc0_1_0 + 2),b
027B F5A3       907            mov     (_get_freq_sloc0_1_0 + 3),a
027D E581       908            mov     a,sp
027F 24FC       909            add     a,#0xfc
0281 F581       910            mov     sp,a
0283 858C82     911            mov     dpl,_TH0
0286 120000     912            lcall   ___uchar2fs
0289 AE82       913            mov     r6,dpl
028B AF83       914            mov     r7,dph
028D A8F0       915            mov     r0,b
028F F9         916            mov     r1,a
0290 C006       917            push    ar6
0292 C007       918            push    ar7
0294 C000       919            push    ar0
0296 C001       920            push    ar1
0298 900000     921            mov     dptr,#0x0000
029B 75F080     922            mov     b,#0x80
029E 7443       923            mov     a,#0x43
02A0 120000     924            lcall   ___fsmul
02A3 AE82       925            mov     r6,dpl
02A5 AF83       926            mov     r7,dph
02A7 A8F0       927            mov     r0,b
02A9 F9         928            mov     r1,a
02AA E581       929            mov     a,sp
02AC 24FC       930            add     a,#0xfc
02AE F581       931            mov     sp,a
02B0 C006       932            push    ar6
02B2 C007       933            push    ar7
02B4 C000       934            push    ar0
02B6 C001       935            push    ar1
02B8 85A082     936            mov     dpl,_get_freq_sloc0_1_0
02BB 85A183     937            mov     dph,(_get_freq_sloc0_1_0 + 1)
02BE 85A2F0     938            mov     b,(_get_freq_sloc0_1_0 + 2)
02C1 E5A3       939            mov     a,(_get_freq_sloc0_1_0 + 3)
02C3 120000     940            lcall   ___fsadd
02C6 8582A0     941            mov     _get_freq_sloc0_1_0,dpl
02C9 8583A1     942            mov     (_get_freq_sloc0_1_0 + 1),dph
02CC 85F0A2     943            mov     (_get_freq_sloc0_1_0 + 2),b
02CF F5A3       944            mov     (_get_freq_sloc0_1_0 + 3),a
02D1 E581       945            mov     a,sp
02D3 24FC       946            add     a,#0xfc
02D5 F581       947            mov     sp,a
02D7 AE8A       948            mov     r6,_TL0
02D9 7F00       949            mov     r7,#0x00
02DB 8E82       950            mov     dpl,r6
02DD 8F83       951            mov     dph,r7
02DF 120000     952            lcall   ___sint2fs
02E2 AE82       953            mov     r6,dpl
02E4 AF83       954            mov     r7,dph
02E6 A8F0       955            mov     r0,b
02E8 F9         956            mov     r1,a
02E9 C006       957            push    ar6
02EB C007       958            push    ar7
02ED C000       959            push    ar0
02EF C001       960            push    ar1
02F1 85A082     961            mov     dpl,_get_freq_sloc0_1_0
02F4 85A183     962            mov     dph,(_get_freq_sloc0_1_0 + 1)
02F7 85A2F0     963            mov     b,(_get_freq_sloc0_1_0 + 2)
02FA E5A3       964            mov     a,(_get_freq_sloc0_1_0 + 3)
02FC 120000     965            lcall   ___fsadd
02FF AE82       966            mov     r6,dpl
0301 AF83       967            mov     r7,dph
0303 A8F0       968            mov     r0,b
0305 F9         969            mov     r1,a
0306 E581       970            mov     a,sp
0308 24FC       971            add     a,#0xfc
030A F581       972            mov     sp,a
030C C006       973            push    ar6
030E C007       974            push    ar7
0310 C000       975            push    ar0
0312 C001       976            push    ar1
0314 90F4FC     977            mov     dptr,#0xF4FC
0317 75F032     978            mov     b,#0x32
031A 7434       979            mov     a,#0x34
031C 120000     980            lcall   ___fsmul
031F AA82       981            mov     r2,dpl
0321 AB83       982            mov     r3,dph
0323 ACF0       983            mov     r4,b
0325 FD         984            mov     r5,a
0326 E581       985            mov     a,sp
0328 24FC       986            add     a,#0xfc
032A F581       987            mov     sp,a
032C            988   ;        freq.c:69: overflow_count = 0;
032C 750000     989            mov     _get_freq_overflow_count_1_23,#0x00
032F            990   ;        freq.c:70: freq100_2 += 1.0/(period*10);
032F C002       991            push    ar2
0331 C003       992            push    ar3
0333 C004       993            push    ar4
0335 C005       994            push    ar5
0337 900000     995            mov     dptr,#0x0000
033A 75F020     996            mov     b,#0x20
033D 7441       997            mov     a,#0x41
033F 120000     998            lcall   ___fsmul
0342 AA82       999            mov     r2,dpl
0344 AB83      1000            mov     r3,dph
0346 ACF0      1001            mov     r4,b
0348 FD        1002            mov     r5,a
0349 E581      1003            mov     a,sp
034B 24FC      1004            add     a,#0xfc
034D F581      1005            mov     sp,a
034F C002      1006            push    ar2
0351 C003      1007            push    ar3
0353 C004      1008            push    ar4
0355 C005      1009            push    ar5
0357 900000    1010            mov     dptr,#0x0000
035A 75F080    1011            mov     b,#0x80
035D 743F      1012            mov     a,#0x3F
035F 120000    1013            lcall   ___fsdiv
0362 AA82      1014            mov     r2,dpl
0364 AB83      1015            mov     r3,dph
0366 ACF0      1016            mov     r4,b
0368 FD        1017            mov     r5,a
0369 E581      1018            mov     a,sp
036B 24FC      1019            add     a,#0xfc
036D F581      1020            mov     sp,a
036F 85B082    1021            mov     dpl,_get_freq_freq100_2_1_23
0372 85B183    1022            mov     dph,(_get_freq_freq100_2_1_23 + 1)
0375 85B2F0    1023            mov     b,(_get_freq_freq100_2_1_23 + 2)
0378 E5B3      1024            mov     a,(_get_freq_freq100_2_1_23 + 3)
037A C002      1025            push    ar2
037C C003      1026            push    ar3
037E C004      1027            push    ar4
0380 C005      1028            push    ar5
0382 120000    1029            lcall   ___slong2fs
0385 120000    1030            lcall   ___fsadd
0388 AA82      1031            mov     r2,dpl
038A AB83      1032            mov     r3,dph
038C ACF0      1033            mov     r4,b
038E FD        1034            mov     r5,a
038F E581      1035            mov     a,sp
0391 24FC      1036            add     a,#0xfc
0393 F581      1037            mov     sp,a
0395 8A82      1038            mov     dpl,r2
0397 8B83      1039            mov     dph,r3
0399 8CF0      1040            mov     b,r4
039B ED        1041            mov     a,r5
039C 120000    1042            lcall   ___fs2slong
039F 8582B0    1043            mov     _get_freq_freq100_2_1_23,dpl
03A2 8583B1    1044            mov     (_get_freq_freq100_2_1_23 + 1),dph
03A5 85F0B2    1045            mov     (_get_freq_freq100_2_1_23 + 2),b
03A8 F5B3      1046            mov     (_get_freq_freq100_2_1_23 + 3),a
03AA           1047   ;        freq.c:43: for(i=0; i<5; i++){
03AA 0550      1048            inc     _get_freq_i_1_23
03AC E4        1049            clr     a
03AD B550A8    1050            cjne    a,_get_freq_i_1_23,L002086?
03B0 0551      1051            inc     (_get_freq_i_1_23 + 1)
03B2           1052   L002086?:
03B2 020000    1053            ljmp    L002037?
03B5           1054   L002040?:
03B5           1055   ;        freq.c:72: freq100_2 /= 5.0;
03B5 85B082    1056            mov     dpl,_get_freq_freq100_2_1_23
03B8 85B183    1057            mov     dph,(_get_freq_freq100_2_1_23 + 1)
03BB 85B2F0    1058            mov     b,(_get_freq_freq100_2_1_23 + 2)
03BE E5B3      1059            mov     a,(_get_freq_freq100_2_1_23 + 3)
03C0 120000    1060            lcall   ___slong2fs
03C3 AA82      1061            mov     r2,dpl
03C5 AB83      1062            mov     r3,dph
03C7 ACF0      1063            mov     r4,b
03C9 FD        1064            mov     r5,a
03CA E4        1065            clr     a
03CB C0E0      1066            push    acc
03CD C0E0      1067            push    acc
03CF 74A0      1068            mov     a,#0xA0
03D1 C0E0      1069            push    acc
03D3 7440      1070            mov     a,#0x40
03D5 C0E0      1071            push    acc
03D7 8A82      1072            mov     dpl,r2
03D9 8B83      1073            mov     dph,r3
03DB 8CF0      1074            mov     b,r4
03DD ED        1075            mov     a,r5
03DE 120000    1076            lcall   ___fsdiv
03E1 AA82      1077            mov     r2,dpl
03E3 AB83      1078            mov     r3,dph
03E5 ACF0      1079            mov     r4,b
03E7 FD        1080            mov     r5,a
03E8 E581      1081            mov     a,sp
03EA 24FC      1082            add     a,#0xfc
03EC F581      1083            mov     sp,a
03EE 8A82      1084            mov     dpl,r2
03F0 8B83      1085            mov     dph,r3
03F2 8CF0      1086            mov     b,r4
03F4 ED        1087            mov     a,r5
03F5 120000    1088            lcall   ___fs2slong
03F8 8582B0    1089            mov     _get_freq_freq100_2_1_23,dpl
03FB 8583B1    1090            mov     (_get_freq_freq100_2_1_23 + 1),dph
03FE 85F0B2    1091            mov     (_get_freq_freq100_2_1_23 + 2),b
0401 F5B3      1092            mov     (_get_freq_freq100_2_1_23 + 3),a
0403           1093   ;        freq.c:73: return (freq100_1+freq100_2)/2.0;
0403 E5B0      1094            mov     a,_get_freq_freq100_2_1_23
0405 2560      1095            add     a,_get_freq_freq100_1_1_23
0407 FA        1096            mov     r2,a
0408 E5B1      1097            mov     a,(_get_freq_freq100_2_1_23 + 1)
040A 3561      1098            addc    a,(_get_freq_freq100_1_1_23 + 1)
040C FB        1099            mov     r3,a
040D E5B2      1100            mov     a,(_get_freq_freq100_2_1_23 + 2)
040F 3562      1101            addc    a,(_get_freq_freq100_1_1_23 + 2)
0411 FC        1102            mov     r4,a
0412 E5B3      1103            mov     a,(_get_freq_freq100_2_1_23 + 3)
0414 3563      1104            addc    a,(_get_freq_freq100_1_1_23 + 3)
0416 8A82      1105            mov     dpl,r2
0418 8B83      1106            mov     dph,r3
041A 8CF0      1107            mov     b,r4
041C 120000    1108            lcall   ___slong2fs
041F AA82      1109            mov     r2,dpl
0421 AB83      1110            mov     r3,dph
0423 ACF0      1111            mov     r4,b
0425 FD        1112            mov     r5,a
0426 E4        1113            clr     a
0427 C0E0      1114            push    acc
0429 C0E0      1115            push    acc
042B C0E0      1116            push    acc
042D 7440      1117            mov     a,#0x40
042F C0E0      1118            push    acc
0431 8A82      1119            mov     dpl,r2
0433 8B83      1120            mov     dph,r3
0435 8CF0      1121            mov     b,r4
0437 ED        1122            mov     a,r5
0438 120000    1123            lcall   ___fsdiv
043B AA82      1124            mov     r2,dpl
043D AB83      1125            mov     r3,dph
043F ACF0      1126            mov     r4,b
0441 FD        1127            mov     r5,a
0442 E581      1128            mov     a,sp
0444 24FC      1129            add     a,#0xfc
0446 F581      1130            mov     sp,a
0448 8A82      1131            mov     dpl,r2
044A 8B83      1132            mov     dph,r3
044C 8CF0      1133            mov     b,r4
044E ED        1134            mov     a,r5
044F 020000    1135            ljmp    ___fs2sint
0452           1136            rseg R_CSEG
0452           1137   
0000           1138            rseg R_XINIT
0000           1139   
0000           1140            rseg R_CONST
0000           1141   
0000           1142            CSEG
0000           1143   
0000           1144   end
